var searchIndex = JSON.parse('{\
"devimint":{"doc":"","t":"DNDDDDDDEDDNMMMMMMMMMMMLLLLLLMMMMLLLLLOLLLLLLLFLLLMMMMAFMMALLLLLLMMLLLLLLLLLLLLMMMLLFMMMLLLLLLLLLLLLLAALLLDNDDDREDDDNMMMMMMLLMMLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLFMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLMFFLLLLLLLLLLLLLLMLLLFDDDQDDIDRDDDILMLLLLLLLLLLLLLLLLLLMLLKLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLFFFLLLFFFLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDILLLLOLLLLLLLLLLLLLLLLLLFLKLLLLLLFLLLL","n":["Bitcoind","Cln","DevFed","Electrs","Esplora","ExternalDaemons","Faucet","Gatewayd","LightningNode","Lightningd","Lnd","Lnd","_bitcoind","_bitcoind","_bitcoind","_process","_process","_process","_process","_process","bitcoind","bitcoind","bitcoind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client","cln","cln","clone","clone","clone_into","clone_into","cmd","cmd","connect_fed","deref","deref","deref","deref_mut","deref_mut","deref_mut","dev_fed","drop","drop","drop","electrs","electrs","esplora","esplora","external","external_daemons","faucet","fed","federation","from","from","from","from_ref","from_ref","gateway_id","gw_cln","gw_lnd","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","ln","lnd","lnd","new","new","open_channel","process","process","rpc","set_lightning_node","stop_lightning_node","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","util","vars","vzip","vzip","vzip","Bitcoind","Cln","Electrs","Esplora","ExternalDaemons","GATEWAY_CLN_EXTENSION","LightningNode","Lightningd","LightningdProcessHandle","Lnd","Lnd","_bitcoind","_bitcoind","_bitcoind","_process","_process","_process","await_block_processing","await_block_processing","bitcoind","bitcoind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","client","client","client_lock","cln","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","electrs","esplora","external_daemons","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_new_address","get_raw_transaction","get_txout_proof","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lnd","mine_blocks","name","new","new","new","new","new","open_channel","process","process","pub_key","pub_key","request","rpc","send_to","start","start","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BASE_PORT","Client","Federation","Fedimintd","_bitcoind","await_all_peers","await_block_sync","await_gateways_registered","await_minimum_blocks","bitcoind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client_balance","clone","clone_into","cmd","cmd","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","federation_id","fork_client","from","from","from","from_ref","generate_epochs","get_finality_delay","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","members","new","new","new_forked","path","pegin","pegin_gateway","process","run_dkg","set_config_gen_params","start_server","terminate","terminate_server","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_gateway","vars","vzip","vzip","vzip","wait_server_status","ClnLightningCli","Command","FedimintCli","Fut","GatewayClnCli","GatewayLndCli","JsonValueExt","LnCli","POLL_INTERVAL","ProcessHandle","ProcessHandleInner","ProcessManager","ToCmdExt","arg","args_debug","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","clone","clone_into","cmd","cmd","cmd","cmd","cmd","cmd","cmd","command_debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","env","envs","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","get_command_for_alias","globals","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_running","kill_on_drop","name","new","out_json","out_string","poll","poll_max_retries","poll_value","run","run_inner","run_with_logging","send_sigkill","send_signal","send_sigterm","spawn_daemon","terminate","to_owned","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FM_API_URL","FM_BIND_API","FM_BIND_METRICS_API","FM_BIND_P2P","FM_BITCOIN_RPC_KIND","FM_BITCOIN_RPC_URL","FM_BTC_CLIENT","FM_BTC_DIR","FM_CLN_DIR","FM_CLN_EXTENSION_LISTEN_ADDRESS","FM_CLN_SOCKET","FM_DATA_DIR","FM_DATA_DIR","FM_DB_TOOL","FM_ELECTRS_DIR","FM_ESPLORA_DIR","FM_FAUCET_BIND_ADDR","FM_FED_SIZE","FM_GATEWAY_API_ADDR","FM_GATEWAY_DATA_DIR","FM_GATEWAY_LIGHTNING_ADDR","FM_GATEWAY_LISTEN_ADDR","FM_GATEWAY_PASSWORD","FM_GWCLI_CLN","FM_GWCLI_LND","FM_LIGHTNING_CLI","FM_LNCLI","FM_LND_DIR","FM_LND_MACAROON","FM_LND_RPC_ADDR","FM_LND_TLS_CERT","FM_LOGS_DIR","FM_MINT_CLIENT","FM_MINT_RPC_CLIENT","FM_P2P_URL","FM_READY_FILE","FM_TEST_BITCOIND_RPC","FM_TEST_DIR","FM_TEST_FAST_WEAK_CRYPTO","FM_TMP_DIR","Fedimintd","Global","ToEnvVar","borrow","borrow","borrow_mut","borrow_mut","declare_vars","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","init","init","into","into","into_request","into_request","into_request","into_request","mkdir","new","to_env_value","try_from","try_from","try_into","try_into","type_id","type_id","utf8","vars","vars","vzip","vzip"],"q":[[0,"devimint"],[106,"devimint::external"],[297,"devimint::federation"],[378,"devimint::util"],[557,"devimint::vars"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","easy syntax to create a Command","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base port for devimint","<code>fedimint-cli</code> instance (basically path with client state: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fork the built-in client of <code>Federation</code> and give it a name","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a <code>Client</code> that starts with a state that is a copy of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kills process when all references to ProcessHandle are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Run the command and get its output as json.","Run the command and get its output as json.","","Will retry calling <code>f</code> until it returns <code>Ok(true)</code> or <code>retries</code> …","","Run the command ignoring its output.","","Run the command logging the output and error","","","","Logs to $FM_LOGS_DIR/{name}.{out,err}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,13,0,0,0,0,0,0,0,0,0,13,16,23,24,14,23,24,1,2,9,8,15,8,1,2,8,1,2,14,16,9,8,1,2,1,2,1,0,1,8,1,2,8,1,2,0,8,1,2,9,8,9,8,0,0,8,8,0,8,1,2,1,2,1,8,8,8,1,2,8,1,2,8,8,1,1,2,2,1,9,8,1,2,0,15,16,15,1,1,1,2,8,1,2,8,1,2,8,1,2,0,0,8,1,2,0,13,0,0,0,0,0,0,0,0,13,16,23,24,14,23,24,15,16,9,15,25,9,14,15,16,13,23,24,25,9,14,15,16,13,23,24,14,14,16,16,9,14,15,16,13,23,24,14,15,16,13,23,24,25,9,14,15,16,13,23,24,25,9,14,15,16,13,23,24,25,25,9,14,15,16,13,23,24,9,9,0,25,9,14,15,16,13,23,24,14,15,16,13,23,24,14,14,14,25,9,14,14,15,16,13,23,24,25,9,14,15,16,13,23,24,25,25,9,9,14,14,15,15,16,16,13,13,23,23,24,24,9,14,13,14,15,16,23,24,0,15,16,15,16,15,15,14,15,16,25,15,16,14,15,16,13,23,24,25,9,14,15,16,13,23,24,25,9,14,15,16,13,23,24,25,9,14,15,16,13,23,24,25,9,14,15,16,13,23,24,0,0,0,0,33,4,4,4,4,4,4,34,33,4,34,33,4,4,33,33,4,34,4,34,33,4,34,33,4,34,33,4,4,4,34,33,33,4,4,4,34,33,4,34,33,4,4,34,34,33,33,4,4,4,33,34,34,4,4,33,0,0,4,33,4,33,4,34,33,4,34,33,4,34,33,4,4,4,34,33,0,0,0,0,70,0,0,0,0,0,0,0,0,0,3,3,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,53,31,31,70,48,49,50,51,52,3,3,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,53,3,3,31,53,7,3,48,49,50,51,52,31,53,31,0,7,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,7,7,3,3,48,48,49,49,50,50,51,51,52,52,31,31,53,53,31,3,53,7,3,3,0,0,0,3,3,3,0,0,0,7,31,31,71,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,7,3,48,49,50,51,52,31,53,38,38,38,38,60,60,60,60,60,60,60,60,38,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,38,60,60,60,60,60,0,0,0,60,38,60,38,0,60,38,60,38,60,38,60,38,60,60,38,38,60,38,60,60,38,38,0,60,72,60,38,60,38,60,38,0,60,38,60,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1,1],[2,2],[[]],[[]],[1,3],0,[[1,4],5],[6],[6],[6],[6],[6],[6],[7,[[5,[8]]]],[6],[6],[6],0,0,0,0,0,[7,[[5,[9]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[1,[[5,[10]]]],0,0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],11],[[],12],[[],11],[[],12],[[],12],[[],11],0,0,0,[[7,13],[[5,[1]]]],[7,[[5,[2]]]],[[14,15,16],5],0,0,0,[[1,13]],[1,5],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,5],[16,5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[20,[19]]]],0,0,[16,[[5,[[22,[21]]]]]],0,[14,14],[15,15],[16,16],[13,13],[23,23],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[25],[6],[6],[6],[6],[6],[6],[6],0,0,[7,[[5,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[5,[10]]]],[[14,26],[[5,[10]]]],[[14,26],[[5,[10]]]],[[],6],[[],6],[[],6],[19,5],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],11],[[],11],[[],12],[[],11],[[],12],[[],11],[[],12],[[],11],[[],12],[[],12],[[],11],[[],12],[[],11],[[],12],[[],11],0,[[14,27],5],[13,28],[7,[[5,[14]]]],[[7,14],[[5,[15]]]],[[7,14],[[5,[16]]]],[[7,14],[[5,[23]]]],[[7,14],[[5,[24]]]],[[14,15,16],5],0,0,[15,[[5,[10]]]],[16,[[5,[10]]]],[[15,29],5],0,[[14,10,27],[[5,[26]]]],[[7,30],[[5,[31]]]],[7,5],[25,5],[15,5],[16,5],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[4,5],[4,[[5,[27]]]],[4,5],[4,5],0,[[]],[[]],[[]],[[]],[[]],[[]],[4,[[5,[32]]]],[4,[[5,[27]]]],[33,33],[[]],[4,3],[34,3],[6],[6],[6],[6],[6],[6],[6],[6],[6],[4,10],[[4,35],[[5,[34]]]],[[]],[[]],[[]],[[]],[[4,6],5],[4,[[5,[36,37]]]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],11],[[],12],[[],12],[[],11],[[],11],[[],12],[4,[[5,[10]]]],0,[[7,14,6],[[5,[4]]]],[[7,14,6,38],[[5,[33]]]],[35,[[5,[34]]]],0,[[4,27],5],[[4,27,1],5],0,[[[41,[39,40]],[43,[39,42]]],5],[[40,44,45],5],[[4,7,6],5],[33,5],[[4,6],5],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[4,1],5],0,[[]],[[]],[[]],[[40,46],5],0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,47],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[31,31],[[]],[[]],[48,3],[49,3],[50,3],[51,3],[52,3],0,[3,10],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[53],[[3,[55,[54]],[55,[54]]],3],[[3,56],3],[[31,57],58],[[53,57],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35],3],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],12],[[],11],[[],12],[[],11],[[],12],[[],12],[[],11],[[],11],[[],12],[[],11],[[],12],[[],12],[[],11],[[],12],[[],11],[[],12],[[],11],[31,59],[[3,59],3],0,[60,7],[3,[[5,[61]]]],[3,[[5,[10]]]],[[35,62],5],[[35,6,62],5],[[35,62],5],[3,5],[3,[[5,[63]]]],[[3,10],5],[64],[[64,65]],[64],[[7,35,3],[[5,[31]]]],[31,5],[[]],[[],[[5,[66]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[6],[6],[6],[6],[6],[6],[[]],[[]],[[],6],[[30,6],[[5,[60]]]],[[60,42],[[5,[38]]]],[[],6],[[]],[[]],[[],12],[[],11],[[],11],[[],12],[67,[[5,[67]]]],[[30,6],[[5,[60]]]],[[],[[68,[10]]]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[30,35],[60,69],[38,69],[[]],[[]]],"c":[],"p":[[3,"Gatewayd"],[3,"Faucet"],[3,"Command"],[3,"Federation"],[6,"Result"],[15,"usize"],[3,"ProcessManager"],[3,"DevFed"],[3,"ExternalDaemons"],[3,"String"],[3,"Request"],[3,"Request"],[4,"LightningNode"],[3,"Bitcoind"],[3,"Lightningd"],[3,"Lnd"],[4,"Result"],[3,"TypeId"],[3,"Client"],[3,"Arc"],[6,"LightningClient"],[3,"MappedMutexGuard"],[3,"Electrs"],[3,"Esplora"],[3,"LightningdProcessHandle"],[3,"Txid"],[15,"u64"],[4,"LightningNodeName"],[8,"IntoRequest"],[3,"Path"],[3,"ProcessHandle"],[6,"UserClient"],[3,"Fedimintd"],[3,"Client"],[15,"str"],[15,"u32"],[3,"Error"],[3,"Fedimintd"],[3,"PeerId"],[3,"WsAdminClient"],[3,"BTreeMap"],[3,"ConfigGenParams"],[3,"HashMap"],[3,"ApiAuth"],[6,"ServerModuleConfigGenParamsRegistry"],[4,"ServerStatus"],[8,"ToString"],[3,"FedimintCli"],[3,"LnCli"],[3,"ClnLightningCli"],[3,"GatewayClnCli"],[3,"GatewayLndCli"],[3,"ProcessHandleInner"],[3,"OsStr"],[8,"AsRef"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Global"],[4,"Value"],[8,"Fn"],[3,"Output"],[3,"Child"],[4,"Signal"],[8,"DeserializeOwned"],[3,"PathBuf"],[4,"Option"],[8,"Iterator"],[8,"ToCmdExt"],[8,"JsonValueExt"],[8,"ToEnvVar"]]},\
"faucet":{"doc":"","t":"DDLLMMMLLLLMLLLLLLLLLLFLLLLLMMFLLLLLLLLLLLLL","n":["Cmd","Faucet","augment_args","augment_args_for_update","bind_addr","bitcoin","bitcoind_rpc","borrow","borrow","borrow_mut","borrow_mut","cln_socket","clone","clone_into","command","command_for_update","from","from","from_arg_matches","from_arg_matches_mut","from_ref","generate_invoice","get_invite_code","group_id","into","into","into_request","into_request","invite_code","ln_rpc","main","new","pay_invoice","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip"],"q":[[0,"faucet"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,2,4,4,2,4,2,4,2,2,4,4,4,2,4,4,2,2,0,4,4,2,4,2,4,2,0,2,2,2,4,2,4,2,4,2,4,4,4,2],"f":[0,0,[1,1],[1,1],0,0,0,[[]],[[]],[[]],[[]],0,[2,2],[[]],[[],1],[[],1],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[4,5]]]],[[]],[[2,7],[[9,[8]]]],[[[10,[8]]],[[9,[8]]]],[[],[[10,[11]]]],[[]],[[]],[[],12],[[],12],0,0,[[],9],[4,[[9,[2]]]],[[2,8],9],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[4,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[]],[[]]],"c":[],"p":[[3,"Command"],[3,"Faucet"],[3,"ArgMatches"],[3,"Cmd"],[6,"Error"],[4,"Result"],[15,"u64"],[3,"String"],[6,"Result"],[4,"Option"],[3,"Id"],[3,"Request"],[3,"TypeId"]]},\
"fedimint_aead":{"doc":"","t":"DDRDLLMFLLLLLLLMFLLLFFFLLLLLLLFFMLLLMLLLLFLLLLLLLLLLLLLLL","n":["Aad","LessSafeKey","NONCE_LEN","UnboundKey","algorithm","algorithm","algorithm","argon2","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cpu_features","decrypt","empty","encode_hex","encode_hex_upper","encrypt","encrypted_read","encrypted_write","fmt","fmt","from","from","from","from","from","get_encryption_key","get_random_nonce","inner","into","into","into","key","new","new","open_in_place","open_within","random_salt","seal_in_place","seal_in_place_append_tag","seal_in_place_separate_tag","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"fedimint_aead"]],"d":["The additionally authenticated data (AAD) for an opening …","Immutable keys for use in situations where <code>OpeningKey</code>/…","All the AEADs we support use 96-bit nonces.","An AEAD key without a designated role or nonce sequence.","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","Constructs Argon2 with default params, easier if the weak …","","","","","","","","","Decrypts a <code>ciphertext</code> using <code>key</code>.","Construct an empty <code>Aad</code>.","","","Encrypt <code>plaintext</code> using <code>key</code>.","Reads encrypted data from a file","Write <code>data</code> encrypted to a <code>file</code> with a random <code>nonce</code> that …","","","Construct the <code>Aad</code> from the given bytes.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Key used to encrypt and authenticate data stored on the …","Get a random nonce.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Constructs an <code>UnboundKey</code>.","Constructs a <code>LessSafeKey</code> from an <code>UnboundKey</code>.","Like <code>OpeningKey::open_in_place()</code>, except it accepts an …","Like <code>OpeningKey::open_within()</code>, except it accepts an …","Generates a B64-encoded random salt string of the …","Deprecated. Renamed to <code>seal_in_place_append_tag()</code>.","Like <code>SealingKey::seal_in_place_append_tag()</code>, except it …","Like <code>SealingKey::seal_in_place_separate_tag()</code>, except it …","","","","","","","","","","","",""],"i":[0,0,0,0,1,3,1,0,8,8,1,3,8,1,3,1,0,8,8,8,0,0,0,1,3,8,8,1,1,3,0,0,1,8,1,3,3,1,3,3,3,0,3,3,3,8,1,3,8,1,3,8,1,3,8,1,3],"f":[0,0,0,0,[1,2],[3,2],0,[[],4],[[[8,[[7,[[6,[5]]]]]]],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[6,[5]],3],[[9,[[6,[5]]]]]],[[],[[8,[[10,[5]]]]]],[[],[[12,[11]]]],[[],[[12,[11]]]],[[[13,[5]],3],[[9,[[13,[5]]]]]],[[3,14],[[9,[[13,[5]]]]]],[[[13,[5]],3,14],9],[[1,15],[[17,[16]]]],[[3,15],[[17,[16]]]],[[[7,[[6,[5]]]]],[[8,[[7,[[6,[5]]]]]]]],[[]],[[]],[[[18,[2]]],1],[[]],[[19,19],[[9,[3]]]],[[],20],0,[[]],[[]],[[]],0,[[2,[6,[5]]],[[17,[1,21]]]],[1,3],[[3,20,[8,[[7,[[6,[5]]]]]],[6,[5]]],[[17,[[6,[5]],21]]]],[[3,20,[8,[[7,[[6,[5]]]]]],[6,[5]],[23,[22]]],[[17,[[6,[5]],21]]]],[[],24],[[3,20,[8,[[7,[[6,[5]]]]]],[0,[[25,[[6,[5]]]],[26,[5]]]]],[[17,[21]]]],[[3,20,[8,[[7,[[6,[5]]]]]],[0,[[25,[[6,[5]]]],[26,[5]]]]],[[17,[21]]]],[[3,20,[8,[[7,[[6,[5]]]]]],[6,[5]]],[[17,[27,21]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],28],[[],28],[[],28],[[]],[[]],[[]]],"c":[42],"p":[[3,"UnboundKey"],[3,"Algorithm"],[3,"LessSafeKey"],[3,"Argon2"],[15,"u8"],[15,"slice"],[8,"AsRef"],[3,"Aad"],[6,"Result"],[15,"array"],[15,"char"],[8,"FromIterator"],[3,"Vec"],[3,"PathBuf"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Okm"],[15,"str"],[3,"Nonce"],[3,"Unspecified"],[15,"usize"],[3,"RangeFrom"],[3,"String"],[8,"AsMut"],[8,"Extend"],[3,"Tag"],[3,"TypeId"]]},\
"fedimint_atomic_broadcast":{"doc":"This module implements fedimints custom atomic broadcast …","t":"NDDNNENNDENDNEDMLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLFAAAMLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMAMMMAMMMMMMMAMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLLMMMLMMLLMLLLLFFRNGDRNELLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLDDDLLLLLLMFLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFMLLLLLLLLLLLLLMLLLLLLLLDLLLLLLLMLLLLDLLLLLLLLLLLLMLLLLMMMLLLLLLLLLDDGLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLFDLLLLLLLLLLLLLLLL","n":["Accept","AtomicBroadcast","Block","Block","BlockRequest","Decision","Discard","Everyone","Keychain","Message","NetworkData","OrderedItem","Peer","Recipient","SignedBlock","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash_sha256","conversion","data_provider","db","db","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalization_handler","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","header","index","index","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","item","items","keychain","keychain","keypair","mempool_item_receiver","network","network_data_receiver","outgoing_message_sender","peer_id","peer_id","public_keys","relay_handle","secp","session","signatures","signed_block_receiver","spawner","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","AtomicBroadcast","borrow","borrow_mut","db","from","into","into_request","keychain","mempool_item_receiver","network_data_receiver","new","outgoing_message_sender","relay_handle","run_session","shutdown","signed_block_receiver","try_from","try_into","type_id","vzip","to_node_index","to_peer_id","BYTE_LIMIT","Batch","ConsensusItem","DataProvider","ITEM_LIMIT","Signature","UnitData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","equivalent","equivalent","fmt","from","from","from_ref","get_data","hash","into","into","into_request","into_request","is_valid","keychain","leftover_item","mempool_item_receiver","new","signature_receiver","submitted_items","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SignedBlockKey","UnitSaver","UnitsKey","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","complete_session","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","db","emit_bool","emit_bool","emit_i16","emit_i16","emit_i32","emit_i32","emit_i64","emit_i64","emit_i8","emit_i8","emit_slice","emit_slice","emit_u16","emit_u16","emit_u32","emit_u32","emit_u64","emit_u64","emit_u8","emit_u8","flush","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into_request","into_request","into_request","load_block","new","open_session","session_index","to_bytes","to_bytes","to_bytes","to_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","units_index","vzip","vzip","vzip","write","write","write_all","write_fixedint","write_varint","FinalizationHandler","borrow","borrow_mut","data_finalized","from","into","into_request","new","sender","try_from","try_into","type_id","vzip","Keychain","bootstrap_multi","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","index","into","into_request","is_complete","keypair","new","node_count","peer_count","peer_id","peer_id","public_keys","secp","sign","tagged_hash","threshold","to_owned","try_from","try_into","type_id","verify","vzip","Hasher","Network","NetworkData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","from","from","from_ref","hash","into","into","into_request","into_request","network_data_receiver","new","next_event","outgoing_message_sender","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","run","Spawner","borrow","borrow_mut","clone","clone_into","from","from_ref","into","into_request","new","spawn","spawn_essential","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"fedimint_atomic_broadcast"],[160,"fedimint_atomic_broadcast::broadcast"],[180,"fedimint_atomic_broadcast::conversion"],[182,"fedimint_atomic_broadcast::data_provider"],[230,"fedimint_atomic_broadcast::db"],[310,"fedimint_atomic_broadcast::finalization_handler"],[323,"fedimint_atomic_broadcast::keychain"],[353,"fedimint_atomic_broadcast::network"],[388,"fedimint_atomic_broadcast::session"],[389,"fedimint_atomic_broadcast::spawner"]],"d":["","The atomic broadcast instance run once by every peer.","All items ordered in a session that have been accepted by …","","","This enum specifies whether an OrderedItem has been …","","","This keychain implements naive threshold schnorr …","The majority of these messages need to be delivered to the …","","If two correct nodes obtain two ordered items from the …","","This enum defines the intended destination of a Message.","A signed block combines a block with the naive threshold …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","A blocks header consists of 40 bytes formed by its index …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","This function starts the atomic broadcast instance. A …","","","The receiver returns a sequence of items which is a …","This function shuts down the serving of blocks and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The UnitSaver enables aleph bft to store its local …","","","","","","","","","The function removes the units stored by aleph bft and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","This function loads the aleph bft backup from disk and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","this function completes a session with the following steps:","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[3,0,0,1,1,0,3,2,0,0,1,0,2,0,0,6,1,2,3,4,5,6,1,2,3,4,5,6,0,1,2,3,4,5,6,1,2,3,4,5,6,1,4,5,6,1,4,5,6,1,4,5,6,0,0,0,0,34,2,3,4,5,2,2,3,3,4,4,5,5,0,1,2,3,4,5,6,1,2,3,4,5,6,1,4,5,6,1,2,3,4,5,6,5,4,5,1,2,3,4,5,6,1,2,3,4,5,6,4,5,0,34,30,34,0,34,34,30,4,30,34,30,0,6,34,0,1,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,40,0,0,0,40,0,46,40,46,40,40,40,40,40,40,40,40,40,40,40,40,46,40,40,46,40,46,40,46,40,40,46,46,46,46,46,46,40,40,46,40,46,40,46,40,46,40,0,0,0,59,52,53,59,52,53,59,0,52,53,52,53,52,53,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,52,53,59,52,53,52,52,53,53,59,52,53,59,52,53,0,59,0,59,52,52,53,53,59,52,53,59,52,53,59,52,53,59,59,52,53,59,59,59,59,59,0,63,63,63,63,63,63,63,63,63,63,63,63,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,70,69,70,69,69,69,69,69,69,69,70,69,69,69,70,69,70,69,70,70,70,70,70,69,70,69,70,69,70,69,70,69,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[7,8],[[10,[1,9]]]],[[7,8],[[10,[4,9]]]],[[7,8],[[10,[5,9]]]],[[7,8],[[10,[6,9]]]],[[1,11],[[10,[12,13]]]],[[4,11],[[10,[12,13]]]],[[5,11],[[10,[12,13]]]],[[6,11],[[10,[12,13]]]],[11,[[10,[12,13]]]],[11,[[10,[12,13]]]],[11,[[10,[12,13]]]],[11,[[10,[12,13]]]],[14,15],0,0,0,0,[[2,2],16],[[3,3],16],[[4,4],16],[[5,5],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[1,17],18],[[2,17],18],[[3,17],18],[[4,17],18],[[5,17],18],[[6,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[25,[19]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[28,[19,27]]]],[[],[[28,[19,27]]]],[[],[[28,[19,27]]]],[[],[[28,[19,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[]],[[]],[[],26],0,0,0,[[30,31,[32,[[28,[19]]]],32,33],34],0,0,[[34,35],[[37,[36]]]],[34],0,[[],10],[[],10],[[],29],[[]],[38,39],[39,38],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[40,40],[[]],[41,[[10,[40,42]]]],[[[20,[19]]],[[10,[42]]]],[[43,[20,[19]]],[[10,[42]]]],[[43,41],[[10,[42]]]],[[40,[0,[44,45]]]],[[40,40],16],[[],16],[[],16],[[40,17],18],[[]],[[]],[[]],[46,[[49,[[48,[47]]]]]],[[40,50]],[[]],[[]],[[],26],[[],26],[40,16],0,0,0,[[30,[32,[[28,[19]]]],[51,[[36,[[25,[19]]]]]]],46],0,0,[[[20,[19]]],[[28,[19,27]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[31,35,6]],[[7,8],[[10,[52,9]]]],[[7,8],[[10,[53,9]]]],[[52,11],[[10,[12,13]]]],[[53,11],[[10,[12,13]]]],[11,[[10,[12,13]]]],[11,[[10,[12,13]]]],0,[16,[[10,[13]]]],[16,[[10,[13]]]],[54,[[10,[13]]]],[54,[[10,[13]]]],[55,[[10,[13]]]],[55,[[10,[13]]]],[56,[[10,[13]]]],[56,[[10,[13]]]],[57,[[10,[13]]]],[57,[[10,[13]]]],[[[20,[19]]],[[10,[13]]]],[[[20,[19]]],[[10,[13]]]],[58,[[10,[13]]]],[58,[[10,[13]]]],[43,[[10,[13]]]],[43,[[10,[13]]]],[35,[[10,[13]]]],[35,[[10,[13]]]],[19,[[10,[13]]]],[19,[[10,[13]]]],[59,60],[[52,17],18],[[53,17],18],[[]],[[]],[[]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[[20,[19]],[23,[21,22]]],[[10,[24]]]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[31,35],[[36,[6]]]],[[31,35,35],59],[[31,35]],0,[[],[[28,[19,27]]]],[[],[[28,[19,27]]]],[[],[[28,[19,27]]]],[[],[[28,[19,27]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[],29],0,[[]],[[]],[[]],[[59,[20,[19]]],[[60,[12]]]],[[[20,[19]]]],[[[20,[19]]],[[10,[13]]]],[61,[[10,[12,13]]]],[62,[[10,[12,13]]]],0,[[]],[[]],[[63,40]],[[]],[[]],[[],26],[[[33,[40]]],63],0,[[],10],[[],10],[[],29],[[]],0,[[30,39]],[[]],[[]],[30,30],[[]],[[30,17],18],[[]],[[]],[30,39],[[]],[[],26],[[30,[20,[19]]],16],0,[[38,[65,[38,64]],66],30],[30,67],[30,12],[30,38],0,0,0,[[30,[20,[19]]],[[49,[[48,[47]]]]]],[[30,[20,[19]]],68],[30,12],[[]],[[],10],[[],10],[[],29],[[30,[20,[19]],39],16],[[]],0,0,0,[[]],[[]],[[]],[[]],[69,69],[[]],[[69,69],16],[[],16],[[],16],[[69,17],18],[[]],[[]],[[]],[[[20,[19]]]],[[]],[[]],[[],26],[[],26],0,[[[32,[[28,[19]]]],33],70],[70,[[49,[[48,[47]]]]]],0,[[70,[71,[69,40]],72]],[[]],[[],10],[[],10],[[],10],[[],10],[[],29],[[],29],[[]],[[]],[[35,30,[73,[[28,[19]]]],59,[32,[[28,[19]]]],[32,[[28,[19]]]],33,[74,[36]],[32,[6]]],[[75,[6]]]],0,[[]],[[]],[76,76],[[]],[[]],[[]],[[]],[[],26],[[],76],[[76,77,[0,[47,78]]]],[[76,77,[0,[47,78]]],79],[[]],[[],10],[[],10],[[],29],[[]]],"c":[],"p":[[4,"Message"],[4,"Recipient"],[4,"Decision"],[3,"OrderedItem"],[3,"Block"],[3,"SignedBlock"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[8,"Encodable"],[3,"Hash"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[15,"array"],[3,"Request"],[3,"Global"],[3,"Vec"],[3,"TypeId"],[3,"Keychain"],[3,"Database"],[3,"Receiver"],[3,"Sender"],[3,"AtomicBroadcast"],[15,"u64"],[4,"Option"],[3,"Receiver"],[3,"PeerId"],[3,"NodeIndex"],[4,"UnitData"],[8,"Input"],[3,"Error"],[15,"u32"],[8,"Output"],[8,"Sized"],[3,"DataProvider"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Hasher"],[3,"Receiver"],[3,"SignedBlockKey"],[3,"UnitsKey"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u16"],[3,"UnitSaver"],[6,"Result"],[8,"FixedInt"],[8,"VarInt"],[3,"FinalizationHandler"],[3,"PublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[3,"NodeCount"],[3,"Message"],[3,"Hasher"],[3,"Network"],[3,"NetworkData"],[4,"Recipient"],[3,"Cursor"],[3,"Sender"],[6,"Result"],[3,"Spawner"],[15,"str"],[8,"Send"],[6,"TaskHandle"]]},\
"fedimint_bip39":{"doc":"BIP39 client secret support crate","t":"DLLLLLLLLLLLLLL","n":["Bip39RootSecretStrategy","borrow","borrow_mut","consensus_decode","consensus_encode","fmt","from","into","into_request","random","to_root_secret","try_from","try_into","type_id","vzip"],"q":[[0,"fedimint_bip39"]],"d":["BIP39 root secret encoding strategy allowing retrieval of …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[0,[[]],[[]],[1,[[3,[2]]]],[4,[[6,[5]]]],[[7,8],9],[[]],[[]],[[],10],[[[0,[11,12]]]],[[],13],[[],3],[[],3],[[],14],[[]]],"c":[],"p":[[8,"Read"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[6,"Result"],[3,"Bip39RootSecretStrategy"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"RngCore"],[8,"CryptoRng"],[3,"DerivableSecret"],[3,"TypeId"]]},\
"fedimint_bitcoind":{"doc":"","t":"DDDIIRRRGDRRMALLLLLLLLLLLLFKLLLAALLLLLLLLLLLKLKLKLKLKLKLMMMLLLLLLLLLFLKLMLLLLLLLLLLLLLLLLLLKLDDLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BITCOIN_RPC_REGISTRY","DynBitcoindRpc","DynBitcoindRpcFactory","IBitcoindRpc","IBitcoindRpcFactory","MAINNET_GENESIS_BLOCK_HASH","RETRY_SLEEP_MAX_MS","RETRY_SLEEP_MIN_MS","Result","RetryClient","SIGNET_GENESIS_BLOCK_HASH","TESTNET_GENESIS_BLOCK_HASH","__private_field","bitcoincore","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_bitcoind","create_connection","deref","deref","deref","electrum","esplora","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","get_block_count","get_block_count","get_block_hash","get_block_hash","get_fee_rate","get_fee_rate","get_network","get_network","get_tx_block_height","get_tx_block_height","get_txout_proof","get_txout_proof","inner","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","new","register_bitcoind","retry_call","submit_transaction","submit_transaction","task_handle","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","watch_script_history","watch_script_history","BitcoinClient","BitcoindFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","from_url_to_url_auth","get_block_count","get_block_hash","get_fee_rate","get_network","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","ElectrumClient","ElectrumFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","get_block_count","get_block_hash","get_fee_rate","get_network","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","EsploraClient","EsploraFactory","borrow","borrow","borrow_mut","borrow_mut","create_connection","fmt","fmt","from","from","get_block_count","get_block_hash","get_fee_rate","get_network","get_tx_block_height","get_txout_proof","into","into","into_request","into_request","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history"],"q":[[0,"fedimint_bitcoind"],[93,"fedimint_bitcoind::bitcoincore"],[126,"fedimint_bitcoind::electrum"],[158,"fedimint_bitcoind::esplora"]],"d":["Global factories for creating bitcoin RPCs","","","Trait that allows interacting with the Bitcoin blockchain","Trait for creating new bitcoin RPC clients","","","","<code>Result&lt;T, Error&gt;</code>","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","","","","","","","","","","","","","","","","","Create a bitcoin RPC of a given kind","Creates a new bitcoin RPC client connection","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the current block count","","Returns the block hash at a given height","","Estimates the fee rate for a given confirmation target. …","","Returns the Bitcoin network the node is connected to","","Check if a transaction is included in a block","","Returns a prooft that a tx is included in the bitcoin …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Register a new factory for creating bitcoin RPCs","Retries with an exponential backoff from <code>RETRY_SLEEP_MIN_MS</code>…","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","","","","Watches for a script and returns any transactions …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,7,0,7,1,2,14,7,1,2,14,1,2,1,2,0,15,7,1,2,0,0,1,2,14,7,1,1,2,2,14,1,2,18,14,18,14,18,14,18,14,18,14,18,14,1,2,14,7,1,2,14,7,1,2,14,14,0,14,18,14,14,1,2,7,1,2,14,7,1,2,14,7,1,2,14,7,1,2,14,18,14,0,0,33,34,33,34,33,33,34,33,34,0,34,34,34,34,34,34,33,34,33,34,34,34,33,34,33,34,33,34,33,34,34,0,0,36,35,36,35,35,36,35,36,35,36,36,36,36,36,36,36,35,36,35,36,36,36,35,36,35,36,35,36,35,36,0,0,37,38,37,38,37,37,38,37,38,38,38,38,38,38,38,37,38,37,38,38,38,37,38,37,38,37,38,37,38,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[3,4],[[5,[2]]]],[[6,4],[[5,[2]]]],[7,[[10,[[9,[8,1]]]]]],[1],[2],0,0,[[1,11],12],[[2,11],12],[[[14,[13]],11],12],[[]],[[[0,[15,16,17]]],1],[[]],[[]],[[[0,[18,16,17]]],2],[[]],[[]],[[]],[[],[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]]],[[21,[[20,[19]]]]]],[24,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],24],[[21,[[20,[19]]]]]],[25,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],25],[[21,[[20,[19]]]]]],[[],[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]]],[[21,[[20,[19]]]]]],[26,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],26],[[21,[[20,[19]]]]]],[26,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],26],[[21,[[20,[19]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[4,14],[[8,1]],[[14,28],5],[29,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],29],[[21,[[20,[19]]]]]],0,[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[32,[[21,[[20,[19]]]]]],[[[14,[[0,[18,22,23]]]],32],[[21,[[20,[19]]]]]],0,0,[[]],[[]],[[]],[[]],[[33,6,4],[[5,[2]]]],[[33,11],12],[[34,11],12],[[]],[[]],[6,5],[34,[[21,[[20,[19]]]]]],[[34,24],[[21,[[20,[19]]]]]],[[34,25],[[21,[[20,[19]]]]]],[34,[[21,[[20,[19]]]]]],[[34,26],[[21,[[20,[19]]]]]],[[34,26],[[21,[[20,[19]]]]]],[[]],[[]],[[],27],[[],27],[6,[[5,[34]]]],[[34,29],[[21,[[20,[19]]]]]],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],[[34,32],[[21,[[20,[19]]]]]],0,0,[[]],[[]],[[]],[[]],[[35,6,4],[[5,[2]]]],[[36,11],12],[[35,11],12],[[]],[[]],[36,[[21,[[20,[19]]]]]],[[36,24],[[21,[[20,[19]]]]]],[[36,25],[[21,[[20,[19]]]]]],[36,[[21,[[20,[19]]]]]],[[36,26],[[21,[[20,[19]]]]]],[[36,26],[[21,[[20,[19]]]]]],[[]],[[]],[[],27],[[],27],[6,[[5,[36]]]],[[36,29],[[21,[[20,[19]]]]]],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],[[36,32],[[21,[[20,[19]]]]]],0,0,[[]],[[]],[[]],[[]],[[37,6,4],[[5,[2]]]],[[37,11],12],[[38,11],12],[[]],[[]],[38,[[21,[[20,[19]]]]]],[[38,24],[[21,[[20,[19]]]]]],[[38,25],[[21,[[20,[19]]]]]],[38,[[21,[[20,[19]]]]]],[[38,26],[[21,[[20,[19]]]]]],[[38,26],[[21,[[20,[19]]]]]],[[]],[[]],[[],27],[[],27],[6,[[5,[38]]]],[[38,29],[[21,[[20,[19]]]]]],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[]],[[]],[[38,32],[[21,[[20,[19]]]]]]],"c":[],"p":[[3,"DynBitcoindRpcFactory"],[3,"DynBitcoindRpc"],[3,"BitcoinRpcConfig"],[3,"TaskHandle"],[6,"Result"],[3,"Url"],[3,"BITCOIN_RPC_REGISTRY"],[3,"String"],[3,"BTreeMap"],[3,"Mutex"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"RetryClient"],[8,"IBitcoindRpcFactory"],[8,"MaybeSend"],[8,"MaybeSync"],[8,"IBitcoindRpc"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Sync"],[8,"Send"],[15,"u64"],[15,"u16"],[3,"Txid"],[3,"Request"],[8,"Fn"],[3,"Transaction"],[4,"Result"],[3,"TypeId"],[3,"Script"],[3,"BitcoindFactory"],[3,"BitcoinClient"],[3,"ElectrumFactory"],[3,"ElectrumClient"],[3,"EsploraFactory"],[3,"EsploraClient"]]},\
"fedimint_build":{"doc":"","t":"RRFF","n":["FORCE_GIT_HASH_ENV","GIT_HASH_ENV","set_code_version","set_code_version_inner"],"q":[[0,"fedimint_build"]],"d":["Env variable to set to force git hash during build process","Env variable the cargo will set during crate build to pass …","",""],"i":[0,0,0,0],"f":[0,0,[[]],[[],[[2,[1]]]]],"c":[],"p":[[3,"String"],[4,"Result"]]},\
"fedimint_cli":{"doc":"","t":"F","n":["main"],"q":[[0,"fedimint_cli"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[6,"Result"]]},\
"fedimint_client":{"doc":"Client library for fedimintd","t":"DDDDDNEEDRNIGGNDGNRDLKLLKLLMMLLLLALLLLLLLLLLLLLLLLLLLLLFLLLLLKLMKLMFLLLLLLLLLMMLLLLLLALMMMKLLLMLLCLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLFFFLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLAKLMMMMLMLLMALLMMLLLMLMALFAOLFFLLLLLLLALKLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLDDNDDNDDNDNEDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIGQDIQGQKLKLKLLLLLKKKLKLKLLLLLLKLKLAMKKLLKKKLKLKLKLLLLLLKLIGDIQKLLLLLLKLLLLLKKMLLKKKLLLLLDDNNELLLLLLLFLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLMLLLLLLLLLLLLLLLLLIQDIRRLLKLKLKKLLLLKLKLLLLLDDIDDDDIQIDQDDDDDIDMKLLMMKLLLLLMMMMAMLLLLKLAMLLLLLLLMMLLMMMMLAKKMMLAMLLLMKKMLLLALDLLMLLLLMLLLLLLNDDEDDDNGRDDEDNDDDDDNRGMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMMMMMMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDDDMLLLLLLMMLLLLMMLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLIDDQIIQDIDGGKKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLKKLLMMLLLLLMKKLLMLLLLLLLLLLLLLLLLIQKNDDNNRNNRDDEEAMMMMMAMMFMMMMMMNDDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLMMFMMLLLLLLLLLLLLLLLLLLLLLNNNRRRNNRDEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLFLLLLLLMMMMMM","n":["Client","ClientBuilder","ClientInner","ClientModuleInstance","ClientSecret","Config","ConfigSource","DatabaseSource","DynGlobalClientContext","EXTERNAL_SECRET_CHILD_ID","Fresh","IGlobalClientContext","InstancelessDynClientInput","InstancelessDynClientOutput","Invite","ModuleGlobalClientContext","ModuleGlobalContextGen","Reuse","SUPPORTED_CORE_API_VERSIONS","TransactionUpdates","add_state_machine","add_state_machine_dyn","add_state_machine_dyn","add_state_machines","api","api","api","api","api","await_primary_module_output","await_primary_module_output","await_tx_accepted","await_tx_accepted","backup","backup_to_federation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_up_state","build","build_restoring_from_backup","build_stopped","builder","claim_input","claim_input_dyn","claim_input_dyn","client","client_config","client_config","client_count","client_decoders","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","config","config_source","consensus_decode","consensus_encode","consensus_encode_dyn","context_gen","create_backup","create_encrypted_backup","db","db","db","db","db","decoders","decoders","decoders","decoders","decoders","default","deref","derivable_secret","discover_common_api_version","discover_common_api_version_static","download_backup_from_federation","drop","erased_serialize","executor","external_secret","federation_id","federation_id","federation_meta","finalize_and_submit_transaction","finalize_and_submit_transaction","finalize_transaction","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_ref","from_ref","from_ref","from_ref","fund_output","fund_output_dyn","fund_output_dyn","get_active_operations","get_backup_id","get_balance","get_client_root_secret","get_client_root_secret_encoding","get_config","get_config","get_derived_backup_encryption_key","get_derived_backup_encryption_key_static","get_derived_backup_signing_key","get_derived_backup_signing_key_static","get_first_instance","get_first_module","get_internal_payment_markers","get_meta","get_module","get_module_client_dyn","get_secret","id","inner","inner","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","load_and_refresh_common_api_version_static","module","module_api","module_api","module_inits","module_inits","module_instance_id","modules","new","operation","operation_exists","operation_log","operation_log","oplog","primary_module","primary_module","primary_module_instance","primary_module_instance","refresh_common_api_version_static","restore_from_backup","root_secret","root_secret","root_secret_encoding","secp_ctx","secret","serialize","set_client_root_secret","sm","sm_enum_variant_translation","start_executor","states_add_instance","states_to_instanceless_dyn","subscribe_balance_changes","supported_api_versions_summary_static","to_bytes","to_owned","to_owned","to_owned","to_owned","transaction","transaction_builder_balance","transaction_update_stream","transaction_update_stream","transaction_update_stream","transaction_updates","try_download_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_module","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_stream","upload_backup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_state","with_config","with_database","with_dyn_database","with_invite_code","with_module","with_module_inits","with_old_client_database","with_primary_module","ClientBackup","EncryptedClientBackup","Metadata","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","decode","decrypt_with","deserialize","deserialize","empty","encode","encrypt_to","epoch_count","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","from","from","from","from_bytes","from_bytes","from_json_serialized","from_raw","from_ref","get_alignment_size","into","into","into","into_backup_request","into_raw","into_request","into_request","into_request","is_empty","is_empty","len","metadata","modules","serialize","serialize","to_bytes","to_bytes","to_json_deserialized","to_json_value","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CachedApiVersionSet","CachedApiVersionSetKey","ChronologicalOperationLog","ChronologicalOperationLogKey","ChronologicalOperationLogKeyPrefix","ClientConfig","ClientConfigKey","ClientConfigKeyPrefix","ClientSecret","ClientSecretKey","CommonApiVersionCache","DbKeyPrefix","DbKeyPrefixIter","OperationLog","OperationLogKey","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","creation_time","default","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","id","idx","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","operation_id","operation_id","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ClientModule","ClientModuleRegistry","Common","DynClientModule","IClientModule","ModuleStateMachineContext","StateGenerator","States","as_any","as_ref","await_primary_module_output","await_primary_module_output","backup","backup","borrow","borrow_mut","clone","clone_into","context","context","create_exact_output","create_exact_output","create_sufficient_input","create_sufficient_input","decoder","decoder","deref","fmt","from","from","from_ref","get_balance","get_balance","handle_cli_command","handle_cli_command","init","inner","input_amount","input_amount","into","into_request","output_amount","output_amount","restore","restore","subscribe_balance_changes","subscribe_balance_changes","supports_backup","supports_backup","supports_being_primary","supports_being_primary","to_owned","try_from","try_into","type_id","vzip","wipe","wipe","ClientModuleInit","ClientModuleInitRegistry","DynClientModuleInit","IClientModuleInit","Module","as_common","as_ref","as_ref","borrow","borrow_mut","clone","clone_into","decoder","deref","fmt","from","from","from_ref","init","init","inner","into","into_request","module_kind","supported_api_versions","supported_api_versions","to_owned","try_from","try_into","type_id","vzip","OperationLog","OperationLogEntry","Outcome","UpdateStream","UpdateStreamOrOutcome","add_operation_log_entry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","caching_operation_update_stream","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","db","deserialize","erased_serialize","fmt","fmt","from","from","from","from_bytes","from_ref","get_operation","get_operation_inner","into","into","into","into_request","into_request","into_request","into_stream","list_operations","meta","meta","new","operation_type","operation_type","optimistically_set_operation_outcome","outcome","outcome","outcome_or_updates","serialize","set_operation_outcome","to_bytes","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DeriveableSecretClientExt","Encoding","PlainRootSecretStrategy","RootSecretStrategy","TYPE_BACKUP","TYPE_MODULE","borrow","borrow_mut","consensus_decode","consensus_decode","consensus_encode","consensus_encode","derive_backup_secret","derive_module_secret","fmt","from","into","into_request","random","random","to_root_secret","to_root_secret","try_from","try_into","type_id","vzip","ActiveState","ClientSMDatabaseTransaction","Context","DynContext","DynState","Executor","ExecutorBuilder","GlobalContext","GlobalContext","IState","InactiveState","ModuleContext","ModuleNotifier","Notifier","NotifierSender","OperationId","OperationState","State","StateTransition","_pd","as_any","borrow","borrow_mut","broadcast","broadcast","clone","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","created_at","created_at","db","db","dbtx","dbtx","deserialize","eq","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","executor","exited_at","fmt","fmt","from","from_bytes","from_ref","from_str","hash","inner","inner","into","into_request","module_contexts","module_instance","module_instance","module_instance_id","new_random","notifier","operation_id","operation_id","operation_id","sender","serialize","state","state","to_bytes","to_owned","to_string","transition","transitions","transitions","trigger","try_from","try_into","type_id","util","vzip","ClientSMDatabaseTransaction","borrow","borrow_mut","dbtx","from","global_tx","into","into_request","module_instance","module_tx","new","try_from","try_into","type_id","vzip","Active","ActiveModuleOperationStateKeyPrefix","ActiveOperationStateKeyPrefix","ActiveOrInactiveState","ActiveState","ActiveStateKey","ActiveStateKeyPrefix","ActiveStates","ContextGen","EXECUTOR_POLL_INTERVAL","Executor","ExecutorBuilder","ExecutorDbPrefixes","ExecutorInner","Inactive","InactiveModuleOperationStateKeyPrefix","InactiveOperationStateKeyPrefix","InactiveState","InactiveStateKey","InactiveStateKeyPrefix","InactiveStates","MAX_DB_ATTEMPTS","TransitionForActiveState","_pd","_pd","_pd","_pd","add_state_machines","add_state_machines_dbtx","await_active_state","await_inactive_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contains_active_state","contains_inactive_state","context","created_at","created_at","db","default","drop","execute_next_state_transitions","exited_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_state","from_state","get_active_operations","get_active_states","get_active_states","get_inactive_states","get_transition_for","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inactive","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","module_contexts","module_contexts","module_instance","module_instance","new","new","new","notifier","notifier","operation_id","operation_id","operation_id","operation_id","operation_id","operation_id","run","shutdown_executor","start_executor","state","state","stop_executor","stop_executor","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module_dyn","active_state","dyn_state","dyn_state","ModuleNotifier","Notifier","NotifierSender","_pd","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","clone","clone","clone_into","clone_into","db","db","fmt","from","from","from","from_ref","from_ref","into","into","into","into_request","into_request","into_request","module_instance","module_notifier","new","notify","notify","sender","sender","subscribe","subscribe_all_operations","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Context","DynContext","DynState","GlobalContext","IContext","IState","ModuleContext","OperationState","State","StateTransition","StateTransitionFunction","TriggerFuture","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_typed","from_typed","inner","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","is_terminal","module_instance_id","module_instance_id","module_instance_id","new","operation_id","operation_id","operation_id","operation_id","operation_id","state","to_bytes","to_bytes","to_owned","to_owned","to_owned","transition","transitions","transitions","transitions","transitions","trigger","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","MapStateTransitions","State","map","Accepted","ClientInput","ClientOutput","ConsensusRejected","Created","LOG_TARGET","Rejected","SubmitRejected","TRANSACTION_SUBMISSION_MODULE_INSTANCE","TransactionBuilder","TxSubmissionContext","TxSubmissionError","TxSubmissionStates","builder","input","inputs","keys","output","outputs","sm","state_machines","state_machines","tx_submission_sm_decoder","error","next_submission","tx","txid","txid","txid","Balanced","ClientInput","ClientOutput","Overfunded","TransactionBuilder","TransactionBuilderBalance","Underfunded","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","equivalent","equivalent","fmt","from","from","from","from","from_ref","from_ref","from_ref","input","inputs","into","into","into","into","into_dyn","into_dyn","into_request","into_request","into_request","into_request","keys","new","output","outputs","state_gen_to_dyn","state_machines","state_machines","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_input","with_output","Accepted","ConsensusRejected","Created","FETCH_INTERVAL","LOG_TARGET","RESUBMISSION_INTERVAL","Rejected","SubmitRejected","TRANSACTION_SUBMISSION_MODULE_INSTANCE","TxSubmissionContext","TxSubmissionError","TxSubmissionStates","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_ref","from_ref","from_ref","into","into","into","into_dyn","into_dyn","into_request","into_request","into_request","operation_id","operation_id","provide","serialize","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","transitions","transitions","trigger_created_accepted","trigger_created_submit","try_from","try_from","try_from","try_into","try_into","try_into","tx_submission_sm_decoder","type_id","type_id","type_id","vzip","vzip","vzip","error","next_submission","tx","txid","txid","txid"],"q":[[0,"fedimint_client"],[274,"fedimint_client::backup"],[350,"fedimint_client::db"],[548,"fedimint_client::module"],[606,"fedimint_client::module::init"],[637,"fedimint_client::oplog"],[700,"fedimint_client::secret"],[726,"fedimint_client::sm"],[807,"fedimint_client::sm::dbtx"],[822,"fedimint_client::sm::executor"],[1109,"fedimint_client::sm::executor::ActiveOrInactiveState"],[1112,"fedimint_client::sm::notifier"],[1165,"fedimint_client::sm::state"],[1277,"fedimint_client::sm::util"],[1280,"fedimint_client::transaction"],[1303,"fedimint_client::transaction::TxSubmissionStates"],[1309,"fedimint_client::transaction::builder"],[1383,"fedimint_client::transaction::sm"],[1472,"fedimint_client::transaction::sm::TxSubmissionStates"]],"d":["","","","Resources particular to a module instance","Secret input key material from which the <code>DerivableSecret</code> …","","","","Global state and functionality provided to all state …","","","","","","","Global state given to a specific client module and state. …","","","List of core api versions supported by the implementation. …","See <code>Client::transaction_updates</code>","Allows adding state machines from inside a transition to …","Adds a state machine to the executor.","","","Returns a reference to the client’s federation API …","","","Module-specific API","","Waits for an output from the primary module to reach its …","","Waits for the transaction to be accepted or rejected as …","","Client backup","Prepare an encrypted backup and send it to federation for …","","","","","","","","","","","","","","","","","","","","","Not sure why I couldn’t just directly call <code>Box::new</code> ins …","Build a <code>Client</code> and start its executor","","Build a <code>Client</code> but do not start the executor","Initialize a client builder that can be configured to …","Creates a transaction that with an output of the primary …","This function is mostly meant for internal use, you are …","","","","","Number of <code>Client</code> instances using this <code>ClientInner</code>.","","","","","","","","","","","","","","","","","Create a backup, include provided <code>metadata</code>","Create a backup, include provided <code>metadata</code>, and encrypt it …","Database keys used by the client","","Module-specific DB","","","","","","","","","","","","Query the federation for API version support and then …","Download most recent valid backup found from the Federation","","","","Secret that is derived from the seed used by the client …","","","","Add funding and/or change to the transaction builder as …","","Adds funding to a transaction or removes overfunding via …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a transaction with the supplied output and funding …","This function is mostly meant for internal use, you are …","","","Backup id derived from the root secret key (public key …","Balance available to the client for spending","Fetches the client secret from the database or generates a …","Fetches the client secret encoding from the database or …","","Returns the config with which the client was initialized.","","Static version of <code>Self::get_derived_backup_encryption_key</code> …","","Static version of <code>Self::get_derived_backup_signing_key</code> for …","Returns the instance id of the first module of the given …","Returns a reference to a typed module client instance by …","","","Returns a reference to the module, panics if not found","","","Instance id of the module","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Load the common api versions to use from cache and start a …","Module client interface definitions","Returned a reference client’s module API client, so that …","","","","","","","","","","","Operation log subsystem of the client","Get the primary module","","","","","Restore client state from backup download from federation …","","","Returns the data from which the client’s root secret is …","","Secret handling &amp; derivation","","Sets the client secret in the database, returns if an old …","Client state machine interfaces and executor implementation","","","","","Returns a stream that yields the current client balance …","<code>SupportedApiVersionsSummary</code> that the client and its …","","","","","","Structs and interfaces to construct Fedimint transactions","Determines if a transaction is underfunded, overfunded or …","","","","Returns a stream of transaction updates for the given …","Tries to download the client config from the federation, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Upload <code>backup</code> to federation","","","","","","","","","","","Wipe the client state (including module state)","FIXME: https://github.com/fedimint/fedimint/issues/2769","Uses this database to store the client state","Uses this database to store the client state, allowing for …","Uses this invite code to connect to the federation","Make module generator available when reading the config","Replace module generator registry entirely","Re-uses the database of an old client. Useful for …","Uses this module with the given instance id as the primary …","Client state backup","Encrypted version of <code>ClientBackup</code>.","Backup metadata","","","","","","","","","","","","","","","Decode from a plaintexet (possibly aligned) message","","","","Create empty metadata","Encode <code>self</code> to a padded (but still plaintext) message","Encrypt with a key and turn into <code>EncryptedClientBackup</code>","Epoch count taken right before taking the backup","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create metadata as json from typed <code>val</code>","","","Align an ecoded message size up for better privacy","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Is metadata empty","","Application metadata","Module specific-backup (if supported)","","","","","Attempt to deserialize metadata as typed json","Attempt to deserialize metadata as untyped json (…","","","","","","","","","","","","","","","","","Key used to lookup operation log entries in chronological …","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint module client","","Common module types shared between client and server","","Type-erased version of <code>ClientModule</code>","Data and API clients available to state machine …","","All possible states this client can submit to the executor","","","","Waits for the funds from an output created by …","","","","","","","","","","Creates an output of <strong>exactly</strong> <code>amount</code> that will pay into the …","","Creates an input of <strong>at least</strong> a given <code>min_amount</code> from the …","","","","","Returns the argument unchanged.","","","","Returns the balance held by this module and available for …","","","","","Returns the amount represented by the input and the fee …","","Calls <code>U::from(self)</code>.","","Returns the amount represented by the output and the fee …","","","","","Returns a stream that will output the updated module …","","","","Does this module support being a primary module","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Initialize a <code>ClientModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","","","Api versions of the corresponding server side module’s …","See <code>ClientModuleInit::supported_api_versions</code>","","","","","","","","","","Either a stream of operation updates if the operation hasn…","","","","","","","","Wraps an operation update stream such that the last update …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a stream no matter if the operation is finished. …","Returns the last <code>limit</code> operations. To fetch the next page, …","","","","","","Tries to set the outcome of an operation, but only logs an …","Returns the last state update of the operation, if any was …","","Returns an a <code>UpdateStreamOrOutcome</code> enum that can be …","","Sets the outcome of an operation","","","","","","","","","","","","","","","","Type representing the secret","Just uses 64 random bytes and derives the secret from them","Trait defining a way to generate, serialize and …","","","","","Deserialization function for the external encoding","","Serialization function for the external encoding","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Random generation function for the external secret type","","Conversion function from the external encoding to the …","","","","","","","A transaction that acts as isolated for module code but …","Additional data made available to state machines of a …","A shared context for a module client state machine","A type-erased state of a state machine belonging to a …","Executor that drives forward state machines under its …","Builder to which module clients can be attached and used …","Context given to all state machines","Additional resources made available for all state …","Object-safe version of <code>State</code>","","Additional resources made available in this module’s …","State transition notifier for a specific module instance …","State transition notifier owned by the modularized client …","Notifier send handle that can be shared to places where we …","Unique identifier for one semantic, correlatable operation.","","Implementors act as state machines that can be executed","Represents one or multiple possible state transitions …","<code>S</code> limits the type of state that can be subscribed to to …","","","","Broadcast channel used to send state transitions to all …","","Clone state","","","","","","","","Database used to load all states that happened before …","Database used to load all states that happened before …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","Generate random <code>OperationId</code>","Helper to notify modules about state transitions","Operation this state machine belongs to. See <code>OperationId</code> …","Operation this state machine belongs to. See <code>OperationId</code> …","","","","State machine state interface","","","","","State transition function that, using the output of the …","All possible transitions from the current state to other …","All possible transitions from the state","Future that will block until a state transition is …","","","","","","A transaction that acts as isolated for module code but …","","","","Returns the argument unchanged.","Returns the non-isolated database transaction only …","Calls <code>U::from(self)</code>.","","","Returns the isolated database transaction for the module.","","","","","","","","","","","A state that is able to make progress eventually","","See <code>ActiveStateKey</code>","","Wait time till checking the DB for new state machines when …","Executor that drives forward state machines under its …","Builder to which module clients can be attached and used …","Prefixes for executor DB entries","","","","","","A past or final state of a state machine","","See <code>InactiveStateKey</code>","After how many attempts a DB transaction is aborted with …","","","","","","Adds a number of state machines to the executor …","Adds a number of state machines to the executor atomically …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build <code>Executor</code> and spawn background task in <code>tasks</code> …","Creates an <code>ExecutorBuilder</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>Mostly used for testing</strong>","<strong>Mostly used for testing</strong>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns all IDs of operations that have active state …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the <code>Notifier</code> that can be used to …","","","","","","","","","","Starts the background thread that runs the state machines. …","","","See <code>Executor::stop_executor</code>.","Stops the background task that runs the state machines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow executor being built to run state machines …","Allow executor being built to run state machines …","","","","State transition notifier for a specific module instance …","State transition notifier owned by the modularized client …","Notifier send handle that can be shared to places where we …","<code>S</code> limits the type of state that can be subscribed to to …","","","","","","","Broadcast channel used to send state transitions to all …","","","","","","Database used to load all states that happened before …","Database used to load all states that happened before …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new notifier for a specific module instance that …","","Notify all subscribers of a state transition","Notify all subscribers of a state transition","Create a <code>NotifierSender</code> handle that lets the owner trigger …","","Subscribe to state transitions belonging to an operation …","Subscribe to all state transitions belonging to the module …","","","","","","","","","","","","","","","Additional data made available to state machines of a …","A shared context for a module client state machine","A type-erased state of a state machine belonging to a …","Additional resources made available for all state …","Something that can be a <code>DynContext</code> for a state machine","Object-safe version of <code>State</code>","Additional resources made available in this module’s …","","Implementors act as state machines that can be executed","Represents one or multiple possible state transitions …","","","","","","","","","","","","","","Clone state","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","<code>true</code> if this state allows no further transitions","","","","Creates a new <code>StateTransition</code> where the <code>trigger</code> future …","Operation this state machine belongs to. See <code>OperationId</code> …","Operation this state machine belongs to. See <code>OperationId</code> …","","","","","","","","","","State transition function that, using the output of the …","All possible transitions from the current state to other …","All possible transitions from the state","","","Future that will block until a state transition is …","","","","","","","","","","","","","","","","","","","","The transaction has been accepted after consensus was …","","","","The transaction has been created and potentially already …","","The transaction has been rejected, either by a quorum on …","","Reserved module instance id used for client-internal state …","","","","State machine to (re-)submit a transaction till it is …","","","","","","","State machine for submitting transactions","","","","","","","We need this filed to be able to submit multiple …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction has been accepted after consensus was …","","The transaction has been created and potentially already …","Every how many seconds the transaction status is checked","","Every how many seconds an unconfirmed transaction gets …","The transaction has been rejected, either by a quorum on …","","Reserved module instance id used for client-internal state …","","","State machine to (re-)submit a transaction till it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We need this filed to be able to submit multiple …","",""],"i":[0,0,0,0,0,38,0,0,0,0,168,0,0,0,38,0,0,168,0,0,1,63,11,12,63,12,11,169,21,12,21,22,1,0,12,12,169,21,22,168,29,1,11,27,38,12,169,21,22,168,29,1,11,27,38,0,27,27,27,12,1,63,11,11,63,11,21,0,12,1,11,38,12,1,11,38,21,21,27,29,29,29,21,12,12,0,12,169,21,27,63,12,21,11,21,27,1,0,12,12,12,12,29,21,12,12,21,21,12,21,21,21,29,1,11,12,169,21,22,168,29,1,1,1,11,27,38,29,12,1,11,38,1,63,11,12,12,12,0,0,0,12,12,12,12,12,12,12,12,12,21,12,12,169,12,1,12,169,21,22,168,29,1,11,27,38,12,169,21,22,168,29,1,11,27,38,12,0,63,11,21,27,11,21,29,11,21,12,21,0,12,21,21,27,12,12,12,21,12,21,0,29,0,0,0,12,0,0,12,12,29,12,1,11,38,0,21,63,21,11,12,0,12,169,21,22,168,29,1,11,27,38,21,12,169,21,22,168,29,1,11,27,38,12,169,21,22,168,29,1,11,27,38,22,12,12,169,21,22,168,29,1,11,27,38,12,27,27,27,27,27,27,27,27,0,0,0,47,26,46,47,26,46,26,26,26,46,26,46,26,46,46,47,26,46,26,46,46,46,26,46,26,26,46,46,26,46,26,46,47,26,46,26,46,26,26,26,46,47,26,46,47,26,47,26,46,47,26,47,46,46,26,46,26,46,26,26,26,47,26,46,47,26,46,47,26,46,47,26,46,0,0,103,0,0,103,0,0,103,0,103,0,0,103,0,104,103,104,106,107,105,111,108,109,110,112,103,104,106,107,105,111,108,109,110,112,103,104,105,103,104,105,106,107,105,108,109,110,106,107,105,111,108,109,110,112,106,107,105,111,108,109,110,112,105,106,106,107,105,110,103,103,106,107,105,111,108,109,110,112,103,104,106,107,105,111,108,109,110,112,106,106,107,107,105,105,108,108,109,110,110,103,104,105,104,110,104,103,104,106,107,105,111,108,109,110,112,104,103,104,106,107,105,111,108,109,110,112,103,104,104,104,104,104,107,105,106,107,105,110,104,106,106,107,107,105,105,111,108,108,109,110,110,112,103,104,105,103,103,104,106,107,105,111,108,109,110,112,103,104,106,107,105,111,108,109,110,112,103,104,106,107,105,111,108,109,110,112,103,104,106,107,105,111,108,109,110,112,0,0,170,0,0,170,0,170,80,85,80,170,80,170,85,85,85,85,170,80,80,170,80,170,80,170,85,85,85,85,85,80,170,80,170,0,85,170,80,85,85,170,80,80,170,80,170,80,170,80,170,85,85,85,85,85,80,170,0,0,0,0,97,124,34,34,34,34,34,34,124,34,34,34,34,34,97,124,34,34,34,124,97,124,34,34,34,34,34,0,0,132,132,0,84,132,84,131,132,84,131,0,84,84,131,131,131,84,131,131,84,131,132,84,131,131,84,84,84,132,84,131,132,84,131,132,84,131,131,84,131,131,84,131,131,131,131,84,131,84,132,84,131,132,84,131,132,84,131,132,84,131,0,28,0,0,0,0,135,135,28,135,28,135,171,171,135,135,135,135,28,135,28,135,135,135,135,135,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,126,7,18,18,128,126,7,18,18,18,18,18,141,142,128,126,0,2,18,18,18,18,7,18,0,142,18,18,18,18,18,18,18,117,118,18,18,143,2,126,118,18,0,3,7,93,157,18,0,93,18,18,18,139,3,7,139,18,18,18,0,18,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,153,0,0,0,0,0,0,172,0,0,0,0,0,0,153,0,0,0,0,0,172,0,0,147,148,150,151,117,117,117,117,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,143,117,117,141,144,145,142,117,141,144,145,142,146,141,144,142,146,147,148,149,141,144,150,151,145,142,146,147,148,149,141,144,150,151,145,142,117,117,152,141,142,152,143,152,152,142,152,117,143,146,147,148,149,141,144,150,151,145,142,153,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,146,146,141,144,144,142,117,141,144,145,142,146,144,117,152,117,152,152,117,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,141,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,152,143,148,151,149,141,145,117,152,146,147,148,144,150,151,152,152,117,146,144,152,117,146,146,147,148,149,141,144,144,150,151,145,142,117,141,144,145,142,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,172,152,117,143,146,147,148,149,141,144,150,151,145,142,153,143,143,173,173,174,0,0,0,126,157,128,126,157,128,126,128,126,128,126,128,126,128,126,126,157,128,126,128,126,157,128,126,157,128,126,126,128,128,157,128,128,157,126,126,128,126,157,128,126,157,128,126,157,128,126,157,128,126,0,0,0,3,0,0,3,0,0,0,0,0,7,159,93,139,14,118,93,139,14,118,93,7,14,118,93,93,14,118,93,14,93,14,93,14,93,14,118,14,14,93,14,14,93,93,7,93,14,118,93,139,14,118,93,14,93,14,118,14,118,93,14,118,118,139,14,118,93,93,139,14,118,93,14,14,118,118,139,3,7,93,93,93,93,14,93,14,118,93,139,3,7,93,93,139,139,14,118,93,139,14,118,93,139,14,118,93,139,14,118,93,0,175,175,92,0,0,24,92,0,92,24,0,0,0,0,0,0,31,60,31,71,60,0,31,71,0,176,177,177,177,178,176,91,0,0,91,0,0,91,31,71,60,91,31,71,60,91,60,31,71,60,31,71,60,60,91,91,91,91,31,71,60,91,31,71,60,31,60,31,71,60,91,31,71,31,71,60,91,31,60,71,60,0,31,71,31,71,60,31,71,60,91,31,71,60,91,31,71,60,91,31,71,60,91,60,60,92,24,92,0,0,0,92,24,0,0,0,0,163,92,163,92,24,163,92,24,163,92,92,24,163,92,24,92,24,92,24,92,24,24,92,24,92,92,24,24,92,24,163,92,24,24,163,92,24,92,24,163,92,24,163,92,24,163,92,163,92,24,92,92,24,24,92,24,163,92,24,24,92,92,0,0,163,92,24,163,92,24,0,163,92,24,163,92,24,176,177,177,177,178,176],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[0,[3,4,5]]],6],[[2,[8,[7]]],[[10,[[8,[9]]]]]],[[11,2,[8,[7]]],[[10,[[8,[9]]]]]],[[12,13,[15,[[14,[1]]]]],6],[[],16],[12,17],[11,16],0,0,[[12,18,19],[[6,[20]]]],[[21,18,19],[[6,[20]]]],[[22,23],[[25,[24]]]],[[1,18,23],[[25,[24]]]],0,[[12,26],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[1]]],[[8,[7]]]],[27,[[6,[12]]]],[[27,[29,[28]]],6],[27,[[6,[12]]]],[[],27],[[1,2,[31,[[0,[30,4,5]],[0,[[7,[1]],4,5]]]]]],[[2,32],[[10,[[8,[9]]]]]],[[11,2,32],[[10,[[8,[9]]]]]],0,[[],33],[11,33],0,[[[35,[34]],36],[[6,[37]]]],[12,12],[1,1],[11,11],[38,38],[[]],[[]],[[]],[[]],[21,33],0,0,[[39,37],[[25,[[29,[28]],40]]]],[[[29,[28]],41],[[25,[42,43]]]],[41,[[25,[42,43]]]],[[[44,[21]]],45],[[12,26],[[6,[46]]]],[[12,26],[[6,[47]]]],0,[12,48],0,0,0,[[],37],[12,37],[21,37],[11,37],0,[[],27],[1],0,[12,[[6,[49]]]],[[33,50,16],[[6,[49]]]],[12,[[6,[[51,[46]]]]]],[12],[52,[[25,[53,54]]]],0,[12,55],[12,56],0,0,[[12,18,57,[0,[58,59,4,5]],60],[[6,[23]]]],[[21,13,18,60],6],[[21,13,18,60],6],[[21,61],62],[[[29,[28]],61],62],[[1,61],62],[[11,61],62],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[63,4,5]]],1],[[[44,[63]]],1],[[]],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[]],[[]],[[]],[[]],[[1,2,[71,[[0,[70,4,5]],[0,[[7,[1]],4,5]]]]],6],[[2,72],[[10,[[8,[9]]]]]],[[11,2,72],[[10,[[8,[9]]]]]],[12,[[73,[18]]]],[12,74],[12,20],[48,55],[48],[[48,[51,[38]]],[[6,[33]]]],[12,33],[12,75],[55,75],[12,76],[55,76],[[12,77],[[51,[78]]]],[[12,77]],[12,6],[[12,57],[[51,[79]]]],[[21,78],80],[[12,78],[[6,[80]]]],[12],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[33,[35,[34]],16,48],[[6,[49]]]],0,[[],82],[11,82],0,0,0,0,[[],[[29,[28]]]],0,[[13,18],83],[12,84],0,0,[12,85],[21,85],0,0,[[33,[35,[34]],16,48],[[6,[49]]]],[12,[[6,[26]]]],[12,55],0,[12],0,0,[[[29,[28]],86],25],[[13,[29,[28]]],83],0,0,[12],[[78,[87,[[8,[7]]]]],[[87,[[14,[1]]]]]],[[[87,[[0,[[7,[1]],4,5]]]]],[[87,[[8,[7]]]]]],[12,[[88,[20]]]],[[33,50],89],[[],[[15,[64,90]]]],[[]],[[]],[[]],[[]],0,[[21,60],91],[18,[[10,[[8,[9]]]]]],[[21,18],[[88,[[93,[92]]]]]],[[11,18],[[10,[[8,[9]]]]]],[[12,18],22],[[94,42],[[6,[33]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[21,78],[[51,[80]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],0,[[12,47],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,6],[[27,33]],[[27,96]],[[27,[8,[96]]]],[[27,94]],[[27,97]],[[27,50]],[[27,12]],[[27,78]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[[]],[[39,37],[[25,[26,40]]]],[[39,37],[[25,[46,40]]]],[[26,41],[[25,[42,43]]]],[[46,41],[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[[[65,[64]]],[[6,[46]]]],[[47,75],[[6,[46]]]],[98,[[25,[26]]]],[98,[[25,[46]]]],[[],26],[46,[[6,[[15,[64]]]]]],[[46,75],[[6,[47]]]],0,[[26,26],83],[[46,46],83],[[],83],[[],83],[[],83],[[],83],[52,[[25,[53,54]]]],[52,[[25,[53,54]]]],[[26,61],62],[[46,61],62],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[99,26],[[[15,[64]]],26],[[]],[42,42],[[]],[[]],[[]],[[47,76],[[6,[100]]]],[26,[[15,[64]]]],[[],81],[[],81],[[],81],[47,83],[26,83],[47,42],0,0,[[26,86],25],[[46,86],25],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[26,[[6,[101]]]],[26,[[6,[102]]]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,103],[104,104],[105,105],[[]],[[]],[[]],[[39,37],[[25,[106,40]]]],[[39,37],[[25,[107,40]]]],[[39,37],[[25,[105,40]]]],[[39,37],[[25,[108,40]]]],[[39,37],[[25,[109,40]]]],[[39,37],[[25,[110,40]]]],[[106,41],[[25,[42,43]]]],[[107,41],[[25,[42,43]]]],[[105,41],[[25,[42,43]]]],[[111,41],[[25,[42,43]]]],[[108,41],[[25,[42,43]]]],[[109,41],[[25,[42,43]]]],[[110,41],[[25,[42,43]]]],[[112,41],[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],0,[[],106],[52,[[25,[53,54]]]],[52,[[25,[53,54]]]],[52,[[25,[53,54]]]],[52,[[25,[53,54]]]],[[103,61],62],[[103,61],62],[[[106,[113]],61],62],[[107,61],62],[[105,61],62],[[111,61],62],[[108,61],62],[[109,61],62],[[110,61],62],[[112,61],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[]],[[]],[[]],[[104,42],[[51,[103]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],104],[104,42],0,[104,51],[104,51],[[104,42],51],0,0,[[106,86],25],[[107,86],25],[[105,86],25],[[110,86],25],[104],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[]],[[]],[[]],[[],79],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],114],[85,80],[[18,19],[[10,[[8,[9]]]]]],[[115,18,19],[[10,[[8,[9]]]]]],[[116,[117,[1]],16,78],[[10,[[8,[9]]]]]],[[115,116,[117,[1]],16,78],[[10,[[8,[9]]]]]],[[]],[[]],[85,85],[[]],[[]],[78,118],[[78,13,18,20],[[10,[[8,[9]]]]]],[[115,116,18,20],[[10,[[8,[9]]]]]],[[78,13,18,20],[[10,[[8,[9]]]]]],[[115,116,18,20],[[10,[[8,[9]]]]]],[[],66],[[],66],[85],[[85,61],62],[[]],[[[0,[80,4,5]]],85],[[]],[[78,13],[[10,[[8,[9]]]]]],[[115,116],[[10,[[8,[9]]]]]],[[12,[65,[119]]],[[10,[[8,[9]]]]]],[[115,12,[65,[119]]],[[10,[[8,[9]]]]]],0,0,[[],120],[121,120],[[]],[[],81],[[],120],[122,120],[[13,78,[117,[1]],16,[51,[[65,[64]]]]],[[10,[[8,[9]]]]]],[[115,13,78,[117,[1]],16,[51,[[65,[64]]]]],[[10,[[8,[9]]]]]],[[],[[10,[[8,[9]]]]]],[115,[[10,[[8,[9]]]]]],[[],83],[[],83],[[],83],[[],83],[[]],[[],25],[[],25],[[],95],[[]],[[116,78,[117,[1]]],[[10,[[8,[9]]]]]],[[115,116,78,[117,[1]]],[[10,[[8,[9]]]]]],0,0,0,0,0,[[],123],[34,124],[34,123],[[]],[[]],[34,34],[[]],[[],66],[34],[[34,61],62],[[]],[[[0,[124,4,5]]],34],[[]],[[56,48,125,55,[126,[1]],16,82],[[10,[[8,[9]]]]]],[[56,127,48,78,125,55,[128,[1]],16],[[10,[[8,[9]]]]]],0,[[]],[[],81],[[],77],[[],129],[[],129],[[]],[[],25],[[],25],[[],95],[[]],0,0,0,0,0,[[84,13,18,57,99]],[[]],[[]],[[]],[[]],[[]],[[]],[[48,18,[0,[130,4]]],[[88,[[0,[59,99,113,4,5]]]]]],[84,84],[[]],[[39,37],[[25,[131,40]]]],[[131,41],[[25,[42,43]]]],[41,[[25,[42,43]]]],0,[98,[[25,[131]]]],[52,[[25,[53,54]]]],[[84,61],62],[[131,61],62],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[]],[[84,18],[[51,[131]]]],[[13,18],[[51,[131]]]],[[]],[[]],[[]],[[],81],[[],81],[[],81],[[[132,[[0,[4,5]]]]],[[88,[[0,[4,5]]]]]],[[84,42,[51,[105]]],15],[131,101],0,[48,84],[131,57],0,[[48,18,[0,[99,113]]]],[131,[[51,[101]]]],0,[[131,48,18,133],[[132,[[0,[59,99,101,113,4,5]]]]]],[[131,86],25],[[48,18,[0,[99,113]]],6],[[],[[15,[64,90]]]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[39,[[25,[40]]]],[39,[[25,[40]]]],[41,[[134,[42]]]],[41,[[134,[42]]]],[[],55],[78,55],[[135,61],62],[[]],[[]],[[],81],[[[0,[136,137]]]],[[[0,[136,137]]]],[[],55],[[],55],[[],25],[[],25],[[],95],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],114],[[]],[[]],0,0,[78,14],[18,18],[[]],[[39,37],[[25,[18,40]]]],[[18,41],[[25,[42,43]]]],[41,[[25,[42,43]]]],0,0,0,0,0,0,[98,[[25,[18]]]],[[18,18],83],[[],83],[[],83],[14,83],[52,[[25,[53,54]]]],0,0,[[18,61],62],[[18,61],62],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[]],[57,[[25,[18]]]],[[18,138]],0,0,[[]],[[],81],0,0,0,0,[[],18],0,[[],18],[[],18],0,0,[[18,86],25],0,0,[[],[[15,[64,90]]]],[[]],[[],79],0,[[],[[15,[139]]]],[118,[[15,[[139,[14]]]]]],0,[[],25],[[],25],[[],95],0,[[]],0,[[]],[[]],0,[[]],[2,13],[[]],[[],81],0,[2,116],[[13,78],2],[[],25],[[],25],[[],95],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[117,[140]],[15,[[14,[140]]]]],6],[[[117,[140]],13,[15,[[14,[140]]]]],6],[[[117,[140]],[14,[140]]],141],[[[117,[140]],[14,[140]]],142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[143,48,[128,[140]]],[[117,[140]]]],[[],143],[[[117,[[0,[59,140]]]]],[[117,[[0,[59,140]]]]]],[141,141],[[[144,[59]]],[[144,[59]]]],[[[145,[59]]],[[145,[59]]]],[142,142],[[]],[[]],[[]],[[]],[[]],[[39,37],[[25,[[146,[140]],40]]]],[[39,37],[[25,[141,40]]]],[[39,37],[[25,[[144,[140]],40]]]],[[39,37],[[25,[142,40]]]],[[146,41],[[25,[42,43]]]],[[147,41],[[25,[42,43]]]],[[148,41],[[25,[42,43]]]],[[149,41],[[25,[42,43]]]],[[141,41],[[25,[42,43]]]],[[[144,[140]],41],[[25,[42,43]]]],[[150,41],[[25,[42,43]]]],[[151,41],[[25,[42,43]]]],[[145,41],[[25,[42,43]]]],[[142,41],[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[[[117,[140]],78,3],83],[[[117,[140]],78,3],83],0,0,0,0,[[],143],[152],[[[152,[140]],[44,[58]]],6],0,[[[152,[140]],61],62],[[[117,[[0,[113,140]]]],61],62],[[143,61],62],[[[146,[113]],61],62],[[[147,[113]],61],62],[[[148,[113]],61],62],[[[149,[113]],61],62],[[141,61],62],[[[144,[113]],61],62],[[[150,[113]],61],62],[[[151,[113]],61],62],[[[145,[113]],61],62],[[142,61],62],[[[153,[113]],61],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[]],[[]],[[]],[[]],[[]],[14,146],[14,144],[[[117,[140]]],[[73,[18]]]],[[[152,[140]]],15],[[[117,[140]]],15],[[[152,[140]]],15],[[[152,[140]],[14,[140]],141,[44,[58]]],[[51,[154]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141,142],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],[[],81],0,0,0,0,[[],149],[[],141],[[],145],[[[117,[140]]],[[128,[140]]]],0,0,0,0,0,0,0,[[[152,[140]],[44,[58]]]],0,[[[117,[140]],[44,[58]]]],0,0,[152,[[51,[155]]]],[[[117,[140]]],[[51,[155]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[],95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[143,78,156]],[[143,118]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[128,[59]]],[[128,[59]]]],[[[126,[59,59]]],[[126,[59,59]]]],[[]],[[]],0,0,[[[126,[113,113]],61],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],81],[[],81],[[],81],0,[[128,78],126],[48,128],[[157,14]],[[128,14]],[128,157],0,[[[126,[140,3]],18],[[88,[3]]]],[[[126,[140,3]]],[[88,[3]]]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],114],[[],114],[[],114],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,14],[14,14],[118,118],[[[93,[3]]],[[93,[3]]]],[158,14],[[]],[[]],[[]],[[39,37],[[25,[[14,[140]],40]]]],[[39,37],[[25,[[93,[3]],40]]]],[[14,41],[[25,[42,43]]]],[[[93,[3]],41],[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[14],[118],[14],[[14,14],83],[[[93,[3]],[93,[3]]],83],[[],83],[[],83],[[],83],[[],83],[14,83],[14,83],[[14,61],62],[[118,61],62],[[[93,[113]],61],62],[[]],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[78,[8,[7]]],14],[[78,[44,[159]]],118],[[]],[[]],[[]],[[78,7],14],[[78,[0,[159,4,5]]],118],0,[[]],[[]],[[]],[[]],[[[93,[3]],78]],[[],81],[[],81],[[],81],[[],81],[[14,118],83],[14,78],[118,78],0,[[[0,[9,4]],[0,[58,4,5,59]]],[[139,[[0,[4,5,59]]]]]],[[],18],[[],18],[[],18],[[[93,[3]]],18],0,0,[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[]],[[]],[[]],0,[[],[[15,[139]]]],[118,[[15,[[139,[14]]]]]],[[[93,[3]]],[[15,[[139,[[93,[3]]]]]]]],[118,[[15,[[139,[14]],90]]]],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[],95],[[]],[[]],[[]],[[]],0,0,[[[0,[58,59,4,5]],[0,[58,59,4,5]]],[[15,[[139,[[0,[4,5]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],66],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[60,[162,[[0,[160,161]]]],[0,[136,137]]]],[[[31,[59,59]]],[[31,[59,59]]]],[[[71,[59,59]]],[[71,[59,59]]]],[60,60],[[]],[[]],[[]],[[],60],[[91,91],83],[[],83],[[],83],[[91,61],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[[31,[156,156]],78],31],[[[71,[156,156]],78],71],[[],81],[[],81],[[],81],[[],81],0,[[],60],0,0,[[[87,[156]],78],[[87,[[14,[1]]]]]],0,0,[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],95],[[],95],[[],95],[[],95],[[]],[[]],[[]],[[]],[[60,31],60],[[60,71],60],0,0,0,0,0,0,0,0,0,0,0,0,[[],114],[[],114],[[]],[[]],[[]],[[]],[[]],[[]],[163,163],[158,14],[92,92],[24,24],[[]],[[]],[[]],[[39,37],[[25,[92,40]]]],[[39,37],[[25,[24,40]]]],[[92,41],[[25,[42,43]]]],[[24,41],[[25,[42,43]]]],[41,[[25,[42,43]]]],[41,[[25,[42,43]]]],[98,[[25,[24]]]],[[92,92],83],[[24,24],83],[[],83],[[],83],[[],83],[[],83],[14,83],[52,[[25,[53,54]]]],[[163,61],62],[[92,61],62],[[24,61],62],[[24,61],62],[[]],[[]],[[]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[[65,[64]],[68,[66,67]]],[[25,[69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[163,78]],[[92,78]],[[],81],[[],81],[[],81],[[],18],[92,18],[164],[[24,86],25],[[],[[15,[64,90]]]],[[],[[15,[64,90]]]],[[]],[[]],[[]],[[],79],[[92,1],[[15,[[139,[92]]]]]],[118,[[15,[[139,[14]],90]]]],[[23,1],[[25,[165,79]]]],[[166,167,1],[[25,[23,79]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],66],[[],95],[[],95],[[],95],[[]],[[]],[[]],0,0,0,0,0,0],"c":[],"p":[[3,"DynGlobalClientContext"],[3,"ClientSMDatabaseTransaction"],[8,"State"],[8,"MaybeSend"],[8,"MaybeSync"],[6,"Result"],[8,"IState"],[3,"Box"],[8,"Future"],[3,"Pin"],[3,"ModuleGlobalClientContext"],[3,"Client"],[3,"DatabaseTransaction"],[3,"DynState"],[3,"Vec"],[3,"DynGlobalApi"],[8,"IGlobalFederationApi"],[3,"OperationId"],[3,"OutPoint"],[3,"Amount"],[3,"ClientInner"],[3,"TransactionUpdates"],[3,"TransactionId"],[4,"TxSubmissionError"],[4,"Result"],[3,"Metadata"],[3,"ClientBuilder"],[8,"RootSecretStrategy"],[3,"ClientSecret"],[8,"IInput"],[3,"ClientInput"],[6,"InstancelessDynClientInput"],[3,"ClientConfig"],[3,"DynClientModuleInit"],[3,"ModuleInitRegistry"],[8,"Iterator"],[6,"ModuleDecoderRegistry"],[4,"ConfigSource"],[8,"Read"],[3,"DecodeError"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Arc"],[6,"ModuleGlobalContextGen"],[3,"ClientBackup"],[3,"EncryptedClientBackup"],[3,"Database"],[3,"ApiVersionSet"],[6,"ClientModuleInitRegistry"],[4,"Option"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"DerivableSecret"],[3,"FederationId"],[15,"str"],[8,"Fn"],[8,"Clone"],[3,"TransactionBuilder"],[3,"Formatter"],[6,"Result"],[8,"IGlobalClientContext"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"IOutput"],[3,"ClientOutput"],[6,"InstancelessDynClientOutput"],[3,"HashSet"],[3,"XOnlyPublicKey"],[3,"LessSafeKey"],[3,"KeyPair"],[3,"ModuleKind"],[6,"ModuleInstanceId"],[3,"String"],[8,"IClientModule"],[3,"Request"],[3,"DynModuleApi"],[15,"bool"],[3,"OperationLog"],[3,"DynClientModule"],[8,"Serializer"],[6,"StateGenerator"],[6,"BoxStream"],[3,"SupportedApiVersionsSummary"],[3,"Global"],[4,"TransactionBuilderBalance"],[4,"TxSubmissionStates"],[3,"OperationState"],[3,"InviteCode"],[3,"TypeId"],[8,"IDatabase"],[8,"ClientModuleInit"],[8,"Deserializer"],[8,"Serialize"],[3,"SignedBackupRequest"],[8,"DeserializeOwned"],[4,"Value"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ChronologicalOperationLogKey"],[3,"ClientSecretKey"],[3,"OperationLogKey"],[3,"CachedApiVersionSetKey"],[3,"CachedApiVersionSet"],[3,"ClientConfigKey"],[3,"ChronologicalOperationLogKeyPrefix"],[3,"ClientConfigKeyPrefix"],[8,"Debug"],[8,"Any"],[8,"Sync"],[3,"ModuleDatabaseTransaction"],[3,"Executor"],[3,"DynContext"],[3,"OsString"],[3,"TransactionItemAmount"],[3,"DynInput"],[3,"DynOutput"],[8,"IDynCommonModuleInit"],[8,"IClientModuleInit"],[3,"ApiVersion"],[3,"ModuleNotifier"],[3,"ClientModuleConfig"],[3,"Notifier"],[3,"MultiApiVersion"],[8,"Stream"],[3,"OperationLogEntry"],[4,"UpdateStreamOrOutcome"],[8,"FnOnce"],[6,"Result"],[3,"PlainRootSecretStrategy"],[8,"RngCore"],[8,"CryptoRng"],[8,"Hasher"],[3,"StateTransition"],[8,"GlobalContext"],[3,"ActiveState"],[3,"InactiveState"],[3,"ExecutorBuilder"],[3,"InactiveStateKey"],[3,"InactiveStateKeyPrefix"],[3,"ActiveStateKey"],[3,"ActiveOperationStateKeyPrefix"],[3,"ActiveModuleOperationStateKeyPrefix"],[3,"ActiveStateKeyPrefix"],[3,"InactiveOperationStateKeyPrefix"],[3,"InactiveModuleOperationStateKeyPrefix"],[3,"ExecutorInner"],[4,"ActiveOrInactiveState"],[6,"BoxFuture"],[3,"Receiver"],[8,"IntoDynInstance"],[3,"NotifierSender"],[15,"u16"],[8,"IContext"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[3,"TxSubmissionContext"],[3,"Demand"],[15,"u64"],[3,"Transaction"],[3,"SystemTime"],[4,"DatabaseSource"],[3,"ClientModuleInstance"],[8,"ClientModule"],[8,"DeriveableSecretClientExt"],[4,"ExecutorDbPrefixes"],[13,"Active"],[13,"Inactive"],[8,"MapStateTransitions"],[13,"Rejected"],[13,"Created"],[13,"Accepted"]]},\
"fedimint_client_legacy":{"doc":"","t":"NNNDEDDNENNNGDNNNNNNNNNNNNRNNNNNNRNNDNNNNGNNNNNGDNNNNNLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLMLLLLLMALLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLALMLMMAMLLFLALLLMLALMLLLLLLMLLLLLLLLMLALLLLLLLLMLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALIIIKAKKKKKKKKDGLLLLLLLLLLLLLLLLLLLLLMLLMLLLLMLLLLLLLLLNDEDMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLNDENNDGNNLLLLLLLLLMMMLLLLALLLLMLLLLLLLLLLLLALLLLLLLLLLALLLLLLLLLLLLLLLLLLNDDEDNDDNDDNNDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLLLLDDMLLLLLLLLLLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLNNNNNNNNNRRRDEEDDDNNNGDNNLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLALLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLMMMMLMMMMMLLMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLEDNDDNDDNDNDDNDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCANNEINLLLLLLLLLLLLLLLLLLLLLLLKLLLFFIDLLLLLLLLLLLLLKMALLLLLMLLENNNNEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLDMLLMMLLFLLMFFFFFFMFLLLLNNNNNGDELLLLLLMMLALLLLLLLLLLLLLLLLLLLLLLLLLLLEDNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CancelUnknownOutgoingContract","CancelledContract","CannotHash","Client","ClientError","ClientSecret","ConcurrencyLock","ConfigVerify","ConfigVerifyError","DeleteUnknownOutgoingContract","FailedPaymentNoRefund","FetchOfferError","GatewayClient","GatewayClientConfig","GatewayNotFound","HttpError","InvalidAmountTier","InvalidInvoice","InvalidOffer","InvalidPreimage","InvalidSignature","InvalidSignature","InvalidTransaction","InvoiceError","InvoiceMissingAmount","LnClientError","MINT_SECRET_CHILD_ID","MintApiError","MintClientError","MismatchingConfigs","NoGateways","NoOffer","NotOurKey","OUTGOING_LN_CONTRACT_TIMELOCK","OutgoingPaymentTimeout","OutputOutcome","PaymentParameters","PegInAmountTooSmall","PegOutWaitingForUTXOs","RefundUnknownOutgoingContract","RefundedFailedPayment","Result","SpendReusedNote","Timeout","TimeoutTooClose","UnableToFetchAllNotes","Underfunded","UserClient","UserClientConfig","ViolatedFeePolicy","WaitContractTimeout","WalletClientError","WrongContractType","WrongTransactionType","abort_outgoing_payment","api","api","as_ref","as_ref","await_consensus_block_count","await_consensus_block_count_inner","await_invoice_confirmation","await_outgoing_contract_acceptance","await_outgoing_contract_claimed","await_outgoing_contract_execution","await_outpoint_outcome","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_offer","cancel_outgoing_contract","claim_incoming_contract","claim_outgoing_contract","client_config","clone","clone","clone_into","clone_into","concurrency_lock","concurrency_lock","config","config","config_ref","consensus_decode","consensus_encode","consensus_encode_dyn","context","context","db","db","decoders","deserialize","deserialize","eq","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fees","fetch_active_gateway","fetch_all_notes","fetch_epoch_history","fetch_notes","fetch_outgoing_contract","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_ref","from_ref","fund_outgoing_ln_contract","generate_confirmed_invoice","generate_unconfirmed_invoice","generate_unconfirmed_invoice_and_submit","get_new_pegin_address","get_secret","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_root_secret","invoice_amount","is_maybe_internal_payment","list_active_issuances","list_fetchable_notes","list_pending_claimed_outgoing","list_pending_outgoing","ln","ln_client","max_delay","max_fee_percent","max_send_amount","maybe_internal","mint","mint_channel_id","mint_client","mint_secret_static","module_decode_stubs","module_inits","modules","new","new_peg_out_with_fees","new_with_api","node_pub_key","notes","outcome","pay_to_blind_nonces","payment_hash","peg_in","peg_out","provide","provide","rbf_tx","receive_notes","redeem_key","refund_incoming_contract","register_with_federation","reissue","reissue_pending_notes","remint_ecash","remint_ecash_await","remove_ecash","root_secret","root_secret","save_outgoing_payment","serde_keypair","serialize","serialize","serialize","source","spend_ecash","submit_tx_with_change","summary","switch_active_gateway","timelock_delta","to_bytes","to_gateway_registration_info","to_owned","to_owned","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","validate_note_signatures","validate_outgoing_account","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet_client","LnFederationApi","MintFederationApi","WalletFederationApi","download_ecash_backup","fake","fetch_consensus_block_count","fetch_contract","fetch_gateways","fetch_offer","fetch_peg_out_fees","offer_exists","register_gateway","upload_ecash_backup","FederationApiFaker","Handler","all_peers","await_output_outcome","await_tx_outcome","borrow","borrow_mut","consensus_config_hash","discover_api_version_set","download_backup","download_client_config","download_ecash_backup","fetch_consensus_block_count","fetch_contract","fetch_epoch_count","fetch_epoch_history","fetch_gateways","fetch_offer","fetch_output_outcome","fetch_peg_out_fees","fetch_tx_outcome","fmt","from","handlers","into","into_request","members","new","offer_exists","register_gateway","request_raw","state","submit_transaction","try_from","try_into","type_id","upload_backup","upload_ecash_backup","vzip","with","with_module","ClientSecret","ClientSecretKey","DbKeyPrefix","DbKeyPrefixIter","back_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_ref","from_ref","get","idx","into","into","into","into_iter","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ApiError","LnClient","LnClientError","MissingInvoiceAmount","NoConfirmedInvoice","PayInvoicePayload","Result","Timeout","WrongAccountType","as_any","await_outgoing_refundable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compute_outgoing_contract_amount","config","context","contract_id","create_cancel_outgoing_output","create_offer_output","create_outgoing_output","create_refund_outgoing_contract_input","db","decoder","decoder","deserialize","erased_serialize","federation_id","fmt","fmt","fmt","fmt","from","from","from","get_confirmed_invoice","get_contract_account","get_incoming_contract","get_offer","get_outgoing_contract","incoming","input_amount","into","into","into","into_request","into_request","into_request","is_outgoing_contract_refundable","new","offer_exists","outgoing","output_amount","provide","refundable_outgoing_contracts","save_confirmed_invoice","serialize","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ConfirmedInvoice","ConfirmedInvoiceKey","ConfirmedInvoiceKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","OutgoingContractAccount","OutgoingContractAccountKey","OutgoingContractAccountKeyPrefix","OutgoingPayment","OutgoingPaymentClaim","OutgoingPaymentClaimKey","OutgoingPaymentClaimKeyPrefix","OutgoingPaymentKey","OutgoingPaymentKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConfirmedInvoice","IncomingContractAccount","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","into","into","into_request","into_request","invoice","keypair","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","into","into","into_request","into_request","recovery_key","refund","serialize","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApiError","FinalizationError","InsufficientBalance","InvalidAmountTier","InvalidIssuanceId","InvalidOutcomeType","InvalidOutcomeWrongStructure","InvalidSignature","InvalidSignatureAtIdx","MINT_E_CASH_BACKUP_SNAPSHOT_TYPE_CHILD_ID","MINT_E_CASH_FETCH_TIMEOUT","MINT_E_CASH_TYPE_CHILD_ID","MintClient","MintClientError","NoteFinalizationError","NoteIndex","NoteIssuanceRequest","NoteIssuanceRequests","OutputNotReadyYet","OutputOutcomeError","ReceivedUnspendableNote","Result","SpendableNote","UnknownIssuance","WrongMintAnswer","advance","as_any","as_u64","await_fetch_notes","back_up_ecash_to_federation","backup","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","create_ecash","db","decoder","decoder","default","default","deserialize","deserialize","deserialize","deserialize","download_ecash_backup_from_federation","ecash_input","epoch_pk","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","fetch_all_notes","fetch_epochs_stream","fetch_notes","finalize","finalize","finalize_change","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_u64","get_available_notes","get_backup_id","get_derived_backup_encryption_key","get_derived_backup_encryption_key_static","get_derived_backup_signing_key","get_derived_backup_signing_key_static","get_next_note_index","hash","input_amount","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_retryable","list_active_issuances","new","new_ecash_note","new_note_secret","new_note_secret_static","next","nonce","note","note_amount","note_count","notes","notes","notes_per_denomination","output_amount","partial_cmp","prepare_ecash_backup","prepare_plaintext_ecash_backup","provide","provide","receive_notes","recover_blind_nonce","restore_current_state_from_backup","restore_ecash_from_federation","secret","select_input","select_notes","serialize","serialize","serialize","serialize","set_notes_per_denomination","source","spend_key","spend_key","start_dbtx","summary","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_ecash_backup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_notes","wipe_notes_static","EcashBackup","EcashRecoveryFinalState","EcashRecoveryTracker","Metadata","PlaintextEcashBackup","add_next_pending_nonce_in_pending_pool","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","decode","decrypt_with","deserialize","deserialize","empty","encode","encrypt_to","epoch_count","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fill_initial_pending_nonces","finalize","fmt","fmt","fmt","fmt","from","from","from","from","from","from_backup","from_bytes","from_bytes","from_json_serialized","from_raw","from_ref","gap_limit","get_alignment_size","handle_consensus_item","handle_input","handle_output","handle_output_confirmation","into","into","into","into","into","into_backup_request","into_raw","into_request","into_request","into_request","into_request","into_request","is_empty","last_mined_nonce_idx","metadata","new_empty","next_note_idx","next_note_idx","next_pending_note_idx","notes","observe_nonce_idx_being_used","pending_nonces","pending_notes","pending_outputs","pub_key_shares","secret","serialize","serialize","spendable_note_by_nonce","spendable_notes","tbs_pks","threshold","to_bytes","to_bytes","to_json_deserialized","to_json_value","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unconfirmed_notes","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","NextECashNoteIndex","NextECashNoteIndexKey","NextECashNoteIndexKeyPrefix","Note","NoteKey","NoteKeyPrefix","NotesPerDenomination","NotesPerDenominationKey","OutputFinalizationData","OutputFinalizationKey","OutputFinalizationKeyPrefix","PendingNotes","PendingNotesKey","PendingNotesKeyPrefix","amount","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nonce","nth","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ln","mint","wallet","legacy","LN","Mint","OutputOutcome","TryIntoOutcome","Wallet","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","fmt","from","from","from_bytes","from_ref","hash","into","into_request","is_final","to_bytes","to_owned","try_from","try_into","try_into_outcome","try_into_variant","type_id","vzip","deserialize","serialize","Final","TransactionBuilder","borrow","borrow_mut","build","build_with_change","change_required","default","fee_amount","from","input","input_amount","input_amount_iter","into","into_request","is_final","keys","legacy","output","output_amount","output_amount_iter","try_from","try_into","tx","type_id","vzip","Input","LN","LN","Mint","Mint","Output","Transaction","Wallet","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","hash","hash","hash","inputs","into","into","into","into_request","into_request","into_request","into_type_erased","outputs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","ClientContext","api","borrow","borrow_mut","db","decoders","fmt","from","from_hex","into","into_request","module_inits","network_to_currency","parse_bitcoin_amount","parse_ecash","parse_fedimint_amount","parse_gateway_id","parse_peer_id","secp","serialize_ecash","try_from","try_into","type_id","vzip","ApiError","NoMatchingPegInFound","OutputOutcomeError","PegInAmountTooSmall","PegInProofError","Result","WalletClient","WalletClientError","as_any","await_peg_out_outcome","borrow","borrow","borrow_mut","borrow_mut","config","context","create_pegin_input","db","decoder","decoder","fmt","fmt","fmt","from","from","from","from","get_new_pegin_address","input_amount","into","into","into_request","into_request","output_amount","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","PegIn","PegInKey","PegInPrefixKey","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","peg_in_script","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_client_legacy"],[269,"fedimint_client_legacy::api"],[282,"fedimint_client_legacy::api::fake"],[323,"fedimint_client_legacy::db"],[386,"fedimint_client_legacy::ln"],[459,"fedimint_client_legacy::ln::db"],[691,"fedimint_client_legacy::ln::incoming"],[735,"fedimint_client_legacy::ln::outgoing"],[781,"fedimint_client_legacy::mint"],[1022,"fedimint_client_legacy::mint::backup"],[1143,"fedimint_client_legacy::mint::db"],[1400,"fedimint_client_legacy::modules"],[1403,"fedimint_client_legacy::outcome"],[1404,"fedimint_client_legacy::outcome::legacy"],[1436,"fedimint_client_legacy::serde_keypair"],[1438,"fedimint_client_legacy::transaction"],[1464,"fedimint_client_legacy::transaction::legacy"],[1555,"fedimint_client_legacy::utils"],[1579,"fedimint_client_legacy::wallet"],[1624,"fedimint_client_legacy::wallet::db"]],"d":["","","","","","","Use <code>Client::concurrency_lock</code> to obtain","","","","","","","","","","","","","","","","","","","","Mint module’s secret key derivation child id","","","","","","","Number of blocks until outgoing lightning contracts times …","","","","","","","","","","","","","","","","","","","","","Abort payment if our node can’t route it and give money …","","","","","","","","","Waits for a outgoing contract claim transaction to be …","Notify gateway that we’ve escrowed notes they can claim …","Waits for the federation to sign an ecash note.","Wait for a lightning preimage gateway has purchased to be …","","","","","","","","","","","","","","","","","Buy a lightning preimage listed for sale inside the …","Cancel an outgoing contract we haven’t accepted yet, …","","Claim an outgoing contract after acquiring the preimage by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to fetch e-cash notes from a certain out point. An …","Fetch the specified outgoing payment contract account","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns a bitcoin address suited to perform a fedimint …","Fetches the client secret from the database or generates a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns true if the invoice contains us as a routing hint","","","Lists all claim transactions for outgoing contracts that …","Lists all previously saved transactions that have not been …","","","","","","","","Channel identifier assigned to the mint by the gateway. …","","","Builds a fake module registry which is only usable for …","","","","","","","","","Pay by creating notes provided (and most probably …","","","","","","","Receive e-cash directly from another user when online (vs. …","","Claw back funds after incoming contract that had invalid …","Register this gateway with the federation","Spent some <code>SpendableNote</code>s to receive a freshly minted ones","Should be called after any transaction that might have …","For tests only: Select notes of a given amount, and then …","Continuation of <code>remint_notes</code>","Removes spent ecash from the database","","","Save the details about an outgoing payment the client is …","","","","","","Issues a spendable amount of ecash","Submits a transaction to the fed, making change using our …","","Switches the clients active gateway to a registered …","","","","","","","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","","","Validate signatures on notes.","Check if we can claim the contract account and returns the …","","","","","","","","","","","","","","","","","","","","","","","","A fake <code>super::IFederationApi</code> builder","","","","Await the outcome of an entire transaction","","","","","","","","","","","","","","","","Fetch the outcome of an entire transaction","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Submit a transaction for inclusion","","","","","","","Add a handler <code>f</code> to a <code>method </code> call","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for an outgoing contract to become refundable","","","","","","","","","","","Used by gateway to prematurely return funds to the user if …","","Create an output that incentivizes a Lighning gateway to …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Determines if an outgoing contract can be refunded","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoice whose “offer” has been accepted by federation","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The invoice itself","Keypair that will be able to sweep contract once it has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation module client for the Mint module. It can both …","","","An index used to deterministically derive <code>Note</code>s","Single <code>Note</code> issuance request to the mint.f","Multiple <code>Note</code> issuance requests","","","","","A <code>Note</code> with associated secret key that allows to proof …","","","","","","","Prepare an encrypted backup and send it to federation for …","Backup and recovery of ecash notes","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generates unsigned ecash, along with the private keys that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch epochs in a given range and send them over <code>sender</code>","","","Finalize the issuance request using a …","Adds the final amounts of <code>change</code> to the tx before …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","Get available spendable notes with a db transaction …","","","Static version of <code>Self::get_derived_backup_encryption_key</code> …","","Static version of <code>Self::get_derived_backup_signing_key</code> for …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","Generate a request session for a single note and returns …","","","Derive the note <code>DerivableSecret</code> from the Mint’s <code>secret</code> …","","","","","","","Finalization data for all note outputs in this request","","","","","","","","","","","","","","Select notes with total amount of <em>at least</em> <code>amount</code>. If more …","","","","","","","Spend key from which the note nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete all the note-related data from the database","Encrypted version of <code>PlaintextEcashBackup</code>.","","The state machine used for fast-forwarding backup from …","Backup metadata","Snapshot of a ecash state (notes)","Add next nonce from <code>amount</code> tier to the …","","","","","","","","","","","","","","","","","","","Decode from a plaintexet (possibly aligned) message","","","","Create empty metadata","Encode <code>self</code> to a padded (but still plaintext) message","Encrypt with a key and turn into <code>EcashBackup</code>","","","","","","","","","","Fill each tier pool to the gap limit","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create metadata as json from typed <code>val</code>","","","The number of nonces we look-ahead when looking for mints …","Align an ecoded message size up for better privacy","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Is metadata empty","<code>LastECashNoteIndex</code> but tracked in flight. Basically max …","","An empty backup with, like a one created by a newly …","","Note index to derive next note in a given amount tier","Tail of <code>pending</code>. <code>pending_notes</code> is filled by generating …","","React to a valid pending nonce being tracked being used in …","Next nonces that we expect might soon get used. Once we …","","Outputs (by <code>OutPoint</code>) we track federation member …","Public key shares for each peer","The <strong>mint</strong> (not root) derived secret used to derive notes","","","Nonces that we track that are currently spendable.","Nonces that we track that are currently spendable.","Aggregate public key for each amount tier","Threshold","","","Attempt to deserialize metadata as typed json","Attempt to deserialize metadata as untyped json (…","","","","","","","","","","","","","","","","","Unsigned notes","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Builds and signs the final transaction with correct change","Builds and signs the final transaction with exact change …","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Old transaction definition used by old client.","","","","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Federation module client for the Wallet module. It can …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns a bitcoin-address derived from the federations …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[48,48,49,0,0,0,0,48,0,48,48,48,0,0,48,48,48,48,48,48,48,49,48,48,48,48,0,48,48,49,48,48,48,0,48,48,0,48,48,48,48,0,48,48,48,48,48,0,0,48,48,48,48,48,2,0,1,5,1,2,2,2,2,2,2,2,2,24,2,45,5,1,28,48,49,24,2,45,5,1,28,48,49,2,2,2,2,1,5,1,5,1,2,2,2,2,2,28,28,28,2,2,0,2,2,5,1,1,1,1,5,1,28,1,2,2,2,2,2,2,45,5,1,28,48,48,49,49,24,2,45,5,1,28,48,48,48,48,48,48,48,48,48,49,28,5,1,2,2,2,2,2,2,24,2,45,5,1,28,48,49,24,2,45,5,1,28,48,49,28,45,2,2,2,2,2,0,2,45,45,45,45,0,1,2,2,0,2,0,2,2,2,1,2,0,2,45,2,2,48,49,2,2,1,2,2,2,2,2,2,2,2,2,2,0,5,1,28,48,2,2,2,2,1,28,1,5,1,48,49,0,24,2,45,5,1,28,48,49,24,2,45,5,1,28,48,49,2,24,2,45,5,1,28,48,49,0,2,2,24,2,45,5,1,28,48,49,0,2,0,0,0,217,0,218,219,219,219,218,219,219,217,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,117,0,0,0,118,117,118,119,117,118,119,117,118,117,118,119,119,119,119,117,117,119,117,118,119,119,119,117,118,118,118,117,118,119,118,117,118,119,117,118,118,118,118,118,119,118,119,119,117,118,117,117,118,119,117,118,119,117,118,119,117,118,119,55,0,0,55,55,0,0,55,55,69,69,69,128,55,69,128,55,69,69,69,128,69,69,69,69,0,69,69,128,128,128,69,128,55,55,69,128,55,69,69,69,69,69,0,69,69,128,55,69,128,55,69,128,69,0,69,55,69,69,128,55,69,128,55,69,128,55,69,128,55,69,128,55,135,0,0,0,0,135,0,0,135,0,0,135,135,0,0,0,0,136,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,135,136,137,138,139,140,141,142,143,144,145,146,137,138,139,140,141,142,143,144,145,146,137,138,139,140,141,142,143,144,145,146,137,139,141,143,145,135,135,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,137,137,138,139,139,140,141,141,142,143,143,144,145,145,146,135,136,136,136,135,136,137,138,139,140,141,142,143,144,145,146,136,135,136,137,138,139,140,141,142,143,144,145,146,135,136,136,136,136,136,137,139,141,143,145,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,135,136,135,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,135,136,137,138,139,140,141,142,143,144,145,146,0,0,130,130,16,130,16,130,130,130,130,16,130,16,130,16,130,16,16,130,16,130,16,130,16,130,130,16,130,16,16,16,16,130,16,130,130,16,130,16,130,16,130,16,0,0,23,127,23,127,23,23,23,23,127,23,127,23,127,23,23,127,127,23,127,23,127,23,127,23,23,127,23,127,23,127,23,127,23,127,23,23,127,23,127,23,127,23,127,23,57,57,57,160,160,57,57,160,160,0,0,0,0,0,0,0,0,0,57,57,57,0,0,160,160,147,71,147,71,71,0,150,71,147,150,151,78,160,57,71,147,150,151,78,160,57,71,147,150,151,78,71,147,150,151,78,147,71,147,150,151,78,147,150,151,78,147,150,151,78,71,71,0,71,71,147,151,147,150,151,78,71,71,71,147,150,151,78,147,147,150,150,151,151,78,78,147,150,151,78,151,71,71,71,150,151,71,71,147,147,150,151,78,160,160,57,57,71,147,150,151,78,160,160,57,57,57,57,147,150,151,78,71,147,150,151,78,147,71,71,71,71,71,71,71,78,71,71,147,150,151,78,160,57,71,147,150,151,78,160,57,57,71,150,71,71,71,147,150,78,151,151,71,151,71,71,147,71,71,160,57,71,150,71,71,71,71,71,147,150,151,78,71,57,150,78,71,71,147,150,151,78,71,147,150,151,78,147,160,57,71,147,150,151,78,160,57,71,147,150,151,78,160,57,71,147,150,151,78,160,57,71,71,147,150,151,78,160,57,71,71,0,0,0,0,0,175,171,148,154,173,175,171,148,154,173,175,148,148,148,154,148,154,148,154,154,171,148,154,148,154,154,154,148,154,148,148,154,154,148,154,175,175,148,154,173,175,171,148,154,173,175,175,148,154,148,148,148,175,154,175,175,175,175,171,148,154,173,175,171,148,171,148,154,173,175,148,175,154,154,154,173,175,154,175,175,154,175,175,175,148,154,175,173,175,175,148,154,148,148,148,171,148,154,173,175,171,148,154,173,175,171,148,154,173,175,173,171,148,154,173,175,0,0,183,0,0,183,0,0,183,0,183,0,0,183,0,0,185,184,183,184,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,189,189,189,189,185,187,189,191,193,183,183,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,185,185,186,187,187,188,189,189,190,191,191,192,193,193,183,184,185,186,187,188,189,190,191,192,193,184,184,183,184,185,186,187,188,189,190,191,192,193,184,183,184,185,186,187,188,189,190,191,192,193,183,184,184,184,184,185,184,185,187,189,191,193,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,183,184,185,186,187,188,189,190,191,192,193,183,183,184,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,183,184,185,186,187,188,189,190,191,192,193,0,0,0,0,194,194,0,0,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,197,194,194,194,0,0,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,220,87,0,87,87,87,87,87,87,87,87,0,198,200,198,200,0,0,198,200,163,198,200,163,198,200,163,198,200,163,198,200,163,198,200,163,198,200,163,198,200,198,200,163,198,200,163,163,198,198,200,200,198,200,163,198,200,163,198,200,163,198,200,163,198,200,163,198,200,163,163,198,200,163,198,200,163,163,198,200,163,163,198,200,163,198,200,163,198,200,163,198,200,163,163,163,198,200,163,163,198,200,0,33,33,33,33,33,33,33,0,33,33,33,0,0,0,0,0,0,33,0,33,33,33,33,54,54,54,54,54,0,0,0,94,94,94,54,94,54,94,94,94,0,94,94,94,54,54,94,54,54,54,94,94,94,54,94,54,94,54,54,54,94,54,94,54,94,54,94,54,0,0,213,0,0,214,213,214,215,216,213,214,215,216,213,214,215,216,213,214,215,216,215,216,215,216,215,216,215,213,213,215,216,213,214,215,216,215,215,216,213,214,215,216,214,214,213,214,215,216,214,213,214,215,216,213,214,214,214,214,214,215,215,214,215,215,216,216,213,214,215,216,213,213,214,215,216,213,214,215,216,213,214,215,216,213,214,215,216],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],4],0,0,[5,6],[1,6],[[[2,[[0,[[7,[6]],8,9]]]],10],[[12,[10,11]]]],[[[2,[[0,[[7,[6]],8,9]]]],10],10],[[[2,[5]],13,14,15],[[4,[16]]]],[[[2,[5]],17],4],[[[2,[1]],3,17],4],[[[2,[5]],3,[0,[18,19]]],4],[[[2,[5]],17],4],[[[2,[1]],17],[[4,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],21,22,[0,[18,19]]],4],[[[2,[1]],23],4],[[[2,[5]],3,[0,[18,19]]],[[4,[17]]]],[[[2,[1]],3,20,[0,[18,19]]],[[4,[17]]]],0,[5,5],[1,1],[[]],[[]],[2,[[25,[24]]]],0,[[[2,[[0,[[7,[6]],8,9]]]]],[[0,[[7,[6]],8,9]]]],0,[[[2,[[0,[[7,[6]],8,9]]]]],[[0,[[7,[6]],8,9]]]],[[26,27],[[12,[28,29]]]],[[28,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[2,[[34,[33]]]],0,0,[[[2,[[0,[[7,[6]],8,9]]]]],35],[2,27],[36,[[12,[5]]]],[36,[[12,[1]]]],[[1,1],37],[[],37],[[],37],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],0,[[[2,[5]]],[[4,[41]]]],[[[2,[[0,[[7,[6]],8,9]]]]],[[4,[[42,[17]]]]]],[[[2,[[0,[[7,[6]],8,9]]]],10,43],[[4,[44]]]],[[[2,[[0,[[7,[6]],8,9]]]],17],4],[[[2,[1]],3],[[4,[23]]]],[[[2,[5]]],[[4,[[42,[41]]]]]],[[45,46],47],[[5,46],47],[[1,46],47],[[28,46],47],[[48,46],47],[[48,46],47],[[49,46],47],[[49,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[50,48],[51,48],[52,48],[53,48],[54,48],[55,48],[56,48],[57,48],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[[2,[5]],14,[0,[18,19]]],4],[[[2,[5]],22,64,[0,[18,19]],[65,[10]]],[[4,[16]]]],[[[2,[5]],22,64,15,[0,[18,19]],[65,[10]]],4],[[[2,[5]],22,64,[0,[18,19]],[65,[10]]],4],[[[2,[[0,[[7,[6]],8,9]]]],[0,[18,19]]],66],[35,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[28,67],0,[[[2,[1]],14],37],[[[2,[[0,[[7,[6]],8,9]]]]],42],[[[2,[1]]],[[42,[17]]]],[[[2,[1]]],[[42,[3]]]],[[[2,[1]]],[[42,[23]]]],0,[[[2,[[0,[[7,[6]],8,9]]]]],69],0,[45,70],0,0,0,0,[[[2,[[0,[[7,[6]],8,9]]]]],71],[67,67],[[],27],[2,72],0,[[[0,[[7,[6]],8,9]],27,72,35,[74,[73]]],[[2,[[0,[[7,[6]],8,9]]]]]],[[[2,[[0,[[7,[6]],8,9]]]],75,66],[[4,[76]]]],[[[0,[[7,[6]],8,9]],27,72,35,77,[74,[73]]],[[2,[[0,[[7,[6]],8,9]]]]]],0,[[[2,[[0,[[7,[6]],8,9]]]]],[[79,[78]]]],0,[[[2,[[0,[[7,[6]],8,9]]]],[79,[80]],[0,[18,19]]],[[4,[17]]]],0,[[[2,[[0,[[7,[6]],8,9]]]],81,82,[0,[18,19]]],[[4,[13]]]],[[[2,[[0,[[7,[6]],8,9]]]],76,[0,[18,19]]],[[4,[17]]]],[83],[83],[[[2,[[0,[[7,[6]],8,9]]]],84],[[4,[17]]]],[[[2,[[0,[[7,[6]],8,9]]]],22]],0,[[[2,[1]],3,[0,[18,19]]],[[4,[13]]]],[[[2,[1]],41],4],[[[2,[[0,[[7,[6]],8,9]]]],[79,[78]],[0,[18,19]]],[[4,[17]]]],[[[2,[[0,[[7,[6]],8,9]]]],[0,[18,19]]],[[4,[17]]]],[[[2,[[0,[[7,[6]],8,9]]]],22,[0,[18,19]]],4],[[[2,[[0,[[7,[6]],8,9]]]],22],[[4,[[79,[78]]]]]],[[[2,[[0,[[7,[6]],8,9]]]],[79,[78]]]],[2,67],0,[[[2,[1]],23]],0,[[5,85],12],[[1,85],12],[[28,85],12],[48,[[65,[86]]]],[[[2,[[0,[[7,[6]],8,9]]]],22,[0,[18,19]]],[[4,[[79,[78]]]]]],[[[2,[[0,[[7,[6]],8,9]]]],[25,[24]],87,[0,[18,19]]],[[4,[13]]]],[[[2,[[0,[[7,[6]],8,9]]]]],88],[[[2,[5]],[65,[89]]],[[4,[41]]]],0,[[],[[42,[58,90]]]],[[1,[42,[91]],92,89],41],[[]],[[]],[[],64],[[],64],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[2,[5]],3,[0,[18,19]]],[[4,[17]]]],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],0,[[[2,[[0,[[7,[6]],8,9]]]],[79,[78]]],4],[[[2,[1]],23],[[4,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[[0,[[7,[6]],8,9]]]]],94],0,0,0,[95,[[98,[[97,[96]]]]]],0,[[],[[98,[[97,[96]]]]]],[3,[[98,[[97,[96]]]]]],[[],[[98,[[97,[96]]]]]],[21,[[98,[[97,[96]]]]]],[[66,75],[[98,[[97,[96]]]]]],[21,[[98,[[97,[96]]]]]],[41,[[98,[[97,[96]]]]]],[99,[[98,[[97,[96]]]]]],0,0,[[[103,[[0,[100,101,102]]]]],[[105,[104]]]],[[17,92,60],[[98,[[97,[96,90]]]]]],[13,[[98,[[97,[96,90]]]]]],[[]],[[]],[[],[[98,[[97,[96,90]]]]]],[106,[[98,[[97,[96,90]]]]]],[95,[[98,[[97,[96,90]]]]]],[107,[[98,[[97,[96,90]]]]]],[95,[[98,[[97,[96,90]]]]]],[[],[[98,[[97,[96,90]]]]]],[3,[[98,[[97,[96,90]]]]]],[[],[[98,[[97,[96,90]]]]]],[[10,43,[62,[60,61]]],[[98,[[97,[96,90]]]]]],[[],[[98,[[97,[96,90]]]]]],[21,[[98,[[97,[96,90]]]]]],[[17,60],[[98,[[97,[96,90]]]]]],[[66,75],[[98,[[97,[96,90]]]]]],[13,[[98,[[97,[96,90]]]]]],[[103,46],47],[[]],0,[[]],[[],68],0,[[[34,[100]],[105,[104]]],[[103,[100]]]],[21,[[98,[[97,[96,90]]]]]],[41,[[98,[[97,[96,90]]]]]],[[[103,[[0,[100,101,102]]]],104,108,[59,[109]]],[[98,[[97,[96]]]]]],0,[110,[[98,[[97,[96,90]]]]]],[[],12],[[],12],[[],93],[111,[[98,[[97,[96,90]]]]]],[99,[[98,[[97,[96,90]]]]]],[[]],[[[103,[[0,[101,102]],100]],[112,[64]],[0,[113,101,102,114]]],[[103,[[0,[101,102]],100]]]],[[[103,[[0,[100,101,102]]]],115],116],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[117,117],[118,118],[[]],[[]],[[26,27],[[12,[119,29]]]],[[119,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[38,[[12,[39,40]]]],[[117,46],47],[[117,46],47],[[119,46],47],[[]],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[118,31],[[65,[117]]]],0,[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],118],[118,31],0,[118,65],[118,65],[[118,31],65],[[119,85],12],[118],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[]],[[],64],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],120],[[69,3],121],[[]],[[]],[[]],[[]],[[]],[[]],[[69,14,122],[[121,[22]]]],0,0,0,[[69,3,123],124],[[69,22,21,20,[65,[10]]],124],[[69,125,14,41,126,[0,[18,19]]],[[121,[124]]]],[[69,127]],0,[69,60],[[],60],[36,[[12,[128]]]],[38,[[12,[39,40]]]],0,[[69,46],47],[[128,46],47],[[55,46],47],[[55,46],47],[[]],[[]],[[]],[[69,3],[[121,[16]]]],[[69,3],[[121,[129]]]],[[69,3],[[121,[130]]]],[[69,21],[[121,[131]]]],[[69,3],[[121,[23]]]],0,[[69,132],133],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[69,3],[[121,[37]]]],[[134,3],128],[[69,21],[[121,[37]]]],0,[[69,124],133],[83],[[69,10],[[42,[127]]]],[[69,16]],[[128,85],12],[[],64],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,135],[136,136],[[]],[[]],[[26,27],[[12,[137,29]]]],[[26,27],[[12,[138,29]]]],[[26,27],[[12,[139,29]]]],[[26,27],[[12,[140,29]]]],[[26,27],[[12,[141,29]]]],[[26,27],[[12,[142,29]]]],[[26,27],[[12,[143,29]]]],[[26,27],[[12,[144,29]]]],[[26,27],[[12,[145,29]]]],[[26,27],[[12,[146,29]]]],[[137,30],[[12,[31,32]]]],[[138,30],[[12,[31,32]]]],[[139,30],[[12,[31,32]]]],[[140,30],[[12,[31,32]]]],[[141,30],[[12,[31,32]]]],[[142,30],[[12,[31,32]]]],[[143,30],[[12,[31,32]]]],[[144,30],[[12,[31,32]]]],[[145,30],[[12,[31,32]]]],[[146,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[[135,46],47],[[135,46],47],[[137,46],47],[[138,46],47],[[139,46],47],[[140,46],47],[[141,46],47],[[142,46],47],[[143,46],47],[[144,46],47],[[145,46],47],[[146,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[136,31],[[65,[135]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],136],[136,31],0,[136,65],[136,65],[[136,31],65],[[137,85],12],[[139,85],12],[[141,85],12],[[143,85],12],[[145,85],12],[136],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[]],[[],64],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[130,132],[130,130],[[]],[[26,27],[[12,[130,29]]]],[[26,27],[[12,[16,29]]]],[[130,30],[[12,[31,32]]]],[[16,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],0,[16,3],[38,[[12,[39,40]]]],[[130,46],47],[[16,46],47],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[]],[[],68],[[],68],0,0,[[16,85],12],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[23,20],132],[23,23],[[]],[[26,27],[[12,[127,29]]]],[[26,27],[[12,[23,29]]]],[[127,30],[[12,[31,32]]]],[[23,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],0,0,[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[[127,46],47],[[23,46],47],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[]],[[],68],[[],68],0,[23,132],[[127,85],12],[[23,85],12],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[147],[[],120],[147,10],[[71,125,17],[[12,[17,57]]]],[[71,148],149],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,71],[147,147],[150,150],[151,151],[78,78],[[]],[[]],[[]],[[]],[[]],[[147,147],152],0,[[26,27],[[12,[147,29]]]],[[26,27],[[12,[150,29]]]],[[26,27],[[12,[151,29]]]],[[26,27],[[12,[78,29]]]],[[147,30],[[12,[31,32]]]],[[150,30],[[12,[31,32]]]],[[151,30],[[12,[31,32]]]],[[78,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],0,[[71,22,153,125]],0,[[],60],[71,60],[[],147],[[],151],[36,[[12,[147]]]],[36,[[12,[150]]]],[36,[[12,[151]]]],[36,[[12,[78]]]],[71,[[149,[[65,[154]]]]]],[[[79,[78]]],[[12,[57]]]],0,[[147,147],37],[[150,150],37],[[151,151],37],[[78,78],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[[151,155]],[[71,[25,[24]]],[[42,[[12,[17,57]]]]]],[[71,[156,[10]]],157],[[71,125,17],[[12,[57]]]],[[150,158,159],[[12,[78,160]]]],[[151,161,[162,[159]]],[[12,[[79,[78]],160]]]],[[71,163,125,[42,[22]]]],[[71,46],47],[[147,46],47],[[147,46],47],[[150,46],47],[[151,46],47],[[78,46],47],[[160,46],47],[[160,46],47],[[57,46],47],[[57,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[50,160],[164,57],[160,57],[51,57],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[]],[[]],[[]],[10,147],[[71,125],[[79,[78]]]],[71,95],[71,165],[67,165],[71,15],[67,15],[[71,125,22],147],[[78,166]],[[71,167],133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[57,37],[71,42],[[[74,[168]],67]],[[71,[74,[168]],22,125]],[[71,22,125],67],[[67,22,147],67],[147,147],[150,169],0,[151,22],[151,31],[71,[[79,[78]]]],0,[[71,125],153],[[71,170],133],[[147,147],[[65,[152]]]],[[71,148],[[149,[171]]]],[[71,148],[[149,[154]]]],[83],[83],[[71,22]],[150,80],[[71,172,154,31],[[149,[[174,[173]]]]]],[[71,31,172],[[149,[[174,[148]]]]]],0,[[71,22],[[12,[57]]]],[[71,22],[[12,[[79,[78]],57]]]],[[147,85],12],[[150,85],12],[[151,85],12],[[78,85],12],[[71,153]],[57,[[65,[86]]]],0,0,[71,125],[71,88],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],64],[[],64],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[71,171],149],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,149],[125,149],0,0,0,0,0,[[175,22]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[148,148],[[]],[[26,27],[[12,[148,29]]]],[[26,27],[[12,[154,29]]]],[[148,30],[[12,[31,32]]]],[[154,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[[[59,[58]]],[[149,[154]]]],[[171,165],[[149,[154]]]],[36,[[12,[148]]]],[36,[[12,[154]]]],[[],148],[154,[[149,[[42,[58]]]]]],[[154,165],[[149,[171]]]],0,[[148,148],37],[[154,154],37],[[],37],[[],37],[[],37],[[],37],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[[175,22]],[175,173],[[148,46],47],[[154,46],47],[[173,46],47],[[175,46],47],[[]],[[]],[[]],[[]],[[]],[[154,67,31,[162,[159]],[177,[104,[162,[176]]]]],175],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[178,148],[[[42,[58]]],148],[[]],0,[31,31],[[175,104,179,[180,[13]],[105,[13]]]],[[175,167]],[[175,17,170]],[[175,104,181]],[[]],[[]],[[]],[[]],[[]],[[171,15],[[149,[99]]]],[148,[[42,[58]]]],[[],68],[[],68],[[],68],[[],68],[[],68],[148,37],0,0,[[],154],0,0,0,0,[[175,22,147]],0,0,0,0,0,[[148,85],12],[[154,85],12],0,0,0,0,[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[148,[[149,[182]]]],[148,[[149,[109]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[],93],[[],93],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27],[[12,[185,29]]]],[[26,27],[[12,[186,29]]]],[[26,27],[[12,[187,29]]]],[[26,27],[[12,[188,29]]]],[[26,27],[[12,[189,29]]]],[[26,27],[[12,[190,29]]]],[[26,27],[[12,[191,29]]]],[[26,27],[[12,[192,29]]]],[[26,27],[[12,[193,29]]]],[[185,30],[[12,[31,32]]]],[[186,30],[[12,[31,32]]]],[[187,30],[[12,[31,32]]]],[[188,30],[[12,[31,32]]]],[[189,30],[[12,[31,32]]]],[[190,30],[[12,[31,32]]]],[[191,30],[[12,[31,32]]]],[[192,30],[[12,[31,32]]]],[[193,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[36,[[12,[189]]]],[[189,189],37],[[],37],[[],37],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[[183,46],47],[[183,46],47],[[185,46],47],[[186,46],47],[[187,46],47],[[188,46],47],[[189,46],47],[[190,46],47],[[191,46],47],[[192,46],47],[[193,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[184,31],[[65,[183]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],184],[184,31],0,[184,65],[184,65],0,[[184,31],65],[[185,85],12],[[187,85],12],[[189,85],12],[[191,85],12],[[193,85],12],[184],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[],93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[194,194],[[]],[[26,27],[[12,[194,29]]]],[[194,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[[194,194],37],[[],37],[[],37],[[194,46],47],[195,194],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[194,166]],[[]],[[],68],[194,37],[[],[[42,[58,90]]]],[[]],[[],12],[[],12],[194,[[12,[196]]]],[194,[[12,[197,51]]]],[[],93],[[]],[36,[[12,[15]]]],[[15,85],12],0,0,[[]],[[]],[[87,[2,[[0,[[7,[6]],8,9]]]],125,[0,[18,19]]],163],[[87,71,125,[0,[18,19]],[42,[22]],[74,[73]]],163],[[87,[2,[[0,[[7,[6]],8,9]]]]],22],[[],87],[[87,[2,[[0,[[7,[6]],9,8]]]]],22],[[]],[[87,[42,[15]],198]],[[87,[2,[[0,[[7,[6]],9,8]]]]],22],[[87,[2,[[0,[[7,[6]],8,9]]]]],199],[[]],[[],68],[[],37],0,0,[[87,200],10],[[87,[2,[[0,[[7,[6]],9,8]]]]],22],[[87,[2,[[0,[[7,[6]],8,9]]]]],199],[[],12],[[],12],0,[[],93],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[163,163],[198,198],[200,200],[[]],[[]],[[]],[[26,27],[[12,[163,29]]]],[[26,27],[[12,[198,29]]]],[[26,27],[[12,[200,29]]]],[[163,30],[[12,[31,32]]]],[[198,30],[[12,[31,32]]]],[[200,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[36,[[12,[198]]]],[36,[[12,[200]]]],[[163,163],37],[[198,198],37],[[200,200],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[38,[[12,[39,40]]]],[38,[[12,[39,40]]]],[[163,46],47],[[198,46],47],[[200,46],47],[[]],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[]],[[163,166]],[[198,166]],[[200,166]],0,[[]],[[]],[[]],[[],68],[[],68],[[],68],[163,110],0,[[198,85],12],[[200,85],12],0,[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[163,13],[[[59,[198]],[59,[200]]],13],[[],93],[[],93],[[],93],[[163,199],[[12,[201]]]],[[]],[[]],[[]],0,0,[[]],[[]],0,0,[[33,46],47],[[]],[108,[[12,[202,203]]]],[[]],[[],68],0,[204,205],[108,[[12,[75,206]]]],[108,[[149,[[79,[78]]]]]],[108,[[12,[22,207]]]],[108,[[12,[89,208]]]],[108,[[12,[104,209]]]],0,[[[79,[78]]],64],[[],12],[[],12],[[],93],[[]],0,0,0,0,0,0,0,0,[[],120],[[94,17],[[12,[210,54]]]],[[]],[[]],[[]],[[]],0,0,[[94,81,82],[[12,[54]]]],0,[94,60],[[],60],[[94,46],47],[[54,46],47],[[54,46],47],[[]],[51,54],[[]],[164,54],[[94,125,[0,[18,19]]],66],[[94,211],133],[[]],[[]],[[],68],[[],68],[[94,212],133],[83],[54,[[65,[86]]]],[[],64],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[213,213],[214,214],[215,215],[216,216],[[]],[[]],[[]],[[]],[[26,27],[[12,[215,29]]]],[[26,27],[[12,[216,29]]]],[[215,30],[[12,[31,32]]]],[[216,30],[[12,[31,32]]]],[30,[[12,[31,32]]]],[30,[[12,[31,32]]]],[38,[[12,[39,40]]]],[[213,46],47],[[213,46],47],[[215,46],47],[[216,46],47],[[]],[[]],[[]],[[]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[[59,[58]],[62,[60,61]]],[[12,[63]]]],[[]],[[]],[[]],[[]],[[214,31],[[65,[213]]]],0,[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],214],[214,31],0,[214,65],[214,65],[[214,31],65],0,[[215,85],12],[214],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[],[[42,[58,90]]]],[[]],[[]],[[]],[[]],[[],64],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],93],[[],93],[[],93],[[],93],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"GatewayClientConfig"],[3,"Client"],[3,"ContractId"],[6,"Result"],[3,"UserClientConfig"],[3,"ClientConfig"],[8,"AsRef"],[8,"Clone"],[8,"MaybeSend"],[15,"u64"],[3,"Elapsed"],[4,"Result"],[3,"TransactionId"],[3,"Invoice"],[3,"KeyPair"],[3,"ConfirmedInvoice"],[3,"OutPoint"],[8,"RngCore"],[8,"CryptoRng"],[3,"Preimage"],[3,"Hash"],[3,"Amount"],[3,"OutgoingContractAccount"],[3,"ConcurrencyLock"],[3,"MutexGuard"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"ClientSecret"],[3,"DecodeError"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"ClientContext"],[3,"Arc"],[3,"Database"],[8,"Deserializer"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"LightningGateway"],[3,"Vec"],[3,"PublicKey"],[3,"SignedEpochOutcome"],[3,"PaymentParameters"],[3,"Formatter"],[6,"Result"],[4,"ClientError"],[4,"ConfigVerifyError"],[3,"InvalidAmountTierError"],[4,"OutputOutcomeError"],[4,"CreationError"],[3,"FederationError"],[4,"WalletClientError"],[4,"LnClientError"],[3,"Error"],[4,"MintClientError"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"String"],[4,"Option"],[3,"Address"],[3,"DerivableSecret"],[3,"Request"],[3,"LnClient"],[15,"f64"],[3,"MintClient"],[6,"ClientModuleInitRegistry"],[4,"All"],[3,"Secp256k1"],[3,"Amount"],[3,"PegOut"],[3,"DynGlobalApi"],[3,"SpendableNote"],[3,"TieredMulti"],[3,"BlindNonce"],[3,"TxOutProof"],[3,"Transaction"],[3,"Demand"],[3,"Rbf"],[8,"Serializer"],[8,"Error"],[3,"TransactionBuilder"],[3,"TieredSummary"],[3,"PublicKey"],[3,"Global"],[3,"RouteHint"],[3,"Duration"],[3,"TypeId"],[3,"WalletClient"],[3,"XOnlyPublicKey"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SignedBackupRequest"],[8,"Debug"],[8,"Send"],[8,"Sync"],[3,"FederationApiFaker"],[3,"PeerId"],[3,"BTreeSet"],[3,"SupportedApiVersionsSummary"],[3,"InviteCode"],[15,"str"],[4,"Value"],[3,"Transaction"],[3,"SignedBackupRequest"],[8,"Into"],[8,"Fn"],[8,"Copy"],[6,"ModuleInstanceId"],[3,"DynModuleApi"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ClientSecretKey"],[8,"Any"],[6,"Result"],[3,"RoutingFees"],[3,"Signature"],[4,"LightningOutput"],[3,"DatabaseTransaction"],[15,"u32"],[3,"OutgoingContractData"],[3,"PayInvoicePayload"],[3,"ContractAccount"],[3,"IncomingContractAccount"],[3,"IncomingContractOffer"],[3,"LightningInput"],[3,"TransactionItemAmount"],[3,"FederationId"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"OutgoingPaymentKey"],[3,"OutgoingPaymentKeyPrefix"],[3,"OutgoingPaymentClaimKey"],[3,"OutgoingPaymentClaimKeyPrefix"],[3,"OutgoingContractAccountKey"],[3,"OutgoingContractAccountKeyPrefix"],[3,"ConfirmedInvoiceKey"],[3,"ConfirmedInvoiceKeyPrefix"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"NoteIndex"],[3,"Metadata"],[6,"Result"],[3,"NoteIssuanceRequest"],[3,"NoteIssuanceRequests"],[4,"Ordering"],[15,"u16"],[3,"PlaintextEcashBackup"],[8,"IntoIterator"],[3,"Range"],[8,"Stream"],[3,"BlindedSignature"],[3,"AggregatePublicKey"],[4,"NoteFinalizationError"],[3,"MintOutputBlindSignatures"],[3,"Tiered"],[3,"Transaction"],[4,"PeerError"],[3,"LessSafeKey"],[8,"Hasher"],[3,"MintInput"],[8,"Signing"],[3,"Nonce"],[3,"MintOutput"],[3,"EcashBackup"],[3,"TaskGroup"],[3,"EcashRecoveryFinalState"],[6,"Cancellable"],[3,"EcashRecoveryTracker"],[3,"PublicKeyShare"],[3,"BTreeMap"],[8,"Serialize"],[4,"ConsensusItem"],[3,"HashSet"],[3,"MintConsensusItem"],[8,"DeserializeOwned"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NoteKey"],[3,"NoteKeyPrefix"],[3,"PendingNotesKey"],[3,"PendingNotesKeyPrefix"],[3,"OutputFinalizationKey"],[3,"OutputFinalizationKeyPrefix"],[3,"NextECashNoteIndexKey"],[3,"NextECashNoteIndexKeyPrefix"],[3,"NotesPerDenominationKey"],[4,"OutputOutcome"],[3,"DynOutputOutcome"],[4,"CoreError"],[8,"TryIntoOutcome"],[4,"Input"],[8,"Iterator"],[4,"Output"],[4,"TransactionError"],[8,"Decodable"],[3,"Error"],[4,"Network"],[4,"Currency"],[4,"ParseAmountError"],[4,"ParseAmountError"],[4,"Error"],[3,"ParseIntError"],[3,"Txid"],[3,"WalletInput"],[4,"WalletOutput"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"PegInKey"],[3,"PegInPrefixKey"],[8,"MintFederationApi"],[8,"WalletFederationApi"],[8,"LnFederationApi"],[8,"Final"]]},\
"fedimint_core":{"doc":"","t":"DIESQDQSNNIDEDCCDNSOOOOLLAKLAXLLKLLOALALLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLAALLLLLLLOLOOOLLALLALLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLKLLKLLLLLLLLKLLLLLLLLLLLAOOLLLLLLLLKLLLLLLLLALOOAOOOOOOFMLALMALLLLLOOLLOOOALLFMLOLLLLLOCLLLLALAAAALLLLLLLLLLLLLLLLLLKALLLLLLLLLLLLLLLMALLLLLLLALLLLLLLLDDDDDDLMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMMMMLMMMMLLLALLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFFDNRRDNNNNNDDNIDDGDIIIINNNDIGEGEEDGDNNNNNENDNNNNDKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLKMKLLLLLLLLLMLLLLLLLLLLLLLLKLKLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLKLKLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMFMMLLMMMLMMMMMLLLLLKLLMLLLLLLLLMMLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMMFLLLLLLLLLLLLLLLLKLMMMDDDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDRRRLLLLLLLLLLLLLLLLLLLLMLLLLLLMLGDLLLLLLLLLLLLLNDDDNGDQQNEIEEGNDNNDNNNIDQQRIDNNDQNIDGDGNEIIMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMMLFMMMMMLLLLLMLLLAALLLLLLLLLLLLLLKMLLLLLLLLLLKLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMKMMLLLLLLLLLLLLLLLLFFDLLFLLLLLFLLLLLIGDDDDDDDQDEIIIIIIIDRRRRIGDIINLKKKKKLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLAKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLKLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLMLLLLMMLLLMMLLLLLLLLLLIDISQKLLLLKKLLLLLMKLLLKLLLLLDDIIIKKKKKLLLLKKLLKKLLLLLLLLLLMMLLLLKKKKLLLLLLLLLNENNNDDSDDIIIIIDIDNDEDEIIIIDQRGDSSNNGQDNEQNNMMKLLLLLLFLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKKLLLLLLLLLLLMMFMMLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLFLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMAMMLLLLLLLLLLLLAMLLMLLMMLLKLLLLLKLLLLKLLLKLLLKLLLKLLLLLLLKLLLLLLKLLLLLAKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLMMMMMMMMDDENDNDDLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLLLLLMLLLLLLLLLLLLLMLLLLLLMLLLLLLRDDDLLLLLLLLMMLMLLLLLLLLLLLLLLLLMLMLLLLLLLLLFFLLLLLLLLLLLLLRDNDDDDDNRNEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFLLLLLLLLLLDDIYDNIEIYNYALLLLLLLLALLKLLLKLLLKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOMLLLLLLLLLLLLLLALAALLLLLLLLLLLLLLLLLLLLLLLLMMFFOONEDNDNENNNINNNNGGDDDNDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMLMMLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLDDDIDKLLLLLLLLLFLLLLLFFFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLAFFADLLLLLLLMLLLLLLLDDDDDGSQQQQIQENSDDIQGGIIQDISIENQQSQQDQDIIQQDNIQSMMOKKLLAKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLMLKKMLMKKLLLLLLLLLKKKKLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLKMLMLLKKMMLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLMKLLLLLLLLKMLMLKKKLMALMLLLLLKKKLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKAKLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLENGCDNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAIIDDKKLLLLLLLLLALLLLLLLLLKKKKLLLLLLLLLDLLLLLLFMLMLMLLMLLNNGELLLLLLLLLLLLLLLLLLLLLMMDNDDNEINNDDDDMLLLLLLLLLLLLLLLLMMFFFMMMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMDIIDDDDDDDDFLLLLLLLLLLLLLLLLLLLLMLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMLLLMMLLMLLLLLLMMMMMMLLLFFFLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDFMMMMMMMMMMMMMFFFFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLLLLLLLMLLLLLMMLLMLMLLLLLLLLLNNGDENFFLLLLLLLLLLLLLLLLLLLLMLLLLFMLMLLLLLLLLLLLLLLMMMMMMMDLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLGGIQDLLALLLLLLLKKLLLLLFFFFDENLLLLLLLLLLLLLLLLMLLLLLFLLLLLLLLLLLLLLLL","n":["Amount","BitcoinHash","CoreError","DISPLAY_BACKWARD","Engine","Feerate","Inner","LEN","MismatchingVariant","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","ServerModule","Tiered","TransactionId","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_define_with_instance_id_inner","_dyn_newtype_impl_deref_mut","add","add_assign","admin_client","all_zeros","all_zeros","api","apply","as_bits","as_hash","as_inner","as_inner","as_ref","async_trait_maybe_send","backup","base32_len","bitcoinrpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","cancellable","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","db","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_as_encodable_hex","div","dyn_newtype_define","dyn_newtype_display_passthrough","dyn_newtype_impl_dyn_clone_passhthrough","encode_hex","encode_hex_upper","encoding","engine","engine","epoch","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_utils","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_msats","from_ref","from_ref","from_ref","from_ref","from_ref","from_sats","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","hash","hex","impl_db_lookup","impl_db_record","index","into","into","into","into","into","into","into","into_inner","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","macros","max_evil","maybe_add_send","maybe_add_send_sync","module","module_plugin_dyn_newtype_clone_passhthrough","module_plugin_dyn_newtype_define","module_plugin_dyn_newtype_display_passthrough","module_plugin_dyn_newtype_encode_decode","module_plugin_dyn_newtype_eq_passthrough","module_plugin_static_trait_define","msats","msats","mul","net","one_honest","out_idx","outcome","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl_common","plugin_types_trait_impl_config","provide","provide","push_db_key_items","push_db_pair_items","push_db_pair_items_no_serde","query","rem","rem_assign","sats","sats_per_kvb","saturating_sub","serde_as_encodable_hex","serialize","serialize","serialize","serialize","serialize","serialize_as_encodable_hex","server","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","time","timing","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_usize","total","transaction","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","ConfigGenConnectionsRequest","ConfigGenParamsConsensus","ConfigGenParamsRequest","ConfigGenParamsResponse","PeerServerParams","WsAdminClient","add_config_gen_peer","api_url","audit","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fetch_last_epoch_history","fmt","fmt","fmt","fmt","fmt","force_process_epoch","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_config_gen_peers","get_consensus_config_gen_params","get_default_config_gen_params","get_verify_config_hash","inner","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","leader_api_url","meta","meta","modules","modules","name","new","our_current_id","our_name","p2p_url","peers","request","request_auth","run_dkg","serde_tls_cert","serialize","serialize","serialize","serialize","serialize","set_config_gen_connections","set_config_gen_params","set_password","signal_upgrade","start_consensus","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","ApiVersionSet","AwaitingPassword","BECH32_HRP","CONFIG_DOWNLOAD_TOKEN_BYTES","ClientConfigDownloadToken","ConfigGenFailed","Connected","ConsensusRunning","Core","Disconnected","DynGlobalApi","DynModuleApi","Federation","FederationApiExt","FederationError","FederationPeer","FederationResult","FederationStatus","GlobalFederationApi","IFederationApi","IGlobalFederationApi","IModuleFederationApi","InvalidPeerId","InvalidResponse","InvalidVout","InviteCode","JsonRpcClient","JsonRpcResult","OutputOutcomeError","OutputOutcomeResult","PeerConnectionStatus","PeerError","PeerResponse","PeerResult","PeerStatus","ReadyForConfigGen","Rejected","ResponseDeserialization","ResponseDeserialization","Rpc","ServerStatus","SharingConfigGenParams","StatusResponse","Timeout","Upgrading","VerifiedConfigs","VerifyingConfigs","WsFederationApi","all_peers","all_peers","as_ref","await_output_outcome","await_output_outcome","await_tx_outcome","await_tx_outcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_status","consensus_config_hash","consensus_config_hash","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","default","default","default","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discover_api_version_set","discover_api_version_set","download_backup","download_backup","download_client_config","download_client_config","download_token","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation","fetch_epoch_count","fetch_epoch_count","fetch_epoch_history","fetch_epoch_history","fetch_output_outcome","fetch_output_outcome","fetch_tx_outcome","fetch_tx_outcome","flagged","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_config","from_invite_code","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","general","id","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_connected","is_retryable","is_retryable","last_contribution","map_tx_outcome_outpoint","module_id","modules","new","new_with_client","peer","peer_id","peer_ids","peers","peers","peers","peers_flagged","peers_offline","peers_online","provide","provide","provide","request","request_current_consensus","request_raw","request_raw","request_with_strategy","result","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","session_count","source","source","status_by_peer","submit_transaction","submit_transaction","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_backup","upload_backup","url","url","url_to_string_with_default_port","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module","out_idx","outputs_num","peer_id","ClientBackupKey","ClientBackupKeyPrefix","ClientBackupSnapshot","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","into","into","into","into_request","into_request","into_request","serialize","serialize","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BitcoinRpcConfig","FM_BITCOIND_COOKIE_FILE_VAR_NAME","FM_BITCOIN_RPC_KIND","FM_BITCOIN_RPC_URL","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_env_vars","from_ref","hash","into","into_request","kind","serialize","to_bytes","to_owned","try_from","try_into","type_id","url","vzip","Cancellable","Cancelled","borrow","borrow_mut","fmt","fmt","from","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","Cancelled","ClientConfig","ClientConfigResponse","ClientModuleConfig","Commit","CommonModuleInitRegistry","ConfigGenModuleParams","Consensus","Consensus","DistributedGen","DkgError","DkgGroup","DkgMessage","DkgPeerMsg","DkgResult","Done","EmptyGenParams","Extract","Failed","FederationId","G1","G2","HashedCommit","ISupportedDkgMessage","JsonWithKind","Local","Local","META_FEDERATION_NAME_KEY","ModuleInitParams","ModuleInitRegistry","ModuleNotFound","ParamsNotFound","PeerUrl","Private","PublicKey","SGroup","ServerModuleConfig","ServerModuleConfigGenParamsRegistry","ServerModuleConsensusConfig","ServerModuleInitRegistry","Share","SupportedDkgMessage","TypedServerModuleConfig","TypedServerModuleConsensusConfig","api_endpoints","attach","available_decoders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","client_config","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","config","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash","consensus_json","consensus_version","decoders","decoders_strict","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","dummy","epoch_pk","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_erased","from_iter","from_msg","from_msg","from_msg","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_typed","from_typed","get","get_first_module_by_kind","get_first_module_by_kind_cfg","get_module","get_module_cfg","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_kind","is_kind","kind","kind","kind","kind","kind","kind","kinds","load_from_file","local","local","meta","modules","name","new","new","new","parse","partial_cmp","private","provide","redecode_raw","redecode_raw","serde_binary_human_readable","serde_commit","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","signature","source","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_common","to_common","to_erased","to_fake_ln_pub_key","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","to_typed","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","value","value","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","deserialize","serialize","Wrap","borrow","borrow_mut","deserialize","deserialize","erased_serialize","from","into","into_request","serialize","serialize","try_from","try_into","type_id","vzip","ClientConfig","DecodeFn","Decoder","DecoderBuilder","DynClientConfig","DynInput","DynModuleConsensusItem","DynOutput","DynOutputOutcome","DynType","DynUnknown","FinalizationError","IClientConfig","IInput","IModuleConsensusItem","IOutput","IOutputOutcome","Input","IntoDynInstance","KeyPair","LEGACY_HARDCODED_INSTANCE_ID_LN","LEGACY_HARDCODED_INSTANCE_ID_MINT","LEGACY_HARDCODED_INSTANCE_ID_WALLET","MODULE_INSTANCE_ID_GLOBAL","ModuleConsensusItem","ModuleInstanceId","ModuleKind","Output","OutputOutcome","SomethingWentWrong","add_xonly_tweak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","as_str","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_str","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode","decode_fns","decode_fns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","display_secret","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_parts","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_static_str","from_str","from_typed","from_typed","from_typed","from_typed","from_typed","hash","hash","hash","hash","hash","hash","hash","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","new","new_global","partial_cmp","partial_cmp","public_key","secret_bytes","secret_key","serialize","serialize","server","sign_schnorr","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_decodable_type","x_only_public_key","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","deserialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","ClientModule","DynClientModule","IClientModule","KIND","Module","as_any","borrow","borrow_mut","clone","clone_into","decoder","decoder","deref","fmt","from","from","from_ref","inner","input_amount","into","into_request","module_kind","output_amount","to_owned","try_from","try_into","type_id","vzip","DynServerModule","DynVerificationCache","IServerModule","IVerificationCache","VerificationCache","api_endpoints","as_any","as_any","audit","await_consensus_proposal","borrow","borrow","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone_into","consensus_proposal","decoder","deref","deref","deref_mut","fmt","fmt","from","from","from","from","from_ref","inner","inner","into","into","into_request","into_request","output_status","process_consensus_item","process_input","process_output","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AltTest","AutocommitError","ClientBackup","ClosureError","CommitFailed","CommitTracker","CommittableIsolatedDatabaseTransaction","DB_PREFIX","Database","DatabaseInner","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyWithNotify","DatabaseLookup","DatabaseRecord","DatabaseTransaction","DatabaseValue","DatabaseVersion","DatabaseVersion","DatabaseVersionKey","DbKeyPrefix","DbKeyPrefixIter","DecodingError","IDatabase","IDatabaseTransaction","IDatabaseTransactionOps","ISingleUseDatabaseTransaction","IsolatedDatabaseTransaction","Key","MODULE_GLOBAL_PREFIX","MigrationMap","ModuleDatabaseTransaction","NOTIFY_ON_MODIFY","NOTIFY_ON_MODIFY","Other","PercentTestKey","PrefixStream","Record","SingleUseDatabaseTransaction","Test","TestDbKeyPrefix","Value","WrongLength","WrongPrefix","_marker","_marker","add_notification_key","add_notification_key","add_notification_key","add_notification_key","add_notification_key","add_notification_key","add_notification_key","apply_migrations","autocommit","back_idx","begin_transaction","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_tracker","commit_tracker","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx","commit_tx_result","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","db","dbtx","decode_value","decoders","decoders","drop","eq","equivalent","equivalent","erased_serialize","erased_serialize","expect_write_conflict","find_by_prefix","find_by_prefix","find_by_prefix_sorted_descending","find_by_prefix_sorted_descending","find_by_prefix_sorted_descending","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","future_returns_shortly","get","get_isolated","get_value","get_value","has_writes","idx","increment","inner_db","inner_tx","insert_entry","insert_entry","insert_new_entry","insert_new_entry","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_committed","isolated_tx","iter","len","marker","mem_impl","module_decoders","module_instance_id","new","new","new","new","new","new","new_from_box","new_isolated","new_module_tx","new_with_decoders","next","next_back","notifications","notifications","nth","on_commit","on_commit_hooks","other","partial_cmp","prefix","prefix","prefix_with_module","provide","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_get_bytes","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","raw_remove_entry","raw_remove_entry","remove_by_prefix","remove_by_prefix","remove_entry","remove_entry","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","rollback_tx_to_savepoint","serialize","serialize","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","set_tx_savepoint","size_hint","test_utils","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_db","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_check","wait_key_exists","with_module_prefix","wrong_length","wrong_prefix","attempts","attempts","error","last_error","expected","expected","found","found","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseOperation","Delete","DummyError","Insert","MemDatabase","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","db","default","default","default","dump_db","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","key","key","new","num_pending_operations","num_savepoint_operations","operations","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","rollback_tx_to_savepoint","savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","NOTIFY_BUCKETS","Notifications","NotifyQueue","NotifyingTransaction","add","add_notification_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buckets","buckets","commit_tx","dbtx","default","default","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","new","new","new","notifications","notify","notify_queue","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","register","rollback_tx_to_savepoint","set_tx_savepoint","slot_index_for_hash","slot_index_for_key","submit_queue","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ALT_MODULE_PREFIX","AltDbPrefixTestPrefix","AltTest","AltTestKey","DbPrefixTestPrefix","DbPrefixTestPrefixV0","PercentPrefixTestPrefix","PercentTestKey","PercentTestKey","TEST_MODULE_PREFIX","Test","TestDbKeyPrefix","TestKey","TestKeyV0","TestVal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","cmp","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expect_write_conflict","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","future_returns_shortly","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","migrate_test_db_version_0","partial_cmp","partial_cmp","partial_cmp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_module_db","verify_module_prefix","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_by_prefix","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","verify_string_prefix","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BigSize","CountWrite","Decodable","Decodable","DecodeError","Decoded","DynEncodable","DynRawFallback","Encodable","Encodable","Raw","UnzipConsensus","as_hex","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode_hex","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_to_hex","consensus_encode_to_vec","consensus_hash","count","count","deserialize","emit_bool","emit_i16","emit_i32","emit_i64","emit_i8","emit_slice","emit_u16","emit_u32","emit_u64","emit_u8","eq","equivalent","equivalent","erased_serialize","expect_decoded","expect_decoded_ref","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_err","from_ref","from_str","impl_encode_decode_num_as_bigsize","impl_encode_decode_num_as_plain","impl_encode_decode_tuple","inner","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","new_custom","provide","read","read","redecode_raw","secp256k1","serialize","tbs","tls","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write","write","write_all","write_fixedint","write_varint","module_instance_id","raw","deserialize","serialize","impl_encode_decode_bridge","impl_external_encode_bls","ClientConfigSignatureShare","ConsensusItem","ConsensusUpgrade","ConsensusUpgrade","EpochOutcome","EpochOutcomeSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","MissingPreviousEpoch","MissingSignature","Module","NotEnoughValidSigShares","SerdeConsensusItem","SerdeEpochHistory","SerdeSignature","SerdeSignatureShare","SignedEpochOutcome","Transaction","UnzipConsensusItem","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_config_signature_share","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_sigs","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_upgrade","deserialize","deserialize","epoch","epoch_outcome_signature_share","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","items","last_hash","module","new","outcome","rejected_txs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AbbreviateDebug","AbbreviateHexBytes","AbbreviateJson","AbbreviatedDebug","OptStracktrace","abbreviated_fmt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","floor_char_boundary","fmt","fmt","fmt","fmt","fmt","fmt_abbreviated_object","fmt_abbreviated_str","fmt_abbreviated_vec","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","rust_log_full_enabled","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","serde","deserialize","serialize","tests","Data","borrow","borrow_mut","deserialize","eq","erased_serialize","fmt","from","inner","into","into_request","serialize","try_from","try_into","type_id","vzip","ApiAuth","ApiEndpoint","ApiEndpointContext","ApiError","ApiRequest","ApiRequestErased","CONSENSUS_VERSION","ClientConfig","ClientConfig","Common","Common","CommonModuleInit","ConsensusItem","ConsensusProposal","Contribute","DATABASE_VERSION","DynCommonModuleInit","DynServerModuleInit","ExtendsCommonModuleInit","Gen","HandlerFn","HandlerFnReturn","IDynCommonModuleInit","IServerModuleInit","Input","InputMeta","IntoModuleError","KIND","ModuleCommon","ModuleError","Other","Output","OutputOutcome","PATH","Param","Params","PeerHandle","Response","SerdeModuleEncoding","ServerModule","ServerModuleInit","State","Target","TransactionItemAmount","Trigger","TypedApiEndpoint","VerificationCache","ZERO","amount","amount","api_endpoint","api_endpoints","as_common","as_ref","as_ref","audit","audit","auth","await_consensus_proposal","bad_request","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","commit_tx_result","consensus_proposal","database_version","db","dbtx","dbtx","decoder","decoder","decoder","decoder","decoder_builder","default","deref","deref","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","dump_database","dump_database","empty","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forces_new_epoch","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_typed","get_client_config","get_client_config","get_database_migrations","get_database_migrations","handle","handler","has_auth","has_auth","hash","hash","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into_items","into_module_error_other","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","items","kind","map","message","module_kind","module_kind","new","new","new","new","new","new_auto_trigger","not_found","output_status","params","parse_params","path","peer_ids","process_consensus_item","process_input","process_output","provide","pub_keys","registry","request_auth","request_auth","serialize","serialize","serialize","server_error","source","supported_api_versions","supported_api_versions","to_dyn_common","to_json","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_typed","to_typed","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner_known_module_kind","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unauthorized","validate_config","validate_config","validate_params","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_exists","wait_value_matches","with_auth","with_auth","Audit","AuditItem","AuditSummary","ModuleSummary","add_items","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_net_assets","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_audit","from_ref","from_ref","generate_module_summaries","into","into","into","into","into_request","into_request","into_request","into_request","items","milli_sat","module_name","module_summaries","name","net_assets","net_assets","net_assets","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DecodingMode","Fallback","ModuleDecoderRegistry","ModuleInstanceId","ModuleRegistry","Reject","ServerModuleRegistry","assert_reject_mode","assert_reject_mode","attach_config_gen_params","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decoder_registry","decoder_registry","decoding_mode","decoding_mode","default","default","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_iter","from_ref","from_ref","get","get_expect","get_with_kind","hash","inner","into","into","into_request","into_request","iter_modules","new","register_module","state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_fallback","with_fallback","ApiVersion","CoreConsensusVersion","ModuleConsensusVersion","MultiApiVersion","MultiApiVersionIter","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","api","api","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","core_consensus","core_consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_raw","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_by_major","into","into","into","into","into","into","into","into","into_iter","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_consistent","iter","major","minor","module_consensus","modules","new","next","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","peers","IMuxPeerConnections","IPeerConnections","MuxPeerConnections","PeerConnections","ban_peer","ban_peer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","fake","from","from","from_ref","into","into","into_dyn","into_dyn","into_request","into_request","receive","receive","send","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FakePeerConnections","ban_peer","borrow","borrow_mut","from","into","into_request","make_fake_peer_connection","peer_id","receive","rx","send","task_handle","try_from","try_into","tx","type_id","vzip","Accepted","Rejected","SerdeOutputOutcome","TransactionStatus","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","from","from_ref","hash","into","into_request","serialize","to_owned","try_from","try_into","type_id","vzip","epoch","outputs","AllOrDeadline","Continue","DiscoverApiVersionSet","ErrorStrategy","Failure","QueryStep","QueryStrategy","Retry","Success","ThresholdConsensus","UnionResponses","UnionResponsesSingle","VerifiableResponse","allow_threshold_fallback","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_versions","deadline","discover_common_api_versions_set","discover_common_core_api_version","discover_common_module_api_version","error_strategy","error_strategy","error_strategy","errors","fmt","format_errors","from","from","from","from","from","from","from","from","full_participation","inner","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","new","new","new","new","new","new","num_peers","process","process","process","process","process","process","process","process","request_timeout","request_timeout","responses","responses","responses","responses","retry","threshold","threshold","threshold","threshold","threshold_consensus","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","verifier","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","general","peers","Elapsed","MaybeSend","MaybeSync","RwLock","RwLockReadGuard","RwLockWriteGuard","TaskGroup","TaskGroupInner","TaskHandle","TaskPanicGuard","TaskShutdownToken","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","clone","clone","clone_into","clone_into","completed","const_new","const_with_max_readers","data","data","default","default","default","deref","deref","deref_mut","downgrade","downgrade_map","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get_mut","imp","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_mapped","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_shutting_down","is_shutting_down","join","join_all","join_all_inner","make_handle","make_shutdown_rx","make_subgroup","map","map","marker","marker","mr","name","new","new","new","on_shutdown_rx","on_shutdown_tx","payment_path_failed","payment_path_successful","permits_acquired","poll","probe_failed","probe_successful","provide","read","read_owned","resource_span","resource_span","resource_span","s","s","s","shutdown","shutdown","shutdown_join_all","sleep","sleep_until","spawn","spawn","spawn_local","subgroups","timeout","to_owned","to_owned","to_string","to_string","to_string","try_downgrade_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","c","data","data","marker","marker","mr","permits_acquired","resource_span","resource_span","resource_span","s","s","s","sleep","sleep_until","spawn","spawn_local","timeout","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","consensus_decode","consensus_encode","consensus_encode_dyn","count_tiers","default","deserialize","deserialize","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_iter","from_ref","from_ref","gen_denominations","get","get_mut","get_mut_or_default","hash","hash","insert","into","into","into_request","into_request","iter","max_tier","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_bytes","to_owned","to_owned","to_public","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TieredMulti","TieredMultiZip","TieredSummary","_pd","all_tiers_exist_in","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","count_items","count_items","count_tiers","count_tiers","default","default","deserialize","deserialize","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","extend","fmt","fmt","from","from","from","from_bytes","from_iter","from_iter","from_ref","from_ref","get","get_mut","hash","inc","into","into","into","into_iter","into_iter","into_iter_items","into_request","into_request","into_request","is_empty","iter","iter","iter_items","iter_tiers","iters","longest_tier_except","map","multiunzip","new","new","next","represent_amount","serialize","serialize","structural_eq","summary","to_bytes","to_owned","to_owned","total_amount","total_amount","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","now","TimeReporter","TimeReporterInner","borrow","borrow","borrow_mut","borrow_mut","cancel","drop","finish","from","from","info","inner","into","into","into_request","into_request","level","level","name","new","report","start","threshold","threshold","threshold_millis","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InvalidSignature","MissingSignature","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","agg_keys","agg_sign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from_bytes","from_ref","hash","inputs","into","into","into_request","into_request","new_pre_session","outputs","provide","signature","to_bytes","to_owned","to_string","try_from","try_from","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","validate_signature","vzip","vzip","fee","hash","inputs","key","outputs","sig","tx","TxOutProof","block","block_header","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contains_tx","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_ref","hash","into","into_request","merkle_proof","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","BoxFuture","BoxStream","NextOrPending","Output","SanitizedUrl","borrow","borrow_mut","broadcaststream","fmt","fmt","from","into","into_request","new_borrowed","new_owned","next_or_pending","ok","to_string","try_from","try_into","type_id","vzip","write_new","write_new_async","write_overwrite","write_overwrite_async","BroadcastStream","BroadcastStreamRecvError","Lagged","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ref","inner","into","into","into_request","into_request","into_streaming_request","make_future","new","next_or_pending","ok","poll_next","provide","to_owned","to_string","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_core"],[313,"fedimint_core::admin_client"],[462,"fedimint_core::admin_client::serde_tls_cert"],[464,"fedimint_core::api"],[870,"fedimint_core::api::OutputOutcomeError"],[872,"fedimint_core::api::PeerError"],[873,"fedimint_core::backup"],[942,"fedimint_core::bitcoinrpc"],[975,"fedimint_core::cancellable"],[990,"fedimint_core::config"],[1433,"fedimint_core::config::serde_binary_human_readable"],[1435,"fedimint_core::config::serde_commit"],[1450,"fedimint_core::core"],[1828,"fedimint_core::core::backup"],[1869,"fedimint_core::core::client"],[1897,"fedimint_core::core::server"],[1946,"fedimint_core::db"],[2317,"fedimint_core::db::AutocommitError"],[2321,"fedimint_core::db::DecodingError"],[2325,"fedimint_core::db::mem_impl"],[2421,"fedimint_core::db::notifications"],[2480,"fedimint_core::db::test_utils"],[2687,"fedimint_core::encoding"],[2806,"fedimint_core::encoding::DynRawFallback"],[2808,"fedimint_core::encoding::as_hex"],[2810,"fedimint_core::encoding::btc"],[2811,"fedimint_core::encoding::tbs"],[2812,"fedimint_core::epoch"],[3019,"fedimint_core::fmt_utils"],[3074,"fedimint_core::hex"],[3075,"fedimint_core::hex::serde"],[3078,"fedimint_core::hex::serde::tests"],[3094,"fedimint_core::module"],[3418,"fedimint_core::module::audit"],[3497,"fedimint_core::module::registry"],[3560,"fedimint_core::module::version"],[3742,"fedimint_core::net"],[3743,"fedimint_core::net::peers"],[3781,"fedimint_core::net::peers::fake"],[3799,"fedimint_core::outcome"],[3824,"fedimint_core::outcome::TransactionStatus"],[3826,"fedimint_core::query"],[3956,"fedimint_core::query::QueryStep"],[3958,"fedimint_core::task"],[4157,"fedimint_core::task::imp"],[4179,"fedimint_core::tiered"],[4248,"fedimint_core::tiered_multi"],[4338,"fedimint_core::time"],[4339,"fedimint_core::timing"],[4373,"fedimint_core::transaction"],[4424,"fedimint_core::transaction::TransactionError"],[4431,"fedimint_core::txoproof"],[4462,"fedimint_core::util"],[4488,"fedimint_core::util::broadcaststream"]],"d":["Represents an amount of BTC inside the system. The base …","Trait which applies to hashes of all types.","","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","Length of the hash, in bytes.","","","for consensus-related calculations given the number of …","<code>OutPoint</code> represents a globally unique output in a …","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","Example","","","","","","","Returns an all zero hash.","","","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","async trait that use MaybeSend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint Core API (common) module interface","","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implements the <code>Display</code> trait for dyn newtypes whose traits …","Implement <code>Clone</code> on a “dyn newtype”","","","This module defines a binary encoding interface which is …","Constructs a new engine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","","","","","","Copies a byte slice into a hash object.","","","","","","Hashes some bytes.","","","","","","","","This is a helper macro that generates the implementations …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","","","","","","","","number of peers that can be evil without disrupting the …","MaybeSync can not be used in <code>dyn $Trait + MaybeSend</code>","See <code>maybe_add_send</code>","","","Define a “module plugin dyn-newtype” which is like a …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","Define a “plugin” trait","Shorthand for <code>Amount::from_msats</code>","","","","number of peers to select such that one is honest (under …","As a transaction may have multiple outputs, this refers to …","","","","","","","Implements the necessary traits for all associated types …","Implements the necessary traits for all configuration …","","","","","","","","","Shorthand for <code>Amount::from_sats</code>","","","","","","","","","","","","","","","","number of peers required for a signature","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The referenced transaction ID","","","","","","","","","","","","","","","","","","Sent by admin user to the API","The config gen params that need to be in consensus, sent …","Config gen params that can be configured from the UI","The config gen params response which includes our peer id","Connection information sent between peers in order to …","For a guardian to communicate with their server","During config gen, used for an API-to-API call that adds a …","API for secure websocket requests","Show an audit across all modules","Check auth credentials","","","","","","","","","","","","","TLS cert is necessary for P2P auth during DKG and  …","","","","","","","","","","","The same for all peers","","","","","","","","","","","","","","","","","","","","","","","","Delegates to <code>fetch_epoch_history</code>","","","","","","Sends a signal to consensus that we want to force running …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","During config gen, gets all the server connections we’ve …","Returns the consensus config gen params, followers will …","Gets the default config gen params which can be configured …","After DKG, returns the hash of the consensus config …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Url of “leader” guardian to send our connection info to","Guardian-defined key-value pairs that will be passed to …","Guardian-defined key-value pairs that will be passed to …","Module init params (also contains local params from us)","Set the params (if leader) or just the local params (if …","Name of the peer, used in TLS auth","","Our id (might change if new peers join)","Our guardian name","P2P is the network for running DKG and consensus","Endpoints of all servers","","","Runs DKG, can only be called once after configs have been …","","","","","","","During config gen, sets the server connection containing …","Leader sets the consensus params, everyone sets the local …","Sets the password used to decrypt the configs and …","Sends a signal to consensus that we are ready to shutdown …","Reads the configs from the disk, starts the consensus …","Returns the status of the server","Status of the peer if known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of api versions for each component (core + modules)","Server needs a password to read configs","We can represent client invite code as a bech32 string for …","Size of a download token","Allows a client to download the config","We failed running config gen","","Consensus is running","","","","","","An extension trait allowing to making federation-wide API …","An API request error when calling an entire federation","","","The status of a server, including how it views its peers","The API for the global (non-module) endpoints","An API (module or global) that can query a federation","Trait marker for the global (non-module) endpoints","Trait marker for the module (non-global) endpoints","","","","Information required for client to construct …","","","","","","An API request error when calling a single federation peer","","","","Ready to run config gen once all peers are ready","","","","","The state of the server returned via APIs","Waiting for peers to share the config gen params","","","Restarted from a planned upgrade (requires action to start)","We have verified all our peer configs","Config is generated, peers should verify the config","Mint API client that will try to run queries against all …","List of all federation peers for the purpose of iterating …","","","","","","Await the outcome of an entire transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches the server consensus hash if enough peers agree on …","","","","","","","","","","","","","","","","","","","","","","","","","Query peers and calculate optimal common api versions to …","","","","Fetch client configuration info only if verified against a …","","Config download token (might only be used a certain number …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the outcome of an entire transaction","Indicates that this peer needs attention from the operator …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a new API client from a client config","Creates a new API client from a invite code, assumes they …","","","","","","","","","","","","","","Authentication id for the federation","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Creates a new API client","Creates a new API client","","","","","","","This should always be 0 if everything is okay, so a …","","","","","","","","Make request to a specific federation peer by <code>peer_id</code>","","Make an aggregate request to federation, using <code>strategy</code> to …","","","","","","","","","","","","","","","","Submit a transaction for inclusion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Url to reach an API that we can download configs from","<code>jsonrpsee</code> converts the <code>Url</code> to a <code>&amp;str</code> internally and then …","","","","","","","","","","","","","","","","","","","","","","Key used to store user’s ecash backups","","User’s backup, received at certain time, containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the bitcoin RPC","Env var that can be set to point at the bitcoind’s …","Env var for bitcoin RPC kind","Env var for bitcoin URL","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","User has cancelled the DKG task","Total client config","The API response for client config requests, signed by the …","Config for the client-side of a particular Federation …","","","Type erased <code>ModuleInitParams</code> used to generate the …","Consensus parameters for config generation","Shared consensus-critical config","","Captures an error occurring in DKG","Defines a group (e.g. G1 or G2) that we can generate keys …","","Things that a <code>distributed_gen</code> config can send between peers","Result of running DKG","","Empty struct for if there are no params","","Error running DKG","The federation id is a copy of the authentication …","","","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","Locally configurable parameters for config generation","Local non-consensus, not security-sensitive settings","Key under which the federation name can be sent to client …","","","","","","Private for this federation member data that are security …","","","Config for the server-side of a particular Federation …","Registry that contains the config gen params for all …","","","","<code>enum</code> version of <code>SupportedDkgMessage</code>","Module (server side) config, typed","Consensus-critical part of a server side module config","API endpoints for each federation member","","Get decoders for <code>modules</code> and skip unsupported ones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The client config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the consensus hash for a given client config","","Core consensus version","","Get decoders for <code>modules</code> and fail if any is unsupported","","","","","","","","","","","","","","","","","","","Random dummy id for testing","Threshold pubkey for authenticating epoch history","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation name from config metadata (if set)","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Assemble from the distinct parts","Assemble from the three functionally distinct parts","","","","","","","","","","","","","","","","","","","(soft-deprecated): Get the first instance of a module of a …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional config the federation wants to transmit to the …","Configs from other client modules","The peer’s name","","","","","","","","See <code>DynRawFallback::redecode_raw</code>.","","","Handling the Group serialization with a wrapper","","","","","","","","","","","","","","","","Auth key signature over the <code>client_config</code>","","","","","","","","","Turn the typed config into type-erased version","Converts a federation id to a public key to which we know …","","","","","","","","","","","","","","","","","","Split the config into its distinct parts","Split the config into its three functionally distinct parts","","","Converts the JSON into typed version, errors unless both …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)","","","","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Decoder for module associated types","","An owned, immutable input to a <code>Transaction</code>","An owned, immutable input to a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","An owned, immutable output of a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","The type erased version of the type implementing this trait","A type used by when decoding dyn-types, when the module is …","","","Something that can be an <code>DynInput</code> in a <code>Transaction</code>","","Something that can be an <code>DynOutput</code> in a <code>Transaction</code>","","","A type that has a <code>Dyn*</code>, type erased version of itself","Opaque data structure that holds a keypair consisting of a …","","","","Special IDs we use for global dkg","","Module instance ID","A type of a module","","","","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>DecoderBuilder</code> to which decoders for single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a specific <code>DynType</code> from the <code>reader</code> byte stream.","","","","","","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into its type-erased equivalent","","","","","","","","","","","","","","","","","","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","","","","","Attach decoder for a specific <code>Type</code>/<code>DynType</code> pair where …","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the type-erased decoder of the module","","","","Returns the argument unchanged.","","","","Returns the amount represented by the input and the fee …","Calls <code>U::from(self)</code>.","","","Returns the amount represented by the output and the fee …","","","","","","","","Backend side module interface","","","Returns a list of custom API endpoints defined by the …","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","Returns the decoder belonging to the server module","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","Error returned when the autocommit function fails","","Error returned by the closure provided to <code>autocommit</code>. If …","Committing the transaction failed too many times, giving up","A handle to a type-erased database implementation","<code>CommittableIsolatedDatabaseTransaction</code> is a private, …","","","","<code>DatabaseKey</code> that represents the lookup structure for …","","Marker trait for <code>DatabaseKey</code>s where <code>NOTIFY</code> is true","A key that can be used to query one or more <code>DatabaseRecord</code> …","A key + value pair in the database with a unique prefix …","<code>DatabaseTransaction</code> is the parent-level database …","<code>DatabaseValue</code> that represents the value structure of …","","","","","An iterator over the variants of Self","","","Fedimint requires that the database implementation …","","<code>ISingleUseDatabaseTransaction</code> re-defines the functions from","IsolatedDatabaseTransaction is a private wrapper around …","","","MigrationMap is a BTreeMap that maps DatabaseVersions to …","<code>ModuleDatabaseTransaction</code> is the public wrapper structure …","","Send a notification to tasks waiting to be notified if the …","","","","","Struct that implements <code>ISingleUseDatabaseTransaction</code> and …","","","","","","","","","","","","","","","<code>apply_migrations</code> iterates from the on disk database …","Runs a closure with a reference to a database transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new Fedimint database from any object …","Creates a new Fedimint database from a <code>Box&lt;dyn IDatabase&gt;</code>, …","","","","","","","","","Register a hook that will be run after commit succeeds.","","","","","","","","Returns an stream of key-value pairs with keys that start …","","","","","","Same as <code>Self::raw_find_by_prefix</code> but the order is …","","","","","","","","","","","","","Delete keys matching prefix","","","","","","","","","","","","","","","","","","","Create a savepoint during the transaction that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for key to be notified.","Waits for key to be present in database.","","","","Number of attempts","The attempt on which the closure returned an error","Error returned by the closure","Last error on commit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of buckets used for <code>Notifications</code>.","The state of Notification.","Save notifications to be sent after transaction is …","Wrapper to implement <code>add_notification_key</code>","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Notify a key.","","","","","","","","This registers for notification when called.","","","","","Notifies the waiters about the notifications recorded in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lightning TLV uses a custom variable-length integer called …","A writer counting number of writes written to it","Data which can be encoded in a consensus-consistent way","","","","Object-safe trait for things that can encode themselves","A type that decodes <code>module_instance_id</code>-prefixed <code>T</code>s even …","Data which can be encoded in a consensus-consistent way","","","","Serde implementations using hex-encoded encodables","","","","","","","","","","","","Decode an object with a well-defined format","","","Decode an object from hex","Encode an object with a well-defined format. Returns the …","","","","","","","","<code>Self::consensus_encode</code> to newly allocated <code>Vec&lt;u8&gt;</code>","Generate a SHA256 hash of the consensus encoding using the …","Returns the number of bytes successfully written so far","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner writer, discarding this wrapper","","","","","","","","","Attempt to re-decode raw values with new set of of <code>modules</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Threshold sign the configs for verification via the API","All the items that may be produced during a consensus epoch","May eventually contains consensus info about the upgrade","Fed shutdown occurs once a threshold want to upgrade","","Threshold sign the epoch history for verification via the …","","","","","","","","Any data that modules require consensus on","","","","","","","Fedimint tx that contains module inputs and outputs that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines signature shares from peers, ignoring bad …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","All the consensus items along with the <code>PeerId</code> of the peer …","","","","","Transactions from <code>items</code> that turned out to be invalid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper that causes the inner <code>T</code> to be debug-formatted …","Use for displaying bytes in the logs","Use for displaying potentially large <code>[serde_json::Value]</code>s …","Something that can be debug-formatted in an abbreviated way","Optional stacktrace formatting for errors.","","","","","","","","","","","","","","","","","Format json object value truncating keys if there’s too …","Format json string value if it’s too long","Format json array value truncating elements if there’s …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize a hex String to a <code>Vec&lt;u8&gt;</code>","Serialize a <code>&amp;[u8]</code> to a hex String","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Authentication uses the hashed user password in PHC format","Definition of an API endpoint defined by a module <code>M</code>.","State made available to all API endpoints for handling a …","","All requests from client to server contain these fields","","","","","","","","","","Contribute consensus items if other module triggers an …","This represents the module’s database version that the …","","","","","","","Operations common to Server and Client side module gen dyn …","Interface for Module Generation","","","Extension trait with a function to map <code>Result</code>s used by …","","Module associated types required by both client and server","","","","","example: /transaction","","","A handle passed to <code>ServerModuleInit::distributed_gen</code>","","Creates a struct that can be used to make our …","","Module Generation trait with associated types","","","Information about the amount represented by an input or …","Trigger new epoch immediately including these consensus …","","","","","","Example","Returns a list of custom API endpoints defined by the …","","","","","Queries the database and returns all assets and …","Hashed user password if the API requires authentication","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","Attempts to commit the dbtx or returns an ApiError","This module’s contribution to the next consensus proposal","","","Database tx handle, will be committed","","","","","Returns a decoder for the following associated types of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Converts the consensus config into the client config","Retrieves the <code>MigrationMap</code> from the module to be applied …","Retrieves the <code>MigrationMap</code> from the module to be applied …","","Handler for the API call that takes the following …","Whether the request was authenticated as the guardian who …","","","","Initialize the <code>DynServerModule</code> instance from its config","Initialize the <code>DynServerModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","<code>db</code> and <code>dbtx</code> should be isolated.","","","","Trigger new epoch if contains any elements, otherwise …","","Retrieve the current status of the output. Depending on …","Parameters required by the API","","Path under which the API endpoint can be reached. It …","","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","Returns the auth set on the request (regardless of whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In cases where we know exactly which module kind we expect …","","","","","","","","","","","","","","","","","","Fedimint consensus and API versioning.","Version of the module consensus supported by this …","","","","","","","","","","","","","","Waits for key to be present in database.","Waits for key to have a value that matches.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallback to decoding unknown module instance ids as …","Collection of decoders belonging to modules, typically …","","Module Registry hold module-specific data <code>M</code> by the …","Reject unknown module instance ids","Collection of server modules","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","","","","","","","","","","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get module data by instance id","Return the module data belonging to the module identified …","Get module data by instance id, including <code>ModuleKind</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return an iterator over all module data","Create <code>Self</code> from an iterator of pairs","Add a module to the registry","","","","","","","","","","","","","","Api version supported by a core server or a client/server …","Consensus version of a core server","Consensus version of a specific module instance","Multiple, disjoint, minimum required or maximum supported, …","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create <code>SupportedModuleApiVersions</code> from raw parts","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verify the invariant: sorted by unique major numbers","","Major API version","Minor API version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert <code>version</code> to the list of supported APIs","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>IPeerConnections</code> but with an ability to handle …","Connection manager that tries to keep connections open to …","Owned <code>MuxPeerConnections</code> trait object type","Owned <code>PeerConnections</code> trait object type","Removes a peer connection in case of misbehavior","Removes a peer connection in case of misbehavior","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the struct to a <code>PeerConnection</code> trait object","Converts the struct to a <code>PeerConnection</code> trait object","","","Await receipt of a message from any connected peer.","Await receipt of a message from any connected peer.","Send a message to a specific peer.","Send a message to a specific destination at specific peer.","","","","","","","","","","","Removes a peer connection in case of misbehavior","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a fake link between <code>peer1</code> and <code>peer2</code> for test …","","","","","","","","","","","The transaction was accepted and is now being processed","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Query strategy that returns when all peers responded or a …","Do nothing yet, keep waiting for requests","Query for supported api versions from all the guardians …","","Fail the whole request","Results from the strategy handling a response from a peer","","Retry request to this peer","Return the successful result","Returns when a threshold of responses are equal","Returns the deduplicated union of a threshold of responses","Returns the deduplicated union of <code>required</code> number of …","Returns first response with a valid signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Strategy for returning first response that is verifiable …","","","","","","","","","","","","","","","","Should requests for this strategy have specific timeouts?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>MaybeSend</code> is no-op on wasm and <code>Send</code> on non wasm.","<code>MaybeSync</code> is no-op on wasm and <code>Sync</code> on non wasm.","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A group of task working together","","","","","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","","","Did the future completed successfully (no panic)","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","Atomically downgrades a write lock into a read lock …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a mutable reference to the underlying data.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","","","","","","","","","","","Is task group shutting down?","","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Create a sub-group","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generates denominations as powers of 2 up to and including …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the highest tier amount","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","","Represents notes of different denominations.","","","","Verifies that all keys in <code>self</code> are present in the keys of …","","","","","","","","","","","","","","Returns the number of items in all vectors","","Returns the number of tiers","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns an <code>Option</code> with a reference to the vector of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an consuming iterator over every <code>(Amount, T)</code>","","","","Verifies whether all vectors in all tiers are empty","Returns an borrowing iterator","","Returns an iterator over every <code>(Amount, &amp;T)</code>","Returns an iterator over the keys","","Returns the length of the longest vector of all tiers, …","Applies the given closure to every <code>(Amount, T)</code> pair","","Creates a new MultiZip Iterator from <code>Notes</code> iterators. …","Returns a new <code>TieredMulti</code> with the given <code>BTreeMap</code> map","","Determines the denominations to use when representing an …","","","Verifies whether the structure of <code>self</code> and <code>other</code> is …","Returns the summary of number of items in each tier","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","","","","","","","","","","","","Data inside <code>TimeReporter</code>, in another struct to be able to …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Inner data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Add a threshold, which will log a warning if exeeded","","Handy alias for <code>Self::threshold</code>","","","","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","<code>DynInput</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Precompute a combined public key and the hash of the given …","<code>DynOutput</code>s created as a result of the transaction","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Future that is <code>Send</code> unless targeting WASM","Stream that is <code>Send</code> unless targeting WASM","","","Wrapper for <code>Url</code> that only prints the scheme, domain, port …","","","Copied from <code>tokio_stream</code> 0.1.12 to use our optional Send …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Write out a new file (like <code>std::fs::write</code> but fails if …","","","","A wrapper around <code>tokio::sync::broadcast::Receiver</code> that …","An error returned from the inner stream of a …","The receiver lagged too far behind. Attempting to receive …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new <code>BroadcastStream</code>.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","","",""],"i":[0,0,0,256,256,0,256,256,34,33,0,0,0,0,0,0,0,33,1,0,0,0,0,1,1,0,256,2,0,0,2,2,256,2,2,0,0,2,0,2,2,16,1,17,33,9,34,2,16,1,17,33,9,34,9,0,2,2,16,1,17,9,2,16,1,17,9,2,16,1,17,9,0,2,16,1,17,9,2,16,1,17,9,2,16,1,17,9,0,0,370,2,2,16,1,17,9,0,1,0,0,0,2,2,0,256,2,0,2,16,1,17,9,2,2,16,16,1,1,17,17,9,9,0,2,16,1,17,9,2,2,2,16,16,1,1,17,17,33,33,9,34,34,0,2,2,16,16,1,1,17,33,33,33,9,34,2,2,16,1,17,9,256,2,2,256,2,1,2,16,1,17,9,1,256,2,2,2,1,1,256,2,16,1,17,9,0,0,0,2,2,16,1,17,33,9,34,256,2,2,16,1,17,33,9,34,0,370,0,0,0,0,0,0,0,0,0,0,1,1,0,370,17,0,2,16,1,17,9,0,0,33,34,0,0,0,0,1,1,0,9,1,0,2,16,1,17,9,0,0,33,1,1,1,0,370,0,0,0,0,2,16,1,17,9,2,2,16,1,17,9,2,16,1,17,33,34,16,370,0,2,2,16,1,17,33,9,34,2,16,1,17,33,9,34,17,0,2,16,1,17,33,9,34,0,2,16,1,17,33,9,34,2,0,0,0,0,0,0,60,61,60,60,60,65,61,66,67,68,60,65,61,66,67,68,61,65,61,66,67,68,65,61,66,67,68,67,68,65,61,66,67,68,61,66,67,68,61,61,66,66,67,67,68,68,65,61,66,67,68,60,65,61,66,67,68,60,60,65,61,66,67,68,65,61,66,67,68,60,60,60,60,60,60,65,61,66,67,68,60,65,61,66,67,68,65,66,68,66,68,61,60,67,65,61,66,60,60,60,0,65,61,66,67,68,60,60,60,60,60,60,61,65,61,66,67,68,60,65,61,66,67,68,60,65,61,66,67,68,60,65,61,66,67,68,60,60,65,61,66,67,68,0,0,0,98,0,0,0,98,97,98,103,97,0,0,103,0,0,0,0,0,0,0,0,0,101,101,103,0,0,0,0,0,0,0,0,0,0,98,103,101,103,101,0,98,0,103,98,98,98,0,371,84,85,372,84,372,84,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,104,91,92,85,84,93,94,95,96,97,98,80,91,92,85,84,93,94,95,96,97,98,80,83,96,372,84,91,94,91,93,94,91,93,94,91,95,96,97,98,92,85,91,93,94,95,96,97,98,80,372,84,372,84,372,84,93,93,94,95,96,97,98,80,93,93,94,94,95,95,96,96,97,97,98,98,80,80,91,93,94,95,96,97,98,80,80,372,84,372,84,372,84,372,84,96,101,101,102,102,103,103,91,92,85,84,104,93,93,94,105,95,96,97,98,80,101,101,102,103,103,103,91,92,92,85,85,84,104,93,94,105,95,96,97,98,80,91,94,84,84,91,92,85,84,93,94,95,96,97,98,80,93,102,93,92,85,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,83,101,102,96,0,84,91,84,84,105,104,84,84,102,84,95,95,95,101,102,103,104,373,371,84,373,105,91,93,94,95,96,97,98,80,80,95,101,103,95,372,84,91,94,91,92,85,84,93,94,95,96,97,98,80,101,102,103,93,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,372,84,104,93,0,101,102,103,91,92,85,84,104,93,94,105,95,96,97,98,80,371,84,374,374,375,0,0,0,121,123,122,121,123,122,121,122,121,122,121,123,122,121,123,122,121,123,122,122,122,122,122,122,121,122,121,123,122,121,123,122,121,121,123,122,121,122,121,123,122,121,123,122,121,122,122,121,121,123,123,122,121,122,121,123,122,121,123,122,121,123,122,121,123,122,0,0,0,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,0,126,126,126,126,126,126,126,126,126,126,126,126,126,147,0,0,0,144,0,0,151,163,141,0,0,0,0,0,141,0,144,147,0,142,142,144,0,0,151,163,0,0,0,147,147,0,163,141,0,0,0,0,0,144,0,0,0,110,129,129,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,132,135,133,134,110,135,136,129,137,138,139,132,140,141,142,144,133,134,110,135,136,129,137,138,139,132,140,141,142,144,136,139,132,137,140,134,110,136,139,132,134,110,136,139,132,134,110,136,139,132,110,140,110,129,129,129,137,138,145,133,134,110,135,136,137,138,139,132,140,141,142,144,376,136,110,145,133,134,110,135,136,137,139,132,140,144,133,133,134,134,110,110,135,135,136,136,137,137,139,139,132,132,140,140,144,144,133,134,110,135,136,137,138,139,132,140,141,142,144,110,110,133,134,110,135,136,136,129,137,138,139,132,140,141,147,147,142,144,133,134,110,135,136,129,129,137,138,139,132,140,140,141,147,147,147,142,144,134,110,136,139,132,377,129,378,144,144,151,163,133,134,110,135,136,129,137,138,139,132,140,141,142,144,136,137,132,129,110,110,110,110,134,136,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,133,132,377,133,132,133,139,132,129,0,137,140,110,110,134,133,129,137,137,136,140,147,110,132,0,0,145,133,134,110,135,136,137,138,139,132,140,141,142,144,376,135,147,134,110,136,139,132,157,129,163,136,378,144,144,133,134,110,135,136,129,137,138,139,132,140,141,142,144,151,163,136,147,137,140,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,136,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,134,133,133,377,139,132,133,134,110,135,136,129,137,138,139,132,140,141,147,142,144,133,0,0,0,166,166,0,166,166,166,166,166,0,166,166,166,166,166,0,0,0,0,0,0,0,0,0,379,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,380,167,183,184,185,186,187,172,172,172,172,172,167,167,152,0,380,167,152,172,174,42,175,176,177,178,179,380,167,152,172,174,42,175,176,177,178,179,174,42,0,183,184,185,186,187,167,152,172,172,172,172,172,172,42,175,176,177,178,179,152,167,152,172,42,175,176,177,178,179,167,152,167,152,172,175,176,177,178,179,167,152,172,175,176,177,178,179,167,152,172,175,176,177,178,179,167,42,174,42,174,42,175,176,177,178,179,175,176,177,178,179,167,152,167,183,184,185,186,187,172,172,172,172,172,167,152,172,175,176,177,178,179,167,167,152,152,175,175,176,176,177,177,178,178,179,179,183,184,185,186,187,172,172,172,172,172,167,152,167,152,152,172,172,42,175,175,176,176,177,177,178,178,179,179,380,167,167,152,152,172,174,42,175,176,177,178,179,167,152,172,175,176,177,178,179,175,176,177,178,179,167,152,172,42,175,176,177,178,179,167,167,167,167,152,167,175,176,177,178,179,167,172,175,176,177,178,179,175,176,177,178,179,380,167,152,172,174,42,175,176,177,178,179,379,380,167,152,172,174,42,175,176,177,178,179,175,176,177,178,179,175,176,177,178,179,167,167,167,152,167,167,167,167,152,0,167,167,167,152,172,175,176,177,178,179,167,152,172,42,175,176,177,178,179,152,172,175,176,177,178,179,380,167,152,172,174,42,175,176,177,178,179,380,167,152,172,174,42,175,176,177,178,179,167,380,167,152,172,174,42,175,176,177,178,179,380,167,152,172,174,42,175,176,177,178,179,174,167,0,0,195,119,195,119,195,195,195,195,119,195,119,195,119,195,119,195,195,195,195,119,195,119,195,119,195,119,195,119,195,195,195,119,195,119,195,119,119,195,119,0,0,0,381,381,197,196,196,196,196,197,381,196,196,196,196,196,196,381,196,196,381,381,196,196,196,196,196,0,0,0,0,0,205,204,205,205,205,203,199,203,199,205,204,199,199,205,205,203,199,203,203,199,203,203,199,199,199,203,199,203,199,203,199,205,205,205,205,199,203,199,203,199,203,199,203,199,243,0,220,218,218,0,0,211,0,0,0,0,0,0,0,0,0,0,220,0,0,0,0,0,0,0,0,0,211,0,0,0,211,210,45,243,0,224,0,243,0,211,45,45,201,212,226,207,208,201,212,213,206,0,214,221,229,214,207,208,201,212,213,218,214,227,219,222,215,220,221,45,207,208,201,212,213,218,214,227,219,222,215,220,221,45,214,219,215,220,221,214,219,215,220,221,215,201,213,206,226,207,208,212,213,213,222,215,222,215,222,215,227,208,0,201,213,219,215,215,215,222,215,0,201,213,0,201,213,218,214,227,222,215,215,220,220,45,45,207,208,201,212,213,218,214,227,219,222,215,220,221,45,210,223,222,222,215,214,219,215,220,221,0,221,213,201,213,219,221,215,214,212,201,213,201,213,207,208,201,212,213,218,214,227,219,222,215,220,221,45,221,207,208,201,212,213,218,214,227,219,222,215,220,221,45,219,201,220,221,221,0,214,214,207,208,201,212,213,214,214,214,213,214,221,221,0,227,221,213,213,45,215,208,212,212,45,382,207,208,201,212,212,382,207,208,212,212,382,207,208,212,382,207,208,212,382,207,208,212,382,207,208,212,201,213,201,213,382,207,208,212,213,222,215,382,207,208,212,213,221,0,383,223,222,222,215,214,219,215,220,221,215,220,45,207,208,201,212,213,218,214,227,219,222,215,220,221,45,207,208,201,212,213,218,214,227,219,222,215,220,221,45,213,207,208,201,212,213,218,214,227,219,222,215,220,221,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,208,201,212,213,218,214,227,219,222,215,220,221,45,214,214,213,45,45,384,385,385,384,386,387,386,387,0,0,0,238,0,238,0,0,233,235,236,238,233,234,237,235,236,238,233,234,237,234,233,234,235,236,233,233,237,237,237,235,236,238,233,234,237,235,236,238,233,234,237,235,236,238,233,234,237,235,236,238,233,234,237,235,236,233,234,234,234,234,234,234,234,234,234,234,234,234,235,236,238,233,234,237,235,236,238,233,234,237,234,235,236,238,233,234,237,235,235,236,238,233,234,237,0,0,0,0,239,241,241,228,239,241,228,239,228,239,241,241,228,239,228,239,241,228,239,241,228,239,241,228,239,241,228,239,241,228,241,241,241,241,241,241,241,228,241,241,0,0,228,241,228,239,241,228,239,241,228,239,241,228,239,0,0,243,0,0,0,0,0,243,0,243,0,0,0,0,243,244,247,248,249,245,250,251,252,246,243,244,247,248,249,245,250,251,252,246,243,243,244,245,246,244,247,248,249,245,250,251,252,246,244,247,248,249,245,250,251,252,246,244,247,248,249,245,250,251,252,246,244,245,246,244,244,245,245,246,246,0,244,247,248,249,245,250,251,252,246,243,244,247,248,249,245,250,251,252,246,244,244,247,248,248,249,245,245,250,251,251,252,246,243,0,243,244,247,248,249,245,250,251,252,246,243,244,247,248,249,245,250,251,252,246,0,244,245,246,244,244,247,247,248,248,249,249,245,245,250,250,251,251,252,252,246,243,243,244,247,248,249,245,250,251,252,246,243,244,247,248,249,245,250,251,252,246,243,244,247,248,249,245,250,251,252,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,244,247,248,249,245,250,251,252,246,0,0,0,0,0,253,0,0,0,0,253,0,0,254,257,21,253,254,257,21,253,0,253,253,155,254,253,155,209,254,255,253,255,254,253,209,209,209,257,257,253,257,257,257,257,257,257,257,257,257,257,253,253,253,253,253,253,257,21,21,253,254,257,257,257,21,253,253,253,253,21,253,21,0,0,0,257,254,257,21,253,257,254,257,21,253,21,21,254,254,253,0,253,0,0,253,253,21,254,257,21,253,254,257,21,253,254,257,21,253,254,257,21,253,254,257,257,257,257,388,388,0,0,0,0,272,0,0,272,0,272,0,271,271,271,0,271,271,272,271,0,0,0,0,0,272,0,70,272,277,273,274,275,70,276,271,272,277,273,274,275,70,276,271,277,272,273,274,275,70,276,272,273,274,275,70,276,0,272,273,274,275,70,276,272,273,274,275,70,276,272,273,274,275,70,276,277,274,275,276,277,272,273,274,275,70,276,271,272,272,273,273,274,274,275,275,70,70,276,276,271,271,274,275,272,273,274,275,70,276,271,272,277,273,274,275,70,276,271,271,272,273,274,275,70,276,272,273,274,275,70,276,272,273,274,275,70,276,70,272,277,273,274,275,70,276,271,272,277,273,274,275,70,276,271,276,276,277,70,70,276,274,275,70,272,273,274,275,70,276,272,273,274,275,70,276,277,272,277,273,274,275,70,276,271,272,277,273,274,275,70,276,271,272,277,273,274,275,70,276,271,389,70,70,272,277,273,274,275,70,276,271,0,0,0,0,0,283,280,281,282,278,280,281,282,278,278,0,280,281,281,282,278,0,0,0,280,281,282,278,280,281,282,278,280,281,282,278,0,280,281,280,281,282,278,280,281,282,278,280,281,282,278,280,281,282,278,0,0,0,0,0,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,0,0,0,0,0,0,390,390,391,392,393,0,391,0,292,394,0,0,0,393,0,0,0,0,391,0,0,390,0,0,294,391,391,395,395,394,0,395,0,0,0,395,396,0,292,0,393,198,293,198,0,393,295,286,159,0,393,290,393,287,289,200,292,291,293,198,290,63,287,294,286,159,288,289,200,292,291,293,198,290,63,287,294,286,159,288,393,198,63,287,286,159,288,198,63,287,286,159,288,287,289,393,295,289,289,289,127,390,391,393,391,74,286,159,290,63,288,295,394,295,394,292,198,63,288,198,198,63,63,288,288,290,63,288,198,293,198,290,63,287,294,294,286,159,288,292,289,200,292,291,293,198,290,63,287,294,294,286,286,159,159,288,288,286,198,63,287,286,159,288,200,295,394,295,394,395,200,289,289,198,288,295,394,286,159,289,200,292,291,293,198,290,63,287,294,286,159,288,292,396,289,200,292,291,293,198,290,63,287,294,286,159,288,292,394,292,287,127,393,74,289,291,290,287,292,287,393,290,394,200,291,393,393,393,294,293,0,289,289,290,63,288,287,294,295,394,127,74,290,198,63,287,286,159,288,294,74,290,295,394,289,200,292,291,293,198,290,63,287,294,286,159,288,289,200,292,291,293,198,290,63,287,294,286,159,288,288,288,289,200,292,291,293,198,290,63,287,294,286,159,288,287,295,394,295,0,394,289,200,292,291,293,198,290,63,287,294,286,159,288,289,289,74,290,0,0,0,0,202,305,202,64,304,305,202,64,304,0,64,304,64,304,202,64,304,64,304,64,64,304,304,64,304,305,202,64,304,305,202,64,304,64,64,304,0,305,202,64,304,305,202,64,304,202,305,305,64,305,202,64,304,64,304,64,304,305,202,305,202,64,304,305,202,64,304,305,202,64,304,305,202,64,304,0,43,0,0,0,43,0,20,44,44,44,43,44,43,44,43,44,43,307,44,20,44,44,43,43,44,44,43,43,44,44,43,44,44,43,44,44,43,44,44,44,43,44,44,43,44,43,44,44,44,44,44,43,44,43,44,43,44,43,44,43,20,44,0,0,0,0,0,0,0,0,311,300,312,302,153,309,310,311,300,99,312,302,153,309,310,311,300,99,302,153,309,310,311,300,99,302,153,309,310,311,300,99,302,153,309,302,153,309,302,153,309,99,311,300,310,302,153,309,310,311,300,99,302,153,309,302,302,153,153,309,309,302,153,309,310,311,300,99,302,153,309,310,311,300,99,312,302,302,153,153,309,310,311,300,99,302,153,309,300,302,153,309,310,311,300,99,310,312,302,153,309,310,311,300,99,312,310,312,302,153,309,310,311,300,99,310,310,309,309,300,99,310,312,302,153,309,310,311,300,99,302,153,309,302,153,309,310,311,300,99,312,302,153,309,310,311,300,99,310,310,312,302,153,309,310,311,300,99,312,302,153,309,310,311,300,99,312,302,153,309,310,311,300,99,0,0,0,0,0,397,398,313,299,313,299,299,299,313,299,313,0,313,299,299,313,299,397,398,313,299,397,398,397,398,299,313,299,313,299,313,299,313,299,0,315,315,315,315,315,315,0,315,315,315,315,315,315,315,315,315,315,112,112,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,399,399,0,317,0,0,317,0,0,317,317,0,0,0,0,320,320,318,319,321,322,324,325,317,320,318,319,321,322,324,325,317,325,324,0,0,0,319,321,322,318,317,318,320,318,319,321,322,324,325,317,319,325,320,318,319,321,322,324,325,317,320,318,319,321,322,324,325,317,320,318,319,321,322,324,325,324,117,320,318,319,321,322,324,325,117,325,319,321,322,324,319,318,319,321,322,320,320,318,319,321,322,324,325,317,320,318,319,321,322,324,325,317,320,318,319,321,322,324,325,317,321,322,320,320,318,319,321,322,324,325,317,400,400,0,0,0,0,0,0,0,0,0,0,0,0,327,327,333,337,334,332,297,316,327,328,329,333,337,334,332,297,316,327,328,329,327,329,297,316,297,316,333,327,327,328,329,332,297,327,328,329,329,329,329,333,328,329,334,334,332,297,316,327,328,328,329,329,333,337,334,332,297,316,327,327,327,328,329,297,316,327,0,333,297,316,297,333,337,334,332,297,316,327,328,329,337,327,329,333,337,334,332,297,316,327,328,329,333,316,332,297,297,297,316,297,328,329,328,329,327,333,337,297,327,332,332,329,329,329,337,329,329,334,327,327,327,328,329,327,328,329,332,297,297,0,0,0,297,297,332,0,297,316,334,328,329,329,333,337,334,332,297,316,327,328,329,333,337,334,332,297,316,327,328,329,328,329,327,327,327,327,333,337,334,332,297,316,327,328,329,333,337,334,332,297,316,327,328,329,327,327,327,0,0,0,0,327,328,329,328,329,327,329,327,328,329,327,328,329,0,0,0,0,0,0,0,348,349,348,349,348,349,348,349,348,349,348,348,348,348,348,349,348,348,349,348,349,349,348,348,349,348,349,349,348,349,348,348,348,349,348,348,348,348,348,349,348,348,349,348,349,348,348,348,349,349,348,348,348,348,348,349,348,348,349,349,348,349,348,349,348,349,348,0,0,0,355,353,355,353,354,355,353,354,353,354,353,354,353,353,353,353,354,353,354,353,354,353,354,353,354,353,353,353,354,353,353,354,355,353,354,353,353,354,353,354,353,353,353,354,355,353,354,355,353,353,355,353,354,353,353,354,353,353,355,353,353,355,355,353,355,354,353,354,353,353,353,353,354,353,354,355,353,354,355,353,354,355,353,354,355,353,354,0,0,0,358,356,358,356,356,356,356,358,356,356,356,358,356,358,356,356,358,358,356,358,358,356,358,356,358,356,358,356,358,356,358,356,361,361,0,0,0,361,0,0,118,361,118,361,118,118,118,118,118,118,118,118,118,361,361,118,361,118,118,118,118,118,361,118,361,0,118,361,118,118,118,361,118,361,118,361,118,118,118,361,118,118,361,401,402,401,402,401,402,402,0,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,0,0,0,403,0,366,366,0,366,366,366,366,366,366,366,403,403,366,366,366,366,366,0,0,0,0,0,0,367,368,367,368,367,367,367,367,367,367,368,367,367,368,368,367,367,368,368,367,368,367,368,0,368,368,368,368,367,367,367,368,367,368,367,368,368,367,368,367],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],0,[[]],[[],2],0,0,[[],[[4,[3]]]],[2,5],[[]],[2],[2,[[7,[6]]]],0,0,[[],8],0,[[]],[2,[[7,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,10],11],0,[[],[[15,[[14,[12,13]]]]]],[2,2],[16,16],[1,1],[17,17],[9,9],[[]],[[]],[[]],[[]],[[]],[[2,2],18],[[16,16],18],[[1,1],18],[[17,17],18],[[9,9],18],0,[[19,20],[[15,[2,21]]]],[[19,20],[[15,[16,21]]]],[[19,20],[[15,[1,21]]]],[[19,20],[[15,[17,21]]]],[[19,20],[[15,[9,21]]]],[[2,22],[[15,[8,23]]]],[[16,22],[[15,[8,23]]]],[[1,22],[[15,[8,23]]]],[[17,22],[[15,[8,23]]]],[[9,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],0,0,[[],8],[2],[24,[[15,[2]]]],[24,[[15,[16]]]],[24,[[15,[1]]]],[24,[[15,[17]]]],[24,[[15,[9]]]],0,[[1,1]],0,0,0,[[],[[26,[25]]]],[[],[[26,[25]]]],0,[[]],[[]],0,[[2,2],27],[[16,16],27],[[1,1],27],[[17,17],27],[[9,9],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[2,31],32],[[2,31],32],[[2,31],32],[[16,31],32],[[16,31],32],[[1,31],32],[[1,31],32],[[17,31],32],[[17,31],32],[[33,31],32],[[33,31],32],[[9,31],32],[[34,31],32],[[34,31],32],0,[5,2],[[]],[35,16],[[]],[11,1],[[]],[[]],[[]],[36,33],[37,33],[[]],[[]],[[[0,[38,39,40]]],[[15,[41]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[[],2],[5,2],[[]],[[],2],[10,1],[[]],[[]],[[]],[[]],[[]],[10,1],[[[7,[6]]],[[15,[46]]]],[[[7,[6]]],[[15,[2,46]]]],[[[7,[6]]],[[15,[2,46]]]],[47,[[15,[2]]]],[47,[[15,[1]]]],[[47,48],[[15,[1,33]]]],[[[7,[6]]]],[[2,49]],[[16,49]],[[1,49]],[[17,49]],[[9,49]],0,0,0,[[2,[50,[[7,[6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,[[],8],0,0,0,0,0,0,0,0,0,[10,1],0,[[1,10]],0,[[],8],0,0,[[2,2],[[52,[18]]]],[[16,16],[[52,[18]]]],[[1,1],[[52,[18]]]],[[17,17],[[52,[18]]]],[[9,9],[[52,[18]]]],0,0,[53],[53],0,0,0,0,[[1,1]],[[1,1]],[10,1],0,[[1,1],1],0,[[2,54],15],[[16,54],15],[[1,54],15],[[17,54],15],[[9,54],15],0,0,[33,[[52,[55]]]],[[1,1]],[[1,1]],[38,1],0,[[],8],0,0,0,0,[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],56],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[16,8],[[],8],0,[[],[[15,[[4,[3]],57]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,15],0,0,0,0,0,0,[[60,61],62],0,[[60,63],[[62,[64]]]],[[60,63],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[65,65],[61,61],[66,66],[67,67],[68,68],[[]],[[]],[[]],[[]],[[]],0,[[],68],[24,[[15,[65]]]],[24,[[15,[61]]]],[24,[[15,[66]]]],[24,[[15,[67]]]],[24,[[15,[68]]]],[[61,61],27],[[66,66],27],[[67,67],27],[[68,68],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[60,69,20],[[62,[70]]]],[[65,31],32],[[61,31],32],[[66,31],32],[[67,31],32],[[68,31],32],[[60,71,63],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,[[62,[[14,[61]]]]]],[60,[[62,[67]]]],[[60,63],[[62,[68]]]],[[60,63],[[62,[[72,[16,5]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,0,0,0,0,0,[73,60],0,0,0,0,[[60,47,74],[[62,[[0,[75,76,77,78,79]]]]]],[[60,47,74],[[62,[[0,[75,76,77,78,79]]]]]],[[60,63],62],0,[[65,54],15],[[61,54],15],[[66,54],15],[[67,54],15],[[68,54],15],[[60,65,63],62],[[60,68,63],62],[[60,63],62],[[60,63],62],[[60,63],62],[60,[[62,[80]]]],0,[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[[]],[[]],[[]],[[]],[[]],[[]],[24,[[15,[81]]]],[[81,54],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[82,[16]]]],[[[84,[[0,[83,77]]]]],[[82,[16]]]],[85,86],[[17,87,42],[[90,[[89,[88]]]]]],[[17,87,42],[[90,[[89,[88,13]]]]]],[2,[[90,[[89,[88]]]]]],[2,[[90,[[89,[88,13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[91,91],[92,92],[85,85],[[[84,[78]]],[[84,[78]]]],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[80,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,[[90,[[89,[88]]]]]],0,[[],[[90,[[89,[88]]]]]],[[],[[90,[[89,[88,13]]]]]],[[19,20],[[15,[91,21]]]],[[19,20],[[15,[94,21]]]],[[91,22],[[15,[8,23]]]],[[93,22],[[15,[8,23]]]],[[94,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],0,[[],95],[[],96],[[],97],[[],98],[92],[85],[24,[[15,[91]]]],[24,[[15,[93]]]],[24,[[15,[94]]]],[24,[[15,[95]]]],[24,[[15,[96]]]],[24,[[15,[97]]]],[24,[[15,[98]]]],[24,[[15,[80]]]],[99,[[90,[[89,[88]]]]]],[99,[[90,[[89,[88,13]]]]]],[100,[[90,[[89,[88]]]]]],[100,[[90,[[89,[88,13]]]]]],[93,[[90,[[89,[88]]]]]],[93,[[90,[[89,[88,13]]]]]],0,[[93,93],27],[[94,94],27],[[95,95],27],[[96,96],27],[[97,97],27],[[98,98],27],[[80,80],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],0,[[],[[90,[[89,[88]]]]]],[[],[[90,[[89,[88,13]]]]]],[[10,69,20],[[90,[[89,[88]]]]]],[[10,69,[44,[42,43]]],[[90,[[89,[88,13]]]]]],[[17,42],[[90,[[89,[88]]]]]],[[17,42],[[90,[[89,[88,13]]]]]],[2,[[90,[[89,[88]]]]]],[2,[[90,[[89,[88,13]]]]]],0,[[101,31],32],[[101,31],32],[[102,31],32],[[102,31],32],[[103,31],32],[[103,31],32],[[91,31],32],[[92,31],32],[[85,31],32],[[[84,[77]],31],32],[[[104,[77]],31],32],[[93,31],32],[[93,31],32],[[94,31],32],[[[105,[77]],31],32],[[95,31],32],[[96,31],32],[[97,31],32],[[98,31],32],[[80,31],32],[106,101],[[]],[[]],[[]],[102,103],[107,103],[[]],[[]],[[[0,[108,79,109]]],92],[[]],[[[0,[86,79,109]]],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[110,[[84,[111]]]],[[[7,[93]]],[[84,[111]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[15,[93]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],27],[101,27],[102,27],0,[[112,17,42],[[15,[[0,[113,79]],103]]]],0,0,[14,[[84,[111]]]],[14,84],0,0,0,[84,[[14,[16]]]],0,0,0,0,0,[53],[53],[53],[[[104,[83]],47,[7,[114]]],[[115,[114]]]],[[116,56,74],[[90,[[89,[88]]]]]],[[16,47,[7,[114]]],[[90,[[89,[88]]]]]],[[[84,[[0,[83,77]]]],16,47,[7,[114]]],[[90,[[89,[88]]]]]],[[116,[0,[[117,[75,77]],79]],56,74],[[90,[[89,[88]]]]]],0,[[91,54],15],[[93,54],15],[[94,54],15],[[95,54],15],[[96,54],15],[[97,54],15],[[98,54],15],[[80,54],15],0,0,[101,[[52,[55]]]],[103,[[52,[55]]]],0,[118,[[90,[[89,[88]]]]]],[118,[[90,[[89,[88,13]]]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[119,[[90,[[89,[88]]]]]],[119,[[90,[[89,[88,13]]]]]],0,0,[73,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120,92],[[[84,[[0,[83,77]]]],120],92],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[121,121],[122,122],[[]],[[]],[[19,20],[[15,[121,21]]]],[[19,20],[[15,[123,21]]]],[[19,20],[[15,[122,21]]]],[[121,22],[[15,[8,23]]]],[[123,22],[[15,[8,23]]]],[[122,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],0,[24,[[15,[122]]]],[[122,122],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[121,31],32],[[123,31],32],[[122,31],32],[[]],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[121,54],15],[[122,54],15],0,[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[124,124],[[]],[[19,20],[[15,[124,21]]]],[[124,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[24,[[15,[124]]]],[[124,124],27],[[],27],[[],27],[28,[[15,[29,30]]]],[[124,31],32],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[],[[125,[124]]]],[[]],[[124,49]],[[]],[[],51],0,[[124,54],15],[[],[[14,[6,13]]]],[[]],[[],15],[[],15],[[],58],0,[[]],0,0,[[]],[[]],[[126,31],32],[[126,31],32],[[]],[[]],[[],51],[53],[[],56],[[],15],[[],15],[[],58],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[129,[[128,[127]]]],[0,[[130,[[128,[127]]]],131,116]]]],[[[129,[[128,[127]]]],38],[[125,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,125],0,[133,133],[134,134],[110,110],[135,135],[136,136],[[[129,[78]]],[[129,[78]]]],[137,137],[138,138],[139,139],[132,132],[140,140],[141,141],[142,142],[[[144,[[0,[78,143]]]]],[[144,[[0,[78,143]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,136],18],0,0,0,0,[[19,20],[[15,[134,21]]]],[[19,20],[[15,[110,21]]]],[[19,20],[[15,[136,21]]]],[[19,20],[[15,[139,21]]]],[[19,20],[[15,[132,21]]]],[[134,22],[[15,[8,23]]]],[[110,22],[[15,[8,23]]]],[[136,22],[[15,[8,23]]]],[[139,22],[[15,[8,23]]]],[[132,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[110,5],0,0,[[[129,[[128,[127]]]],38],[[125,[20]]]],[[[129,[[128,[127]]]],38],[[125,[20]]]],[[],129],[[],137],[[],138],[24,[[15,[145]]]],[24,[[15,[133]]]],[24,[[15,[134]]]],[24,[[15,[110]]]],[24,[[15,[135]]]],[24,[[15,[136]]]],[24,[[15,[137]]]],[24,[[15,[138]]]],[24,[[15,[139]]]],[24,[[15,[132]]]],[24,[[15,[140]]]],[24,[[15,[141]]]],[24,[[15,[142]]]],[24,[[15,[[144,[143]]]]]],[24,15],[[],136],0,[[145,145],27],[[133,133],27],[[134,134],27],[[110,110],27],[[135,135],27],[[136,136],27],[[137,137],27],[[139,139],27],[[132,132],27],[[140,140],27],[[[144,[[0,[146,143]]]],[144,[[0,[146,143]]]]],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],0,[110,[[52,[47]]]],[[133,31],32],[[134,31],32],[[110,31],32],[[135,31],32],[[136,31],32],[[136,31],32],[[[129,[77]],31],32],[[137,31],32],[[138,31],32],[[139,31],32],[[132,31],32],[[140,31],32],[[141,31],32],[[147,31],32],[[147,31],32],[[142,31],32],[[[144,[[0,[77,143]]]],31],32],[[]],[[]],[[]],[[]],[[]],[[[14,[[128,[127]]]]],[[129,[[128,[127]]]]]],[[]],[[]],[[]],[[]],[[]],[[133,133,139,133],140],[[]],[[]],[107,147],[[]],[126,147],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[139,125],[148,[[129,[[128,[127]]]]]],[142,125],[142,[[125,[[144,[149]]]]]],[142,[[125,[[144,[150]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[15,[136]]]],[151,[[125,[137]]]],[[120,152,153,154],[[125,[132]]]],[[129,152],52],[[110,[130,[152]]],125],[[110,[130,[152]]],125],[[110,120],[[125,[155]]]],[[110,120],[[125,[132]]]],[[134,49]],[[136,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[133,152],27],[[132,152],27],[[],152],[133,152],[132,152],0,0,0,[129,[[82,[152]]]],[156,[[15,[75,107]]]],0,0,0,0,0,[[152,114],133],[[],129],[[[52,[114]],[52,[114]]],137],[[47,[52,[114]]],[[125,[75]]]],[[136,136],[[52,[18]]]],0,[53],[[110,20],[[15,[110,21]]]],[[132,20],[[15,[132,21]]]],0,0,[[145,54],15],[[133,54],15],[[134,54],15],[[110,54],15],[[135,54],15],[[136,54],15],[[137,54],15],[[138,54],15],[[139,54],15],[[132,54],15],[[140,54],15],[[141,54],15],[[142,54],15],[[[144,[143]],54],15],[54,15],0,[147,[[52,[55]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[157,158],[[[129,[159]]],158],[[],140],[[136,[161,[160]]],[[125,[162]]]],[[],142],[[[144,[150]]],142],[[[144,[149]]],142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[137,[[125,[151]]]],[140,[[125,[163]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[164,[6]]],[[52,[136]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[133,114],0,[[],153],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[24,[[15,[75]]]],[[165,54],15],0,[[]],[[]],[24,[[15,[[14,[143]]]]]],[24,[[15,[[166,[143]]]]]],[28,[[15,[29,30]]]],[[]],[[]],[[],51],[[[7,[143]],54],15],[[[166,[143]],54],15],[[],15],[[],15],[[],58],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,[161,[168]],169],[[15,[167,170]]]],[[],171],[[],171],[[],171],[[],171],[[],171],[172,171],[172,171],[172,171],[172,171],[172,171],[167,173],[167,173],[152,47],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[174,42],[[],174],0,[120,175],[120,176],[120,177],[120,178],[120,179],[167,167],[152,152],[[172,120],175],[[172,120],177],[[172,120],179],[[172,120],178],[172,172],[[172,120],176],[42,42],[175,175],[176,176],[177,177],[178,178],[179,179],[47,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[167,167],18],[[152,152],18],[[19,20],[[15,[167,21]]]],[[19,20],[[15,[152,21]]]],[[19,20],[[15,[172,21]]]],[[19,20],[[15,[175,21]]]],[[19,20],[[15,[176,21]]]],[[19,20],[[15,[177,21]]]],[[19,20],[[15,[178,21]]]],[[19,20],[[15,[179,21]]]],[[167,22],[[15,[8,23]]]],[[152,22],[[15,[8,23]]]],[[172,22],[[15,[8,23]]]],[[175,22],[[15,[8,23]]]],[[176,22],[[15,[8,23]]]],[[177,22],[[15,[8,23]]]],[[178,22],[[15,[8,23]]]],[[179,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[167,180],[[42,19,120,20],[[15,[171,21]]]],0,0,[[],174],[[],42],[175],[176],[177],[178],[179],[175],[176],[177],[178],[179],[24,[[15,[167]]]],[24,[[15,[152]]]],[167,181],[[],10],[[],10],[[],10],[[],10],[[],10],[172,10],[172,10],[172,10],[172,10],[172,10],[[167,167],27],[[152,152],27],[[172,172],27],[[175,175],27],[[176,176],27],[[177,177],27],[[178,178],27],[[179,179],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[175,27],[176,27],[177,27],[178,27],[179,27],[[172,179],27],[[172,178],27],[[172,175],27],[[172,177],27],[[172,176],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[167,31],[[15,[182]]]],[[152,31],32],[[152,31],32],[[172,31],32],[[172,31],32],[[42,31],32],[[175,31],32],[[175,31],32],[[176,31],32],[[176,31],32],[[177,31],32],[[177,31],32],[[178,31],32],[[178,31],32],[[179,31],32],[[179,31],32],[[]],[180,167],[[]],[[]],[47,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[120,[89,[183]]],175],[[120,[89,[184]]],176],[[120,[89,[185]]],177],[[120,[89,[186]]],178],[[120,[89,[187]]],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[161,[188]],[7,[6]]],[[15,[167,170]]]],[[[161,[188]],47],[[15,[167,170]]]],[47,[[15,[167,170]]]],[[[161,[188]],189],167],[47,152],[47,[[15,[167]]]],[[120,[0,[183,79,109]]],175],[[120,[0,[184,79,109]]],176],[[120,[0,[185,79,109]]],177],[[120,[0,[186,79,109]]],178],[[120,[0,[187,79,109]]],179],[[167,49]],[[172,49]],[[175,49]],[[176,49]],[[177,49]],[[178,49]],[[179,49]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[175,120],[176,120],[177,120],[178,120],[179,120],0,0,0,0,0,[[[161,[188]],[0,[190,191]]],167],[[[0,[190,191]]],167],[[167,167],[[52,[18]]]],[[152,152],[[52,[18]]]],[167,162],[167,[[164,[6]]]],[167,189],[[167,54],15],[[152,54],15],0,[[167,192],193],[[167,[161,[168]],[52,[194]]],180],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[167,[161,[168]],169],[[15,[170]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[174],[167],0,0,[[]],[[]],[[]],[[]],[[19,20],[[15,[195,21]]]],[[195,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[24,[[15,[195]]]],[24,[[15,[119]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[195,31],32],[[119,31],32],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[195,5],0,[[]],[[]],[[],51],[[],51],0,0,[[195,54],15],[[119,54],15],[[195,167],[[125,[119]]]],0,0,[[],[[14,[6,13]]]],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[119,[161,[[0,[188,168]]]]],[[15,[195,170]]]],[[]],[[]],0,0,0,0,0,[[],171],[[]],[[]],[196,196],[[]],[[],42],[[],42],[196],[[196,31],32],[[]],[[[0,[197,79,109]]],196],[[]],0,[[],198],[[]],[[],51],[[],152],[[],198],[[]],[[],15],[[],15],[[],58],[[]],0,0,0,0,0,[[],[[14,[[200,[199]]]]]],[[],171],[[],171],[[201,202],[[90,[[89,[88]]]]]],[201,[[90,[[89,[88]]]]]],[[]],[[]],[[]],[[]],[[[7,[176]]],203],[[],203],[199,199],[[]],[[201,120],[[90,[[89,[88]]]]]],[[],42],[203],[199],[203],[[203,31],32],[[199,31],32],[[]],[[[0,[204,79,109]]],203],[[]],[[[0,[205,79,109]]],199],[[]],0,0,[[]],[[]],[[],51],[[],51],[[201,17,120],[[90,[[89,[88]]]]]],[[201,179,16],[[90,[[89,[88]]]]]],[[201,176,203],[[90,[[89,[88]]]]]],[[201,177,17],[[90,[[89,[88]]]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[7,[6]]],125],[[[207,[[0,[206,79]]]],[7,[6]]],125],[[208,[7,[6]]],125],[[[201,[[0,[79,209]]]],[0,[210,211]]]],[[[212,[[0,[79,209]]]],[7,[6]]],125],[[213,[0,[210,211]]]],[[[7,[6]]],125],[[214,56,215,216],[[125,[107]]]],[[214,217,[52,[8]]],[[125,[218]]]],0,[[],[[90,[[89,[88]]]]]],[214,213],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,214],[219,219],[215,215],[220,220],[221,221],[[]],[[]],[[]],[[]],[[]],[[215,215],18],0,0,[[],[[90,[[89,[88]]]]]],[[],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]]],[[90,[[89,[88]]]]]],[208,[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]]],[[90,[[89,[88]]]]]],[213],[213,125],[[19,20],[[15,[222,21]]]],[[19,20],[[15,[215,21]]]],[[222,22],[[15,[8,23]]]],[[215,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],0,0,[[[7,[6]],20],[[125,[223,45]]]],0,0,[219],[[215,215],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[214],[[[201,[[0,[79,209]]]],224],225],[[213,224],225],[[226,20,224],225],[[[201,[[0,[79,209]]]],224],225],[[213,224],225],[[[218,[77]],31],32],[[214,31],32],[[227,31],32],[[222,31],32],[[215,31],32],[[215,31],32],[[220,31],32],[[220,31],32],[[45,31],32],[[45,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],20],[[125,[45]]]],[[[7,[6]],20],[[125,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[[]],[[]],[[]],[[]],[88,52],[[221,8],[[52,[220]]]],[213,201],[[[201,[[0,[79,209]]]],[0,[210,211]]],52],[[213,[0,[210,211]]],52],0,0,[215],0,0,[[[201,[[0,[79,209]]]],[0,[210,211]]],52],[[213,[0,[210,211]]],52],[[[201,[[0,[79,209]]]],[0,[210,211]]]],[[213,[0,[210,211]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,0,[[],221],[221,8],0,0,0,0,[[[0,[206,79]]],[[207,[[0,[206,79]]]]]],[[[89,[226]],120],208],[[226,[52,[[0,[79,209]]]],20,219],[[201,[[0,[79,209]]]]]],[[226,[52,[[0,[79,209]]]]],[[212,[[0,[79,209]]]]]],[[[89,[226]],20,228],213],[[[0,[229,79]],20],214],[[[89,[229]],20],214],[[214,120],214],[[213,120],213],[[214,20],214],[221,52],[221,52],0,0,[[221,8],52],[[213,[0,[230,131]]]],0,[[[0,[55,131,116]]],45],[[215,215],[[52,[18]]]],0,0,[[[0,[79,209]]],[[14,[6]]]],[53],[[[7,[6]]],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[208,[7,[6]]],[[90,[[89,[88]]]]]],[[[201,[[0,[79,209]]]],[7,[6]]],[[125,[231]]]],[[[14,[6]],226,[7,[6]]],[[125,[231]]]],[[[212,[[0,[79,209]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[[7,[6]]],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[208,[7,[6]]],[[90,[[89,[88]]]]]],[[[14,[6]],226,[7,[6]]],[[125,[231]]]],[[[212,[[0,[79,209]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[[7,[6]]],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[208,[7,[6]]],[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[[7,[6]],[7,[6]]],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]],[7,[6]],[7,[6]]],[[90,[[89,[88]]]]]],[[208,[7,[6]],[7,[6]]],[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]],[7,[6]],[7,[6]]],[[90,[[89,[88]]]]]],[[[7,[6]]],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[208,[7,[6]]],[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[[7,[6]]],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[208,[7,[6]]],[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]],[7,[6]]],[[90,[[89,[88]]]]]],[[[201,[[0,[79,209]]]],224]],[[213,224]],[[[201,[[0,[79,209]]]],[0,[210,211]]],52],[[213,[0,[210,211]]],52],[[],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]]],[[90,[[89,[88]]]]]],[208,[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]]],[[90,[[89,[88]]]]]],[213,125],[[222,54],15],[[215,54],15],[[],[[90,[[89,[88]]]]]],[[[207,[[0,[206,79]]]]],[[90,[[89,[88]]]]]],[208,[[90,[[89,[88]]]]]],[[[212,[[0,[79,209]]]]],[[90,[[89,[88]]]]]],[213,125],[221],0,[[],[[14,[6]]]],[[],[[14,[6]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[214],[214],[214],[[214,214]],[214],[214],[214],[214],[214],[214],[214],[214],[214],[214],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[214,[0,[210,211,232]],217]],[[214,[0,[210,211,232]]]],[[213,120],201],[[8,8],45],[[6,6],45],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[233,[[90,[[89,[88]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[234,[[90,[[89,[88]]]]]],0,0,[[],235],[[],236],[[],233],[233],[[237,237],27],[[],27],[[],27],[[235,31],32],[[236,31],32],[[238,31],32],[[233,31],32],[[234,31],32],[[237,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,0,[[],233],0,0,0,[[234,[7,[6]]],[[90,[[89,[88]]]]]],[[234,[7,[6]]],[[90,[[89,[88]]]]]],[[234,[7,[6]]],[[90,[[89,[88]]]]]],[[234,[7,[6]],[7,[6]]],[[90,[[89,[88]]]]]],[[234,[7,[6]]],[[90,[[89,[88]]]]]],[[234,[7,[6]]],[[90,[[89,[88]]]]]],[234,[[90,[[89,[88]]]]]],0,[234,[[90,[[89,[88]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[239,240]],[[241,[7,[6]]],125],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[241,[[90,[[89,[88]]]]]],0,[[],228],[[],239],[[228,31],32],[[239,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[[89,[226]],228],241],[[],228],[[],239],0,[[228,240]],0,[[241,[7,[6]]],[[90,[[89,[88]]]]]],[[241,[7,[6]]],[[90,[[89,[88]]]]]],[[241,[7,[6]]],[[90,[[89,[88]]]]]],[[241,[7,[6]],[7,[6]]],[[90,[[89,[88]]]]]],[[241,[7,[6]]],[[90,[[89,[88]]]]]],[[241,[7,[6]]],[[90,[[89,[88]]]]]],[[228,240],242],[241,[[90,[[89,[88]]]]]],[241,[[90,[[89,[88]]]]]],[10,8],[240,8],[[228,239]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[243,243],[[]],[[244,244],18],[[245,245],18],[[246,246],18],[[19,20],[[15,[244,21]]]],[[19,20],[[15,[247,21]]]],[[19,20],[[15,[248,21]]]],[[19,20],[[15,[249,21]]]],[[19,20],[[15,[245,21]]]],[[19,20],[[15,[250,21]]]],[[19,20],[[15,[251,21]]]],[[19,20],[[15,[252,21]]]],[[19,20],[[15,[246,21]]]],[[244,22],[[15,[8,23]]]],[[247,22],[[15,[8,23]]]],[[248,22],[[15,[8,23]]]],[[249,22],[[15,[8,23]]]],[[245,22],[[15,[8,23]]]],[[250,22],[[15,[8,23]]]],[[251,22],[[15,[8,23]]]],[[252,22],[[15,[8,23]]]],[[246,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[[244,244],27],[[245,245],27],[[246,246],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[214],[[244,31],32],[[247,31],32],[[248,31],32],[[249,31],32],[[245,31],32],[[250,31],32],[[251,31],32],[[252,31],32],[[246,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[88,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[213,[[15,[107]]]],[[244,244],[[52,[18]]]],[[245,245],[[52,[18]]]],[[246,246],[[52,[18]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[214],[214],[214],[[214,214]],[214],[214],[214],[214],[214],[214],[214],[214],[214],[214],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[253,[78]]],[[253,[78]]]],[[]],[[19,20],[[15,[21]]]],[[19,20],[[15,[254,21]]]],[[19,20],[[15,[[253,[155]],21]]]],[[47,20],[[15,[21]]]],[22,[[15,[8,23]]]],[[254,22],[[15,[8,23]]]],[[255,22],[[15,[8,23]]]],[[[253,[209]],22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[[],[[15,[56,23]]]],[[],[[15,[[14,[6]],23]]]],[[],256],[257,10],0,[24,[[15,[[253,[258]]]]]],[27,[[15,[23]]]],[259,[[15,[23]]]],[260,[[15,[23]]]],[261,[[15,[23]]]],[262,[[15,[23]]]],[[[7,[6]]],[[15,[23]]]],[35,[[15,[23]]]],[263,[[15,[23]]]],[10,[[15,[23]]]],[6,[[15,[23]]]],[[[253,[146]],[253,[146]]],27],[[],27],[[],27],[28,[[15,[29,30]]]],[[[253,[155]]],155],[[[253,[155]]],155],[[[257,[22]]],264],[[21,31],32],[[21,31],32],[[[253,[77]],31],32],[[]],[[]],[265],[[],257],[[]],[[]],[265],[[],253],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[0,[55,131,116]]],21],[[]],[47,21],0,0,0,0,[[]],[[]],[[]],[[]],[257],[[],51],[[],51],[[],51],[[],51],[107,21],[53],[19,[[15,[254,266]]]],[19,[[15,[52,266]]]],[[[253,[155]],20],[[15,[[253,[155]],21]]]],0,[[[253,[165]],54],15],0,0,[[],[[14,[6,13]]]],[[]],[[],56],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[254,267],[[15,[23]]]],[[[257,[22]],[7,[6]]],[[264,[8]]]],[[[7,[6]]],[[15,[23]]]],[268,[[15,[8,23]]]],[269,[[15,[8,23]]]],0,0,[24,[[15,[155]]]],[[209,54],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[70,270,70],[[15,[70,271]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[272,272],[273,273],[274,274],[275,275],[70,70],[276,276],[[]],[[]],[[]],[[]],[[]],[[]],[[270,[72,[16,274]],[128,[[7,[6]]]]],[[15,[275,[82,[16]]]]]],[[19,20],[[15,[272,21]]]],[[19,20],[[15,[273,21]]]],[[19,20],[[15,[274,21]]]],[[19,20],[[15,[275,21]]]],[[19,20],[[15,[70,21]]]],[[19,20],[[15,[276,21]]]],[[272,22],[[15,[8,23]]]],[[273,22],[[15,[8,23]]]],[[274,22],[[15,[8,23]]]],[[275,22],[[15,[8,23]]]],[[70,22],[[15,[8,23]]]],[[276,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],0,[24,[[15,[274]]]],[24,[[15,[275]]]],0,0,[[272,272],27],[[273,273],27],[[274,274],27],[[275,275],27],[[70,70],27],[[276,276],27],[[271,271],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[272,31],32],[[273,31],32],[[274,31],32],[[275,31],32],[[70,31],32],[[276,31],32],[[271,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[82,[16]]],271],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[272,49]],[[273,49]],[[274,49]],[[275,49]],[[70,49]],[[276,49]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,0,0,[[10,[72,[16,[14,[272]]]],[82,[2]],[52,[70]]],70],0,0,[[274,54],15],[[275,54],15],0,[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],277],[[70,[52,[70]]],[[15,[271]]]],[[70,69],[[15,[271]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[31,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[278],[[47,8],8],[[[280,[[0,[77,279]]]],31],32],[[281,31],32],[[281,31],32],[[282,31],32],[[[278,[283]],31],32],[[[284,[56,114]],31],32],[[47,31],32],[[[7,[114]],31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],27],[[],56],[[],56],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],0,[24,[[15,[[14,[6]]]]]],[[[7,[6]],54],15],0,0,[[]],[[]],[24,[[15,[285]]]],[[285,285],27],[28,[[15,[29,30]]]],[[285,31],32],[[]],0,[[]],[[],51],[[285,54],15],[[],15],[[],15],[[],58],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[14,[200]]]],[[],127],[286,127],[159,127],0,[[201,202],[[90,[[89,[88]]]]]],0,[201,[[90,[[89,[88]]]]]],[56,287],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[38,79]]]],[198,198],[63,63],[287,287],[286,286],[159,159],[[[288,[[0,[78,209,155]]]]],[[288,[[0,[78,209,155]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[289,[[15,[287]]]],[201,[[90,[[89,[88]]]]]],[[],215],0,[289,201],0,[[],42],[[],42],[[],42],[[],42],[[],174],[[],74],[286],[159],[24,[[15,[[290,[258]]]]]],[24,[[15,[63]]]],[24,[[15,[[288,[[0,[209,155]]]]]]]],[[291,137],[[90,[[89,[88]]]]]],[[291,137],[[90,[[89,[88]]]]]],[[201,[14,[56]]],[[90,[[89,[88]]]]]],[[201,[14,[56]]],[[90,[[89,[88]]]]]],[[],292],[[198,198],27],[[63,63],27],[[[288,[[0,[146,209,155]]]],[288,[[0,[146,209,155]]]]],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],0,[[293,31],32],[[198,31],32],[[[290,[77]],31],32],[[63,31],32],[[287,31],32],[[294,31],32],[[294,31],32],[[286,31],32],[[159,31],32],[[[288,[[0,[77,209,155]]]],31],32],[292,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,294],[[]],[[[0,[127,79,109]]],286],[[[0,[295,79,109]]],159],[[]],[[]],[[[0,[209,155]]],[[288,[[0,[209,155]]]]]],[[[296,[127]]],286],[[]],[[]],[[]],[[]],[[]],[[]],[[],200],[[120,139],[[125,[132]]]],[139,125],[[],216],[[],216],[289,[[90,[[89,[88]]]]]],0,[289,27],0,[[198,49]],[[[288,[[0,[240,209,155]]]],49]],[[140,214,297],[[90,[[89,[88]]]]]],[[140,214,297],[[90,[[89,[88]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[292,14],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[292,7],[[],152],[[292,298],292],0,[[],152],[[],152],[165,74],[[214,213,27,[52,[63]]],289],[[[299,[141]],120,16,[14,[16]]],291],[165,74],[[260,56],287],[14,292],[56,287],[[201,17],[[90,[[89,[88]]]]]],0,[137,125],0,[291,[[7,[16]]]],[[201,16],[[90,[[89,[88]]]]]],[201,[[90,[[89,[88]]]]]],[[201,17],[[90,[[89,[88]]]]]],[53],0,0,[289,[[52,[63]]]],0,[[[290,[165]],54],15],[[63,54],15],[[[288,[[0,[209,155]]]],54],15],[56,287],[294,[[52,[55]]]],[[],300],[[],300],[[],286],[74,114],[[[290,[114]]],114],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[74,[[15,[[290,[75]],301]]]],[[[290,[114]]],[[15,[[290,[75]],301]]]],[[[7,[16]],137],[[72,[16,140]]]],[[[7,[16]],137],[[72,[16,140]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[288,[[0,[209,155]]]],20],[[15,[[0,[209,155]],21]]]],[[[288,[[0,[209,155]]]],42],[[15,[[0,[209,155]],21]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],287],[[16,140],125],[[16,140],125],[137,125],0,[302,[[7,[153]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[289,[0,[210,211,232]]],88],[[289,[0,[210,211,232]],[0,[217,303]]],88],[[74,63],74],[[[290,[114]],63],[[290,[114]]]],0,0,0,0,[[202,201,47,224,217]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,261],[64,64],[304,304],[[]],[[]],[[],202],[24,[[15,[64]]]],[24,[[15,[304]]]],[[64,64],27],[[304,304],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[305,31],32],[[202,31],32],[[64,31],32],[[304,31],32],[[]],[[]],[[]],[[]],[202,64],[[]],[[]],[[[7,[305]]],[[306,[56,304]]]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],0,0,0,0,0,[202,305],0,0,[[64,54],15],[[304,54],15],[[]],[[]],[[],56],[[],56],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[20],[[[44,[42,43]]]],[[[44,[137]],120,152,151],[[44,[137]]]],[[]],[[]],[[]],[[]],[[[44,[78,78]]],[[44,[78,78]]]],[43,43],[[]],[[]],[307,20],[[[44,[199]]],20],[20,43],[[[44,[42,43]]],43],[[],[[44,[308]]]],[[],43],[[43,43],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[[[44,[77,77]],31],32],[[43,31],32],[[[72,[120]]],[[44,[308]]]],[[]],[[]],[148,[[44,[308]]]],[[]],[[]],[[44,120],52],[[[44,[77]],120],77],[[44,120],52],[[43,49]],0,[[]],[[]],[[],51],[[],51],[44,38],[148,[[44,[308]]]],[[[44,[77]],120,152,77]],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[]],[[]],[20,20],[[[44,[42,43]]],[[44,[42,43]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[302,302],[153,153],[309,309],[310,310],[311,311],[300,300],[99,99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,20],[[15,[302,21]]]],[[19,20],[[15,[153,21]]]],[[19,20],[[15,[309,21]]]],[[302,22],[[15,[8,23]]]],[[153,22],[[15,[8,23]]]],[[309,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],[22,[[15,[8,23]]]],0,0,0,[[],310],[24,[[15,[302]]]],[24,[[15,[153]]]],[24,[[15,[309]]]],[24,[[15,[310]]]],[24,[[15,[311]]]],[24,[[15,[300]]]],[24,[[15,[99]]]],[[302,302],27],[[153,153],27],[[309,309],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[302,31],32],[[153,31],32],[[309,31],32],[[310,31],32],[[311,31],32],[[300,31],32],[[99,31],32],[[]],[[]],[263,302],[[]],[263,153],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[263,263,7],300],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[310,263],[[52,[309]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[310],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[310,27],[310,312],0,0,0,0,[[],310],[312,52],[[302,54],15],[[153,54],15],[[309,54],15],[[310,54],15],[[311,54],15],[[300,54],15],[[99,54],15],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[],[[14,[6,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[148,[[15,[310,309]]]],[[310,309],[[15,[263]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[16,[[90,[[89,[88]]]]]],[16,[[90,[[89,[88]]]]]],[[]],[[]],[[]],[[]],[[[299,[78,78]]],[[299,[78,78]]]],[[]],[313],[299],[313],0,[[]],[[]],[[]],[[]],[[]],[[[0,[191,131,314]]],313],[[[0,[191,131,116,314]]],299],[[],51],[[],51],[[],[[90,[[89,[88]]]]]],[[],[[90,[[89,[88]]]]]],[[[7,[16]]],[[90,[[89,[88]]]]]],[[[7,[16]]],[[90,[[89,[88]]]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[]],[[]],0,[[[315,[[0,[165,75,314,131]]]],16],[[90,[[89,[88]]]]]],[[]],[[]],[[]],[[]],[[],51],[[16,16,8,316]],0,[[[315,[[0,[165,75,314,131]]]]],[[90,[[89,[88]]]]]],0,[[[315,[[0,[165,75,314,131]]]],[7,[16]],[0,[165,75,314,131]]],[[90,[[89,[88]]]]]],0,[[],15],[[],15],0,[[],58],[[]],0,0,0,0,[[]],[[]],[112,112],[[]],[24,[[15,[112]]]],[[112,112],27],[[],27],[[],27],[28,[[15,[29,30]]]],[[112,31],32],[[]],[[]],[[112,49]],[[]],[[],51],[[112,54],15],[[]],[[],15],[[],15],[[],58],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[99,[72,[16,99]]],[[125,[91]]]],[[311,[72,[16,311]]],[[52,[309]]]],[[300,[72,[16,300]]],[[52,[309]]]],0,0,0,0,[[[317,[77]],31],32],[318,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,319],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[[0,[217,79,109]],27,8],320],[8,318],[8,319],[8,321],[8,322],[[8,323],324],[[8,323,99],325],0,[[16,326],317],[[[320,[[0,[77,76,78]]]],16,[326,[[0,[77,76,78]]]]],[[317,[[0,[77,76,78]]]]]],[[318,16,101],317],[[[319,[[0,[76,78,77]]]],16,[326,[[0,[76,78,77]]]]],[[317,[[0,[76,78,77]]]]]],[[[321,[[0,[77,76,78]]]],16,[326,[[14,[[0,[77,76,78]]]]]]],[[317,[[14,[[0,[77,76,78]]]]]]]],[[[322,[[0,[77,76,78]]]],16,[326,[[0,[77,76,78]]]]],[[317,[[14,[[0,[77,76,78]]]]]]]],[[324,16,326],[[317,[[72,[16]]]]]],[[325,16,[326,[99]]],[[317,[91]]]],[[],[[52,[87]]]],[325,[[52,[87]]]],0,0,0,0,0,0,0,0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[230],[[[327,[191]]],[[328,[191]]]],[[[327,[191]]],[[329,[191]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[10,330,330,331],10],[297,297],[316,316],[[]],[[]],0,[191,[[327,[191]]]],[[191,263],[[327,[191]]]],0,0,[[],332],[[],297],[[],[[327,[[0,[308,191]]]]]],[[[328,[191]]],191],[[[329,[191]]],191],[[[329,[191]]],191],[[[329,[191]]],[[328,[191]]]],[[[329,[191]],230],[[328,[191]]]],[333],[[[328,[191]]]],[[[329,[191]]]],[[334,31],32],[[334,31],32],[[332,31],32],[[297,31],32],[[316,31],32],[[[327,[[0,[77,191]]]],31],[[15,[182]]]],[[[328,[[0,[77,191]]]],31],[[15,[182]]]],[[[328,[[0,[279,191]]]],31],[[15,[182]]]],[[[329,[[0,[77,191]]]],31],[[15,[182]]]],[[[329,[[0,[279,191]]]],31],[[15,[182]]]],[[]],[[]],[[]],[[]],[[]],[[]],[265],[[]],[[],327],[[]],[[]],[[]],[[]],[[[327,[191]]],191],0,0,0,0,[297],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[327,[191]]],191],[[[329,[191]]],[[335,[191]]]],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[333,27],[316,27],0,[[297,[52,[87]]],[[15,[107]]]],[[297,[52,[323]],[14,[336]]],[[90,[[89,[88]]]]]],[297,316],[316,337],[297,297],[[[328,[191]],230],[[328,[191]]]],[[[329,[191]],230],[[335,[191]]]],0,0,0,0,[[[338,[27]]],337],[[],297],[191,[[327,[191]]]],0,0,[[[7,[339]],10]],[[[7,[339]]]],0,[[[90,[337]],340],341],[[[7,[339]],10]],[[[7,[339]]]],[53],[[[327,[191]]],88],[[[296,[[327,[191]],13]]],88],0,0,0,0,0,0,[332],[297],[[297,[52,[87]]],[[15,[107]]]],[87],[342],[[[0,[88,131]]],[[52,[343]]]],[[297,[130,[56]],[0,[230,131]]],[[344,[131]]]],[[297,[130,[56]],230]],0,[[87,88],[[15,[334]]]],[[]],[[]],[[],56],[[],56],[[],56],[[[329,[191]],230],[[15,[[328,[191]],[329,[191]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[328,[191]],230],[[15,[[328,[191]],[328,[191]]]]]],[[[329,[191]],230],[[15,[[335,[191]],[329,[191]]]]]],[[[327,[191]]],[[15,[[328,[191]],345]]]],[[[296,[[327,[191]],13]]],[[15,[[346,[191,191]],345]]]],[[[327,[191]]],[[15,[[329,[191]],345]]]],[[[296,[[327,[191]],13]]],[[15,[[347,[191]],345]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[191,263],[[327,[191]]]],[[[327,[191]]],88],[[[296,[[327,[191]],13]]],88],0,0,0,[230],0,0,0,0,0,0,0,0,0,0,0,0,0,[87],[342],[[[0,[88,131]]],[[52,[343]]]],[88,[[52,[343]]]],[[87,88],[[15,[334]]]],0,0,[348,[[72,[1]]]],[[]],[[]],[[]],[[]],[349,349],[[[348,[78]]],[[348,[78]]]],[[]],[[]],[[349,349],18],[[19,20],[[15,[[348,[155]],21]]]],[[[348,[209]],22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[348,8],[[],348],[24,[[15,[349]]]],[24,[[15,[[348,[258]]]]]],[[[348,[308]],1],[[350,[1,308]]]],[[349,349],27],[[[348,[146]],[348,[146]]],27],[[],27],[[],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[349,31],32],[[349,31],32],[[[348,[77]],31],32],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[148,348],[[]],[[]],[1,348],[[348,1],52],[[348,1],52],[[[348,[308]],1],308],[[349,49]],[[[348,[240]],49]],[[348,1],52],[[]],[[]],[[],51],[[],51],[348,38],[348,1],[[349,349],[[52,[18]]]],[[349,54],15],[[[348,[165]],54],15],[[348,348],27],[[348,1],[[15,[349]]]],[348,40],[[],[[14,[6,13]]]],[[]],[[]],[[[348,[351]]],[[348,[352]]]],[[],56],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[]],[[]],0,0,0,0,[[353,348],[[15,[349]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[353,[78]]],[[353,[78]]]],[354,354],[[]],[[]],[[19,20],[[15,[[353,[155]],21]]]],[[[353,[209]],22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[353,8],[354,8],[353,8],[354,8],[[],353],[[],354],[24,[[15,[[353,[258]]]]]],[24,[[15,[354]]]],[[[353,[146]],[353,[146]]],27],[[354,354],27],[[],27],[[],27],[28,[[15,[29,30]]]],[28,[[15,[29,30]]]],[[353,148]],[[[353,[77]],31],32],[[354,31],32],[[]],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[148,353],[148,354],[[]],[[]],[[353,1],[[52,[14]]]],[[353,1],[[52,[14]]]],[[[353,[240]],49]],[[354,1,8]],[[]],[[]],[[]],[[]],[[[353,[131]]]],[353,[[0,[38,40]]]],[[],51],[[],51],[[],51],[353,27],[353,38],[354,38],[353,[[0,[38,40]]]],[353,38],0,[[353,1],8],[[353,217],[[15,[353]]]],[[]],[14,355],[[[72,[1,14]]],353],[[[355,[38]]],52],[[1,354,348,35],354],[[[353,[165]],54],15],[[354,54],15],[[353,353],27],[353,354],[[],[[14,[6,13]]]],[[]],[[]],[353,1],[354,1],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[],58],[[]],[[]],[[]],[[],323],0,0,[[]],[[]],[[]],[[]],[356],[356],[356],[[]],[[]],[356,356],0,[[]],[[]],[[],51],[[],51],[[356,357],356],0,0,[47,356],[358],0,[[356,87],356],0,[[356,10],356],[[],15],[[],15],[[],15],[[],15],[[],58],[[],58],[[]],[[]],0,0,0,0,0,0,[[[7,[100]]],100],[[[7,[167]],[130,[192]],[161,[[0,[188,168]]]],[0,[359,360]]],193],[[]],[[]],[[]],[[]],[118,118],[[]],[[19,20],[[15,[118,21]]]],[[118,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[[118,118],27],[[],27],[[],27],[[118,31],32],[[361,31],32],[[361,31],32],[[]],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[[118,49]],0,[[]],[[]],[[],51],[[],51],[[[7,[100]],[161,[[0,[188,168]]]]],362],0,[53],0,[[],[[14,[6,13]]]],[[]],[[],56],[[],15],[[],15],[[],15],[[],15],[118,2],[[[7,[176]],[7,[177]]],2],[[],58],[[],58],[[118,38],[[15,[361]]]],[[]],[[]],0,0,0,0,0,0,0,0,[363,364],0,[[]],[[]],[363,363],[[]],[[19,20],[[15,[363,21]]]],[[363,22],[[15,[8,23]]]],[22,[[15,[8,23]]]],[[363,365],27],[24,[[15,[363]]]],[[363,363],27],[[],27],[[],27],[28,[[15,[29,30]]]],[[363,31],32],[[]],[[[7,[6]],[44,[42,43]]],[[15,[45]]]],[[]],[[363,49]],[[]],[[],51],0,[[363,54],15],[[],[[14,[6,13]]]],[[]],[[],15],[[],15],[[],58],[[]],0,0,0,0,0,[[]],[[]],0,[[366,31],32],[[366,31],32],[[]],[[]],[[],51],[73,366],[73,366],[[],[[90,[[89,[88]]]]]],[[],[[90,[[89,[88]]]]]],[[],56],[[],15],[[],15],[[],58],[[]],[[[128,[156]],[128,[[7,[6]]]]],264],[[[128,[156]],[128,[[7,[6]]]]],264],[[[128,[156]],[128,[[7,[6]]]]],264],[[[128,[156]],[128,[[7,[6]]]]],264],0,0,0,[[]],[[]],[[]],[[]],[367,367],[[]],[[367,367],27],[[],27],[[],27],[[368,31],32],[[367,31],32],[[367,31],32],[[[369,[[0,[78,79]]]]],[[368,[[0,[78,79]]]]]],[[]],[[]],[[]],0,[[]],[[]],[[],51],[[],51],[[],51],[[[369,[78]]]],[[[369,[[0,[78,79]]]]],[[368,[[0,[78,79]]]]]],[[],[[90,[[89,[88,13]]]]]],[[],[[90,[[89,[88,13]]]]]],[[[90,[[368,[[0,[78,79]]]]]],340],[[341,[52]]]],[53],[[]],[[],56],[[],15],[[],15],[[],15],[[],15],[[90,340],[[341,[[52,[15]]]]]],[[],58],[[],58],[[]],[[]]],"c":[1120,1803],"p":[[3,"Amount"],[3,"TransactionId"],[8,"BitOrder"],[3,"BitSlice"],[3,"Hash"],[15,"u8"],[15,"slice"],[15,"usize"],[3,"Feerate"],[15,"u64"],[3,"Amount"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[3,"PeerId"],[3,"OutPoint"],[4,"Ordering"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[8,"Write"],[3,"Error"],[8,"Deserializer"],[15,"char"],[8,"FromIterator"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[4,"ParseAmountError"],[4,"CoreError"],[15,"u16"],[3,"ParseIntError"],[4,"ParseAmountError"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"Hasher"],[8,"SliceIndex"],[3,"Request"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[3,"String"],[4,"BitSpanError"],[3,"TypeId"],[8,"WriteBase32"],[3,"WsAdminClient"],[3,"PeerServerParams"],[6,"FederationResult"],[3,"ApiAuth"],[3,"AuditSummary"],[3,"ConfigGenConnectionsRequest"],[3,"ConfigGenParamsConsensus"],[3,"ConfigGenParamsResponse"],[3,"ConfigGenParamsRequest"],[3,"PublicKey"],[3,"SignedEpochOutcome"],[6,"SerdeEpochHistory"],[3,"BTreeMap"],[3,"Url"],[6,"ApiRequestErased"],[8,"DeserializeOwned"],[8,"Eq"],[8,"Debug"],[8,"Clone"],[8,"MaybeSend"],[3,"StatusResponse"],[3,"Certificate"],[3,"BTreeSet"],[8,"JsonRpcClient"],[3,"WsFederationApi"],[3,"DynGlobalApi"],[8,"IGlobalFederationApi"],[3,"Duration"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"ApiVersionSet"],[3,"DynModuleApi"],[3,"InviteCode"],[3,"ClientConfigDownloadToken"],[3,"FederationStatus"],[3,"PeerStatus"],[4,"PeerConnectionStatus"],[4,"ServerStatus"],[3,"SupportedApiVersionsSummary"],[3,"XOnlyPublicKey"],[4,"PeerError"],[3,"FederationError"],[4,"OutputOutcomeError"],[3,"FederationPeer"],[3,"PeerResponse"],[4,"Error"],[3,"Error"],[8,"IModuleFederationApi"],[8,"MaybeSync"],[3,"ClientConfig"],[3,"Client"],[4,"TransactionStatus"],[8,"OutputOutcome"],[4,"Value"],[6,"JsonRpcResult"],[8,"Sync"],[8,"QueryStrategy"],[3,"Transaction"],[3,"SignedBackupRequest"],[6,"ModuleInstanceId"],[3,"ClientBackupKey"],[3,"ClientBackupSnapshot"],[3,"ClientBackupKeyPrefix"],[3,"BitcoinRpcConfig"],[6,"Result"],[3,"Cancelled"],[8,"IDynCommonModuleInit"],[8,"AsRef"],[3,"ModuleInitRegistry"],[8,"Into"],[8,"Send"],[3,"ClientModuleConfig"],[3,"JsonWithKind"],[3,"PeerUrl"],[3,"ClientConfigResponse"],[3,"FederationId"],[3,"ConfigGenModuleParams"],[3,"EmptyGenParams"],[3,"ServerModuleConsensusConfig"],[3,"ServerModuleConfig"],[4,"DkgPeerMsg"],[4,"SupportedDkgMessage"],[8,"DkgGroup"],[4,"DkgMessage"],[6,"ServerModuleConfigGenParamsRegistry"],[8,"PartialEq"],[4,"DkgError"],[8,"IntoIterator"],[3,"G2Projective"],[3,"G1Projective"],[8,"ModuleInitParams"],[3,"ModuleKind"],[3,"ModuleConsensusVersion"],[8,"ClientConfig"],[8,"Decodable"],[3,"Path"],[6,"ServerModuleInitRegistry"],[6,"CommonModuleInitRegistry"],[3,"DynServerModuleInit"],[4,"All"],[3,"Secp256k1"],[3,"PublicKey"],[8,"TypedServerModuleConfig"],[15,"array"],[8,"Serialize"],[3,"Wrap"],[3,"KeyPair"],[8,"Verification"],[3,"Scalar"],[4,"Error"],[8,"Any"],[3,"DynUnknown"],[3,"KeyPair"],[3,"DecoderBuilder"],[3,"DynClientConfig"],[3,"DynInput"],[3,"DynOutput"],[3,"DynOutputOutcome"],[3,"DynModuleConsensusItem"],[3,"TweakedKeyPair"],[3,"DisplaySecret"],[3,"Error"],[8,"IClientConfig"],[8,"IInput"],[8,"IOutput"],[8,"IOutputOutcome"],[8,"IModuleConsensusItem"],[8,"Signing"],[3,"SecretKey"],[8,"Rng"],[8,"Sized"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[3,"BackupRequest"],[3,"DynClientModule"],[8,"IClientModule"],[3,"TransactionItemAmount"],[3,"DynServerModule"],[3,"ApiEndpoint"],[3,"ModuleDatabaseTransaction"],[3,"Audit"],[3,"DynVerificationCache"],[8,"IVerificationCache"],[8,"IServerModule"],[8,"IDatabaseTransaction"],[3,"SingleUseDatabaseTransaction"],[3,"CommittableIsolatedDatabaseTransaction"],[8,"Encodable"],[8,"DatabaseKey"],[8,"DatabaseRecord"],[3,"IsolatedDatabaseTransaction"],[3,"DatabaseTransaction"],[3,"Database"],[3,"DatabaseVersion"],[6,"MigrationMap"],[8,"Fn"],[4,"AutocommitError"],[3,"CommitTracker"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"DatabaseVersionKey"],[8,"DatabaseValue"],[8,"DatabaseLookup"],[8,"Stream"],[8,"ISingleUseDatabaseTransaction"],[3,"DatabaseInner"],[3,"Notifications"],[8,"IDatabase"],[8,"FnOnce"],[6,"PrefixStream"],[8,"DatabaseKeyWithNotify"],[3,"MemDatabase"],[3,"MemTransaction"],[3,"DatabaseInsertOperation"],[3,"DatabaseDeleteOperation"],[3,"DummyError"],[4,"DatabaseOperation"],[3,"NotifyQueue"],[8,"Hash"],[3,"NotifyingTransaction"],[3,"Notified"],[4,"TestDbKeyPrefix"],[3,"TestKey"],[3,"AltTestKey"],[3,"TestVal"],[3,"DbPrefixTestPrefix"],[3,"TestKeyV0"],[3,"DbPrefixTestPrefixV0"],[3,"AltDbPrefixTestPrefix"],[3,"PercentTestKey"],[3,"PercentPrefixTestPrefix"],[4,"DynRawFallback"],[3,"BigSize"],[8,"DynEncodable"],[8,"BitcoinHash"],[3,"CountWrite"],[8,"Deserialize"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u32"],[6,"Result"],[15,"never"],[4,"DecodeError"],[8,"Writer"],[8,"FixedInt"],[8,"VarInt"],[3,"PublicKeySet"],[4,"EpochVerifyError"],[4,"ConsensusItem"],[3,"ConsensusUpgrade"],[3,"SerdeSignatureShare"],[3,"SerdeSignature"],[3,"EpochOutcome"],[3,"UnzipConsensusItem"],[3,"AbbreviateDebug"],[8,"Display"],[3,"OptStracktrace"],[3,"AbbreviateHexBytes"],[3,"AbbreviateJson"],[8,"AbbreviatedDebug"],[3,"Map"],[3,"Data"],[3,"DynCommonModuleInit"],[3,"ApiError"],[3,"SerdeModuleEncoding"],[3,"ApiEndpointContext"],[3,"ApiRequest"],[3,"PeerHandle"],[4,"ConsensusProposal"],[3,"InputMeta"],[4,"ModuleError"],[8,"IServerModuleInit"],[3,"Arc"],[3,"TaskGroup"],[8,"FnMut"],[3,"MuxPeerConnections"],[3,"SupportedModuleApiVersions"],[3,"Error"],[3,"CoreConsensusVersion"],[8,"Copy"],[3,"ModuleSummary"],[3,"AuditItem"],[3,"HashMap"],[6,"ServerModuleRegistry"],[8,"Default"],[3,"ApiVersion"],[3,"MultiApiVersion"],[3,"SupportedCoreApiVersions"],[3,"MultiApiVersionIter"],[3,"PeerConnections"],[8,"Unpin"],[3,"FakePeerConnections"],[3,"TaskHandle"],[4,"QueryStep"],[3,"ErrorStrategy"],[3,"ThresholdConsensus"],[3,"VerifiableResponse"],[3,"UnionResponses"],[3,"UnionResponsesSingle"],[3,"SystemTime"],[3,"AllOrDeadline"],[3,"DiscoverApiVersionSet"],[6,"PeerResult"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"NodeId"],[3,"ChannelUsage"],[3,"TaskGroupInner"],[3,"TaskPanicGuard"],[3,"Elapsed"],[3,"RwLockMappedWriteGuard"],[3,"JoinError"],[3,"TaskShutdownToken"],[3,"Receiver"],[3,"RouteHop"],[3,"Context"],[4,"Poll"],[3,"Instant"],[3,"JoinHandle"],[3,"Receiver"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"Tiered"],[3,"InvalidAmountTierError"],[4,"Entry"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[3,"TieredMulti"],[3,"TieredSummary"],[3,"TieredMultiZip"],[3,"TimeReporter"],[3,"Level"],[3,"TimeReporterInner"],[8,"RngCore"],[8,"CryptoRng"],[4,"TransactionError"],[3,"MusigKeyAggCache"],[3,"TxOutProof"],[3,"BlockHash"],[3,"Txid"],[3,"SanitizedUrl"],[4,"BroadcastStreamRecvError"],[3,"BroadcastStream"],[3,"Receiver"],[8,"NumPeers"],[8,"IFederationApi"],[8,"GlobalFederationApi"],[8,"FederationApiExt"],[13,"InvalidVout"],[13,"InvalidPeerId"],[8,"SGroup"],[8,"TypedServerModuleConsensusConfig"],[8,"ISupportedDkgMessage"],[8,"IntoDynInstance"],[4,"FinalizationError"],[8,"ClientModule"],[8,"IDatabaseTransactionOps"],[8,"DatabaseKeyPrefix"],[13,"CommitFailed"],[13,"ClosureError"],[13,"WrongPrefix"],[13,"WrongLength"],[13,"Raw"],[8,"IterUnzipConsensusItem"],[8,"CommonModuleInit"],[8,"ModuleCommon"],[8,"ExtendsCommonModuleInit"],[8,"ServerModule"],[8,"ServerModuleInit"],[8,"TypedApiEndpoint"],[8,"IntoModuleError"],[8,"IPeerConnections"],[8,"IMuxPeerConnections"],[13,"Accepted"],[13,"Failure"],[13,"UnbalancedTransaction"],[13,"InvalidSignature"],[8,"NextOrPending"]]},\
"fedimint_dbtool":{"doc":"","t":"ENNNDNLLLLLLLLLLLLLMLMLLLLLLALLLLLLLLLLLLFLLLLLLFMFLLLLLLLLLLLLLLMMMMMMMMDDLLLLMLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLMLLLLLLLL","n":["DbCommand","Delete","Dump","List","Options","Write","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command","command_for_update","database","deref","deref","deref_mut","deref_mut","drop","drop","dump","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","group_id","has_subcommand","hex_parser","init","init","into","into","into_request","into_request","main","no_modules","print_kv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","cfg_dir","key","key","modules","password","prefix","prefixes","value","DatabaseDump","SerdeWrapper","borrow","borrow","borrow_mut","borrow_mut","cfg","deref","deref","deref_mut","deref_mut","drop","drop","dump_database","erased_serialize","fmt","from","from","from_encodable","init","init","into","into","into_request","into_request","module_inits","modules","new","prefixes","print_database","read_only","retrieve_client_data","retrieve_consensus_data","retrieve_ln_client_data","retrieve_mint_client_data","retrieve_wallet_client_data","serialize","serialized","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_dbtool"],[65,"fedimint_dbtool::DbCommand"],[73,"fedimint_dbtool::dump"]],"d":["Tool to inspect and manipulate rocksdb databases. All …","Delete a single entry from the database identified by <code>key</code>","Dump a subset of the specified database and serialize the …","List all key-value pairs where the key begins with <code>prefix</code>","","Write a key-value pair to the database, overwriting the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Run dbtool like it doesn’t know about any module kind. …","","","","","","","","","","","","","","","","","","","","","","","","Structure to hold the deserialized structs from the …","","","","","","","","","","","","","Iterates through all the specified ranges in the database …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Prints the contents of the BTreeMap to a pretty JSON string","","Iterates through each of the prefixes within the client …","Iterates through each of the prefixes within the consensus …","Iterates through each of the prefixes within the lightning …","Iterates through each of the prefixes within the mint …","Iterates through each of the prefixes within the wallet …","","","","","","","","","",""],"i":[0,3,3,3,0,3,2,2,3,3,2,3,2,3,2,3,2,3,2,2,2,2,2,3,2,3,2,3,0,2,3,2,3,2,3,2,3,2,3,2,3,0,2,3,2,3,2,3,0,2,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,31,32,33,31,31,34,31,32,0,0,20,24,20,24,20,20,24,20,24,20,24,20,24,24,20,24,24,20,24,20,24,20,24,20,20,20,20,20,20,20,20,20,20,20,24,20,20,24,20,24,20,24,20,24],"f":[0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[],1],0,[[],1],0,[4],[4],[4],[4],[4],[4],0,[[2,5],6],[[3,5],6],[[]],[[]],[7,[[9,[2,8]]]],[7,[[9,[3,8]]]],[7,[[9,[2,8]]]],[7,[[9,[3,8]]]],[[]],[[]],[[],[[11,[10]]]],[12,13],[12,[[15,[14]]]],[[],4],[[],4],[[]],[[]],[[],16],[[],16],[[],15],0,[[[18,[17]],[18,[17]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],19],[[],19],[[2,7],[[9,[8]]]],[[3,7],[[9,[8]]]],[[2,7],[[9,[8]]]],[[3,7],[[9,[8]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[4],[4],[4],[4],[4],[4],[20,15],[21,[[9,[22,23]]]],[[24,5],6],[[]],[[]],[25,24],[[],4],[[],4],[[]],[[]],[[],16],[[],16],0,0,[[26,27,27,28,[29,[27]],[29,[27]]],20],0,[20],0,[20],[20],[20],[20],[20],[[24,30],9],0,[[],9],[[],9],[[],9],[[],9],[[],19],[[],19],[[]],[[]]],"c":[],"p":[[3,"Command"],[3,"Options"],[4,"DbCommand"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Bytes"],[6,"Result"],[3,"Request"],[15,"u8"],[15,"slice"],[3,"TypeId"],[3,"DatabaseDump"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"SerdeWrapper"],[8,"Encodable"],[3,"PathBuf"],[3,"String"],[6,"ServerModuleInitRegistry"],[3,"Vec"],[8,"Serializer"],[13,"Dump"],[13,"Write"],[13,"Delete"],[13,"List"]]},\
"fedimint_derive":{"doc":"","t":"YYYFF","n":["Decodable","Encodable","UnzipConsensus","do_not_ignore","panic_if_ignored"],"q":[[0,"fedimint_derive"]],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,0,0,[1,2],[1,2]],"c":[],"p":[[3,"Field"],[15,"bool"]]},\
"fedimint_derive_secret":{"doc":"Scheme for deriving deterministic secret keys","t":"RRRDDRRLLLLLLLLLLLLLLLLLLLLLLLMLMLFLLLLLLLLLLLLLLLL","n":["BLS12_381_TAG","CHACHA20_POLY1305","CHILD_TAG","ChildId","DerivableSecret","RAW_BYTES","SECP256K1_TAG","borrow","borrow","borrow_mut","borrow_mut","child_key","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","fmt","fmt","from","from","from_bytes","from_ref","from_ref","into","into","into_request","into_request","kdf","level","level","new_root","tagged_derive","to_bls12_381_key","to_bytes","to_chacha20_poly1305_key","to_chacha20_poly1305_key_raw","to_owned","to_owned","to_random_bytes","to_secp_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_derive_secret"]],"d":["","","","Describes a child key of a <code>DerivableSecret</code>","Secret key that allows deriving child secret keys","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Get derivation level","Derivation level, root = 0, every <code>child_key</code> increments it","","","","","","","","","Generate a pseudo-random byte array from the derivable …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,1,2,1,1,2,1,2,1,2,2,2,2,1,2,1,2,2,1,2,1,2,1,1,1,1,1,0,1,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],1],[2,2],[1,1],[[]],[[]],[[3,4],[[6,[2,5]]]],[[2,7],[[6,[8,9]]]],[7,[[6,[8,9]]]],[[2,10],11],[[1,10],11],[[]],[[]],[[[13,[12]],[16,[14,15]]],[[6,[17]]]],[[]],[[]],[[]],[[]],[[],18],[[],18],0,[1,8],0,[[[13,[12]],[13,[12]]],1],[[[19,[12]],2],[[19,[12]]]],[1,20],[[],[[22,[12,21]]]],[1,23],[1,[[19,[12]]]],[[]],[[]],[1,[[19,[12]]]],[[1,[25,[24]]],26],[[],6],[[],6],[[],6],[[],6],[[],27],[[],27],[[]],[[]]],"c":[],"p":[[3,"DerivableSecret"],[3,"ChildId"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"Request"],[15,"array"],[3,"Scalar"],[3,"Global"],[3,"Vec"],[3,"UnboundKey"],[8,"Signing"],[3,"Secp256k1"],[3,"KeyPair"],[3,"TypeId"]]},\
"fedimint_dummy_client":{"doc":"","t":"DIDDKALLLLLLLLLLLMLLLLCLLLLLLALLLMKKLLLLLLLLLLFLLLLLLLLLLLMLLMLLKKLKALLLLLLLLLLLLLLLLLLLLLLLIKKNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENENNNNNFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DummyClientContext","DummyClientExt","DummyClientGen","DummyClientModule","account","api","as_any","as_common","await_primary_module_output","await_primary_module_output","backup","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone","clone_into","clone_into","common","context","context","create_exact_output","create_exact_output","create_sufficient_input","create_sufficient_input","db","decoder","decoder","decoder","dummy_decoder","fed_public_key","fed_signature","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_balance","get_balance","get_funds","handle_cli_command","init","init","input_amount","input_amount","into","into","into","into_request","into_request","into_request","key","module_kind","module_kind","notifier","output_amount","output_amount","print_money","receive_money","restore","send_money","states","subscribe_balance_changes","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","supports_being_primary","to_dyn_common","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wipe","DummyFederationApi","sign_message","wait_signed","ClientFunds","DbKeyPrefix","DummyClientFundsKeyV0","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","into","into","into_request","into_request","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DummyError","DummyInternalError","DummyStateMachine","Input","InputDone","Output","OutputDone","Refund","add_funds","as_any","await_dummy_output_outcome","await_tx_accepted","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","into","into","into_dyn","into_request","into_request","operation_id","operation_id","provide","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_dummy_client"],[92,"fedimint_dummy_client::api"],[95,"fedimint_dummy_client::db"],[137,"fedimint_dummy_client::states"]],"d":["Data needed by the state machine","Exposed API calls for client apps","","","Return our account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the fed’s public key","Request the federation signs a message for us","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Request the federation prints money for us","Wait to receive money at an outpoint","","Send money to another user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Tracks a transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,77,0,10,17,10,10,10,10,16,17,10,16,17,10,16,17,16,17,0,10,10,10,10,10,10,0,10,17,17,16,77,77,10,16,17,10,16,17,16,17,10,10,0,10,17,17,10,10,10,16,17,10,16,17,10,17,17,10,10,10,77,77,10,77,0,10,10,17,17,10,10,10,17,16,17,10,16,17,10,16,17,10,16,17,10,16,17,10,0,78,78,51,0,0,51,52,51,52,51,52,51,52,52,52,52,52,52,52,51,52,51,52,52,52,51,52,52,51,52,51,52,52,52,51,52,51,52,51,52,51,52,51,52,0,64,0,68,68,68,68,68,0,68,0,0,68,64,68,64,68,68,64,68,64,68,64,68,64,68,64,64,68,64,68,68,64,64,68,64,68,64,64,68,64,68,64,68,64,68,64,68,68,64,68,68,64,64,68,64,68,64,64,68,68,68,64,68,64,68,64,68,64],"f":[0,0,0,0,[[],1],0,[[],2],[[],3],[[4,5],[[9,[[8,[6,7]]]]]],[[10,4,5],[[9,[[8,[6]]]]]],[[[12,[11]],[14,[13]],15,11],[[9,[[8,[6,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[16,16],[17,17],[[]],[[]],0,[10],[11,18],[[10,12,4,19],[[9,[[8,[6]]]]]],[[11,20,4,19],[[9,[[8,[6,7]]]]]],[[10,12,4,19],[[9,[[8,[6]]]]]],[[11,20,4,19],[[9,[[8,[6,7]]]]]],0,[[],21],[[],21],[[],21],0,[[],22],[23,[[9,[[8,[6]]]]]],[[10,24],25],[[16,24],25],[[17,24],25],[[]],[[]],[[]],[[]],[[]],[[10,12],[[9,[[8,[6]]]]]],[[11,20],[[9,[[8,[6,7]]]]]],[12,19],[[26,[28,[27]]],[[9,[[8,[6,7]]]]]],[[17,29,30,31,32,33,[34,[13]],15,35],[[9,[[8,[6]]]]]],[[29,36,31,11,32,33,[37,[13]],15],[[9,[[8,[6,7]]]]]],[10,38],[39,38],[[]],[[]],[[]],[[],40],[[],40],[[],40],0,[[],41],[[],41],0,[42,38],[10,38],[19,[[9,[[8,[6]]]]]],[5,[[9,[[8,[6]]]]]],[[20,11,[14,[13]],15,[44,[[28,[43]]]]],[[9,[[8,[6,7]]]]]],[[1,19],[[9,[[8,[6]]]]]],0,[[],[[9,[[8,[6,7]]]]]],[10,[[9,[[8,[6]]]]]],[[],45],[17,45],[[],46],[[],46],[10,46],[[],47],[[]],[[]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],49],[[],49],[[],49],[[]],[[]],[[]],[[[12,[11]],11,[14,[13]]],[[9,[[8,[6,7]]]]]],0,[50,[[9,[[8,[6]]]]]],[50,[[9,[[8,[6]]]]]],0,0,0,[[]],[[]],[[]],[[]],[51,51],[52,52],[[]],[[]],[[53,54],[[48,[52,55]]]],[[52,56],[[48,[57,58]]]],[56,[[48,[57,58]]]],[[52,52],46],[[],46],[[],46],[[51,24],25],[[52,24],25],[[]],[[]],[[[28,[43]],[60,[21,59]]],[[48,[61]]]],[[[28,[43]],[60,[21,59]]],[[48,[61]]]],[[]],[[]],[[52,62]],[[]],[[]],[[],40],[[],40],[[],[[63,[43,7]]]],[[],[[63,[43,7]]]],[[]],[[]],[[],48],[[],48],[[],48],[[],48],[[],49],[[],49],[[]],[[]],0,0,0,0,0,0,0,0,[[19,12]],[[],2],[[13,5,21],[[48,[64]]]],[[13,4,65],[[48,[66]]]],[[]],[[]],[[]],[[]],[11,67],[68,68],[64,64],[[]],[[]],[[53,54],[[48,[68,55]]]],[[53,54],[[48,[64,55]]]],[[68,56],[[48,[57,58]]]],[[64,56],[[48,[57,58]]]],[56,[[48,[57,58]]]],[56,[[48,[57,58]]]],[69,[[48,[64]]]],[[68,68],46],[[64,64],46],[[],46],[[],46],[[],46],[[],46],[67,46],[70,[[48,[71,72]]]],[[68,24],25],[[64,24],25],[[64,24],25],[[]],[[]],[[[28,[43]],[60,[21,59]]],[[48,[61]]]],[[[28,[43]],[60,[21,59]]],[[48,[61]]]],[[]],[[]],[[]],[[]],[[68,73]],[[],40],[[],40],[68,4],[[],4],[74],[[64,75],48],[[],[[63,[43,7]]]],[[],[[63,[43,7]]]],[[]],[[]],[[],50],[68,[[63,[[76,[68]]]]]],[18,[[63,[[76,[67]],7]]]],[[],48],[[],48],[[],48],[[],48],[[],49],[[],49],[[]],[[]]],"c":[],"p":[[3,"XOnlyPublicKey"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"OperationId"],[3,"OutPoint"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"DummyClientModule"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"DynGlobalClientContext"],[3,"Executor"],[3,"DynGlobalApi"],[3,"DummyClientContext"],[3,"DummyClientGen"],[3,"DynContext"],[3,"Amount"],[3,"DatabaseTransaction"],[3,"Decoder"],[3,"PublicKey"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"Client"],[3,"OsString"],[15,"slice"],[3,"FederationId"],[3,"DummyClientConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"ModuleNotifier"],[3,"DynModuleApi"],[3,"ClientModuleConfig"],[3,"Notifier"],[3,"TransactionItemAmount"],[3,"DynInput"],[3,"Request"],[3,"ModuleKind"],[3,"DynOutput"],[15,"u8"],[4,"Option"],[3,"MultiApiVersion"],[15,"bool"],[3,"DynCommonModuleInit"],[4,"Result"],[3,"TypeId"],[3,"String"],[4,"DbKeyPrefix"],[3,"DummyClientFundsKeyV0"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[8,"Write"],[15,"usize"],[3,"Error"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[3,"Vec"],[4,"DummyError"],[3,"TransactionId"],[4,"TxSubmissionError"],[3,"DynState"],[4,"DummyStateMachine"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[6,"ModuleInstanceId"],[3,"Demand"],[8,"Serializer"],[3,"StateTransition"],[8,"DummyClientExt"],[8,"DummyFederationApi"]]},\
"fedimint_dummy_common":{"doc":"","t":"RDEEDDDDRRNNMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLL","n":["CONSENSUS_VERSION","DummyCommonGen","DummyConsensusItem","DummyError","DummyInput","DummyModuleTypes","DummyOutput","DummyOutputOutcome","FED_SECRET_PHRASE","KIND","NotEnoughFunds","Sign","account","account","amount","amount","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decoder","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fed_key_pair","fed_public_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","provide","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DummyClientConfig","DummyConfig","DummyConfigConsensus","DummyConfigLocal","DummyConfigPrivate","DummyGenParams","DummyGenParamsConsensus","DummyGenParamsLocal","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","example","fed_public_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","private","private_key_share","public_key_set","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_fee","tx_fee","tx_fee","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_dummy_common"],[192,"fedimint_dummy_common::config"]],"d":["Modules are non-compatible with older versions","","Non-transaction items that will be submitted to consensus","Errors that might be returned by the server","Input for a fedimint transaction","Contains the types defined above","Output for a fedimint transaction","Information needed by a client to update output funds","A special key that creates assets for a test/example","Unique name for this module","","User’s message sign request signed by a single peer","Associate the input with a user’s pubkey","Associate the output with a user’s pubkey","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all the configuration for the client","Contains all the configuration for the server","Will be the same for every federation member","Locally unencrypted config unique to each member","Will be encrypted and not shared such as private key …","Parameters necessary to generate this module’s …","Consensus parameters for config generation","Local parameters for config generation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Example private key share for a single member","Example federation threshold signing key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accessible to clients","Will be the same for all peers","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,11,2,5,8,5,8,2,5,8,10,56,2,5,8,10,11,30,56,2,5,8,10,11,30,2,2,5,5,8,8,10,10,11,2,5,8,10,11,0,2,5,8,10,2,5,8,10,2,5,8,10,30,2,5,8,10,2,5,8,10,2,5,8,10,11,2,2,5,5,8,8,10,10,11,11,2,5,8,10,2,5,8,10,0,0,2,2,5,5,8,8,10,10,11,11,30,56,2,5,8,10,11,30,2,5,8,10,2,5,8,10,11,2,5,8,10,11,56,2,5,8,10,11,30,2,5,8,10,56,2,5,8,10,11,30,11,2,5,8,10,2,5,8,10,2,5,8,10,11,2,5,8,10,11,56,2,5,8,10,11,30,56,2,5,8,10,11,30,56,2,5,8,10,11,30,56,2,5,8,10,11,30,0,0,0,0,0,0,0,0,49,45,46,47,48,49,51,52,53,45,46,47,48,49,51,52,53,45,46,47,48,49,49,51,52,53,45,46,47,48,49,51,52,53,45,48,49,51,52,49,51,52,49,51,52,45,45,46,47,48,49,51,52,53,49,49,49,49,49,45,46,47,48,49,51,52,53,51,49,45,46,47,48,49,49,51,52,53,45,46,47,48,49,51,52,53,49,51,52,45,48,45,46,47,48,49,51,52,53,49,45,46,47,48,49,51,52,53,49,45,46,47,48,49,51,52,53,52,45,48,48,53,52,45,46,47,48,49,51,52,53,49,51,52,45,46,47,48,49,51,52,53,45,48,49,45,46,47,48,49,51,52,53,45,46,47,48,49,51,52,53,47,49,52,45,46,47,48,49,51,52,53,52,45,46,47,48,49,51,52,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,4],[5,5],[3,6],[3,7],[8,8],[3,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],0,[[12,13],[[15,[2,14]]]],[[12,13],[[15,[5,14]]]],[[12,13],[[15,[8,14]]]],[[12,13],[[15,[10,14]]]],[[2,16],[[15,[17,18]]]],[[5,16],[[15,[17,18]]]],[[8,16],[[15,[17,18]]]],[[10,16],[[15,[17,18]]]],[16,[[15,[17,18]]]],[16,[[15,[17,18]]]],[16,[[15,[17,18]]]],[16,[[15,[17,18]]]],[[],19],[20,[[15,[2]]]],[20,[[15,[5]]]],[20,[[15,[8]]]],[20,[[15,[10]]]],[[],21],[[],21],[[],21],[[],21],[[2,2],22],[[5,5],22],[[8,8],22],[[10,10],22],[[11,11],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[4,22],[6,22],[7,22],[9,22],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[[],26],[[],27],[[2,28],29],[[2,28],29],[[5,28],29],[[5,28],29],[[8,28],29],[[8,28],29],[[10,28],29],[[10,28],29],[[11,28],29],[[11,28],29],[[30,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[]],[[]],[[]],[[]],[[]],[[2,36]],[[5,36]],[[8,36]],[[10,36]],[[11,36]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,37]],[[5,37]],[[8,37]],[[10,37]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[39],[[2,40],15],[[5,40],15],[[8,40],15],[[10,40],15],[[],[[42,[31,41]]]],[[],[[42,[31,41]]]],[[],[[42,[31,41]]]],[[],[[42,[31,41]]]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[48,48],[49,49],[3,50],[51,51],[52,52],[53,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[12,13],[[15,[49,14]]]],[[12,13],[[15,[51,14]]]],[[12,13],[[15,[52,14]]]],[[49,16],[[15,[17,18]]]],[[51,16],[[15,[17,18]]]],[[52,16],[[15,[17,18]]]],[16,[[15,[17,18]]]],[16,[[15,[17,18]]]],[16,[[15,[17,18]]]],[[],45],[20,[[15,[45]]]],[20,[[15,[46]]]],[20,[[15,[47]]]],[20,[[15,[48]]]],[20,[[15,[49]]]],[20,[[15,[51]]]],[20,[[15,[52]]]],[20,[[15,[53]]]],[[],21],[[49,49],22],[[],22],[[],22],[50,22],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],[23,[[15,[24,25]]]],0,0,[[45,28],29],[[46,28],29],[[47,28],29],[[48,28],29],[[49,28],29],[[49,28],29],[[51,28],29],[[52,28],29],[[53,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[[32,[31]],[34,[19,33]]],[[15,[35]]]],[[],45],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,36]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,37]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[52,54],0,0,0,0,0,[[45,40],15],[[46,40],15],[[47,40],15],[[48,40],15],[[49,40],15],[[51,40],15],[[52,40],15],[[53,40],15],[[],[[42,[31,41]]]],[[],[[42,[31,41]]]],[[],[[42,[31,41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45],[48],[[],43],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[52,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[4,"DummyConsensusItem"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"DummyInput"],[3,"DynInput"],[3,"DynOutput"],[3,"DummyOutput"],[3,"DynOutputOutcome"],[3,"DummyOutputOutcome"],[4,"DummyError"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"KeyPair"],[3,"XOnlyPublicKey"],[3,"Formatter"],[6,"Result"],[3,"DummyCommonGen"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[3,"Demand"],[8,"Serializer"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"DummyGenParams"],[3,"DummyGenParamsLocal"],[3,"DummyGenParamsConsensus"],[3,"DummyConfig"],[3,"DummyClientConfig"],[3,"DynClientConfig"],[3,"DummyConfigLocal"],[3,"DummyConfigConsensus"],[3,"DummyConfigPrivate"],[3,"ModuleKind"],[3,"ModuleConsensusVersion"],[3,"DummyModuleTypes"]]},\
"fedimint_dummy_server":{"doc":"","t":"DDDLLLLLLLLLLLLLLLLLMLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLEDDDDDDDDDDDDNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Dummy","DummyGen","DummyVerificationCache","api_endpoints","api_endpoints","as_any","as_any","as_common","audit","audit","await_consensus_proposal","await_consensus_proposal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone_into","clone_into","consensus_proposal","consensus_proposal","database_version","db","decoder","decoder","distributed_gen","distributed_gen","dump_database","dump_database","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_client_config","get_client_config","get_database_migrations","get_database_migrations","init","init","into","into","into","into_request","into_request","into_request","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","sign_notify","supported_api_versions","supported_api_versions","to_dyn_common","to_owned","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","validate_config","validate_params","versions","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","DummyFundsKeyPrefixV0","DummyFundsKeyV0","DummyFundsKeyV1","DummyFundsPrefixV1","DummyOutcomeKey","DummyOutcomePrefix","DummySignatureKey","DummySignaturePrefix","DummySignatureShareKey","DummySignatureSharePrefix","DummySignatureShareStringPrefix","Funds","Outcome","Signature","SignatureShare","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","hash","hash","hash","hash","hash","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","migrate_to_v1","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_dummy_server"],[90,"fedimint_dummy_server::db"]],"d":["Dummy module","Generates the module","An in-memory cache we could use for faster validation","","","","","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","This module’s contribution to the next consensus proposal","","","","","","Generates configs for all peers in an untrusted manner","","Dumps all database items for debugging","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Converts the consensus config into the client config","","DB migrations to move from old to newer versions","","Initialize the module","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create new module instance","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","","Try to create an output (e.g. issue notes, peg-out BTC, …","Notifies us to propose an epoch","","","","","","Generates configs for all peers in a trusted manner for …","","","","","","","","","","","","Validates the private/public key of configs","","Returns the version of this module","","","","Namespaces DB keys for this module","An iterator over the variants of Self","","Example old version 0 of DB entries","Lookup funds for a user by key or prefix","","Lookup tx outputs by key or prefix","","Lookup signature requests by key or prefix","","Lookup signature requests by key or prefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Example DB migration from version 0 to version 1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,5,5,5,20,19,5,5,5,5,19,5,20,19,5,20,5,5,5,19,20,20,19,20,5,5,19,0,19,5,19,19,19,19,19,5,20,19,5,20,19,20,19,19,19,19,19,19,19,5,20,19,5,20,19,5,5,5,5,5,5,5,5,5,5,19,19,19,19,20,19,19,19,5,20,19,5,20,19,5,20,19,19,19,19,19,5,20,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,55,54,55,56,66,57,67,58,68,59,60,61,62,69,54,55,56,66,57,67,58,68,59,60,61,62,69,54,55,56,57,58,59,60,61,62,54,55,56,57,58,59,60,61,62,56,66,57,67,58,68,59,60,61,62,69,56,66,57,67,58,68,59,60,61,62,69,56,66,57,67,58,68,59,60,61,62,69,56,57,58,59,60,61,62,56,56,57,57,58,58,59,59,60,60,61,61,62,62,56,57,58,59,60,61,62,54,54,56,66,57,67,58,68,59,60,61,62,69,54,55,56,66,57,67,58,68,59,60,61,62,69,56,56,66,57,57,67,58,58,68,59,59,60,61,62,62,69,54,55,56,57,58,59,60,61,62,55,56,57,58,59,60,61,62,55,54,55,56,66,57,67,58,68,59,60,61,62,69,55,54,55,56,66,57,67,58,68,59,60,61,62,69,54,55,55,0,55,55,55,56,57,58,59,60,61,62,55,56,56,66,66,57,57,67,67,58,58,68,68,59,59,60,60,61,61,62,62,69,69,54,55,56,57,58,59,60,61,62,54,54,55,56,66,57,67,58,68,59,60,61,62,69,54,55,56,66,57,67,58,68,59,60,61,62,69,54,55,56,66,57,67,58,68,59,60,61,62,69,54,55,56,66,57,67,58,68,59,60,61,62,69],"f":[0,0,0,[[],[[4,[[2,[1]],3]]]],[5,[[4,[[2,[5]]]]]],[[],6],[[],6],[[],7],[[5,8,9],[[12,[[11,[10]]]]]],[[[8,[13]],9],[[12,[[11,[10,3]]]]]],[[[8,[13]]],[[12,[[11,[10,3]]]]]],[[5,8],[[12,[[11,[10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,[0,[14,15]]]],[[[17,[16]]],18],0,[19,19],[[],18],[20,20],[[]],[[]],[[[8,[13]],13],[[12,[[11,[10,3]]]]]],[[5,8],[[12,[[11,[10]]]]]],[[],21],0,[[],22],[[],22],[[19,23,24],[[12,[[11,[10]]]]]],[[23,24],[[12,[[11,[10,3]]]]]],[[19,8,[4,[25]]],[[12,[[11,[10]]]]]],[[[8,[13]],[4,[25,3]]],[[12,[[11,[10,3]]]]]],[[19,26],27],[[5,26],27],[[20,26],27],[[]],[[]],[[]],[[]],[[]],[[13,28],[[31,[29,30]]]],[[19,28],[[33,[32]]]],[[],[[34,[21,3]]]],[19,35],[[36,37,38],[[12,[[11,[10,3]]]]]],[[19,36,37,38],[[12,[[11,[10]]]]]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],40],[41,5],[[5,8,42],[[12,[[11,[10]]]]]],[[[8,[13]],42,13],[[12,[[11,[10,3]]]]]],[[[8,[13]],43,44],[[12,[[11,[10,3]]]]]],[[5,8,45,44],[[12,[[11,[10]]]]]],[[[8,[13]],16,18],[[12,[[11,[10,3]]]]]],[[5,8,46],[[12,[[11,[10]]]]]],[[5,8,47,42],[[12,[[11,[10]]]]]],[[[8,[13]],48,42],[[12,[[11,[10,3]]]]]],0,[[],49],[19,49],[[],50],[[]],[[]],[[19,[17,[44]],24],[[34,[44,36]]]],[[[17,[44]],24],[[34,[44,36,3]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],51],[[],51],[[],51],[[44,36],[[31,[30]]]],[[19,44,36],33],[24,[[31,[30]]]],[[19,52],[[17,[53]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,64],[[31,[56,65]]]],[[63,64],[[31,[66,65]]]],[[63,64],[[31,[57,65]]]],[[63,64],[[31,[67,65]]]],[[63,64],[[31,[58,65]]]],[[63,64],[[31,[68,65]]]],[[63,64],[[31,[59,65]]]],[[63,64],[[31,[60,65]]]],[[63,64],[[31,[61,65]]]],[[63,64],[[31,[62,65]]]],[[63,64],[[31,[69,65]]]],[[56,70],[[31,[71,72]]]],[[66,70],[[31,[71,72]]]],[[57,70],[[31,[71,72]]]],[[67,70],[[31,[71,72]]]],[[58,70],[[31,[71,72]]]],[[68,70],[[31,[71,72]]]],[[59,70],[[31,[71,72]]]],[[60,70],[[31,[71,72]]]],[[61,70],[[31,[71,72]]]],[[62,70],[[31,[71,72]]]],[[69,70],[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[70,[[31,[71,72]]]],[[56,56],73],[[57,57],73],[[58,58],73],[[59,59],73],[[60,60],73],[[61,61],73],[[62,62],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[74,[[31,[75,76]]]],[74,[[31,[75,76]]]],[74,[[31,[75,76]]]],[74,[[31,[75,76]]]],[74,[[31,[75,76]]]],[74,[[31,[75,76]]]],[74,[[31,[75,76]]]],[[54,26],27],[[54,26],27],[[56,26],27],[[66,26],27],[[57,26],27],[[67,26],27],[[58,26],27],[[68,26],27],[[59,26],27],[[60,26],27],[[61,26],27],[[62,26],27],[[69,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[[17,[77]],[79,[22,78]]],[[31,[80]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,71],[[81,[54]]]],[[56,82]],[[57,82]],[[58,82]],[[59,82]],[[60,82]],[[61,82]],[[62,82]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],55],[55,71],0,[83,[[31,[30]]]],[55,81],[55,81],[[55,71],81],[[56,84],31],[[57,84],31],[[58,84],31],[[59,84],31],[[60,84],31],[[61,84],31],[[62,84],31],[55],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[],[[4,[77,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"DynServerModule"],[3,"ApiEndpoint"],[3,"Global"],[3,"Vec"],[3,"Dummy"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"ModuleDatabaseTransaction"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u16"],[8,"Iterator"],[8,"Send"],[3,"DynInput"],[15,"slice"],[3,"DynVerificationCache"],[3,"DummyGen"],[3,"DummyVerificationCache"],[3,"DatabaseVersion"],[3,"Decoder"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"ServerModuleConsensusConfig"],[3,"ClientModuleConfig"],[3,"Error"],[4,"Result"],[3,"DummyClientConfig"],[6,"Result"],[3,"BTreeMap"],[6,"MigrationMap"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"Request"],[3,"ModuleKind"],[3,"DummyConfig"],[3,"OutPoint"],[3,"DynModuleConsensusItem"],[3,"PeerId"],[4,"DummyConsensusItem"],[3,"DummyInput"],[3,"DummyOutput"],[3,"DynOutput"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[3,"TypeId"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"DummyFundsKeyV0"],[3,"DummyFundsKeyV1"],[3,"DummyOutcomeKey"],[3,"DummySignatureShareKey"],[3,"DummySignatureShareStringPrefix"],[3,"DummySignatureSharePrefix"],[3,"DummySignatureKey"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"DummyFundsKeyPrefixV0"],[3,"DummyFundsPrefixV1"],[3,"DummyOutcomePrefix"],[3,"DummySignaturePrefix"],[8,"Write"],[15,"usize"],[3,"Error"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"u8"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[4,"Option"],[8,"Hasher"],[3,"DatabaseTransaction"],[8,"Serializer"]]},\
"fedimint_ln_client":{"doc":"","t":"NNNNNNNNNNNDNDNNNNNNNNNNNNNENNNRNDIDDEDEEDDEDEENEENNNRNNNEENNNNNNNNNNNNNNNMMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLMMMAKLFLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLMFMMLLFMMLLLLAKLLAMMLAMMKALLLLLLLLLLLLLKLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMIKKKKKKKKNDDDDDDDDDDENNNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDEEDEINNNNNNNDNDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMMLLLLMLLLLLLLLLLLLLLLMLLLEDNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNNNNNDDEEDNNNDNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMNNNNNEDDDDDDENDNNNNLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNNDEDDEDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLMMLLLLLLLLLLLLLFF","n":["AwaitingChange","AwaitingFunds","BlockCount","CancelOutgoing","CancelOutgoingContract","Canceled","Canceled","Canceled","Claimed","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","Created","Created","DecryptPreimage","DuplicateEncryptedPreimage","Failed","Funded","Funded","Funding","FundingFailed","InsufficientFunds","InsufficientIncomingFunding","Internal","InternalPay","InternalPayState","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","KIND","Lightning","LightningClientContext","LightningClientExt","LightningClientGen","LightningClientModule","LightningClientStateMachines","LightningCommonGen","LightningConsensusItem","LightningError","LightningGateway","LightningInput","LightningMeta","LightningModuleTypes","LightningOutput","LightningOutputOutcome","LightningPay","LnPayState","LnReceiveState","MissingPreimage","NoOffer","NotOutgoingContract","OUTGOING_LN_CONTRACT_TIMELOCK","Offer","Offer","Pay","PayError","PayType","Preimage","Receive","Receive","RefundError","RefundSuccess","Refundable","Refunded","Refunded","Success","UnexpectedError","UnexpectedError","UnknownContract","WaitingForPayment","WaitingForRefund","ZeroOutput","amount","amount","amount","api","api","as_any","as_any","as_any","as_any","as_any","as_any","as_common","await_claim_acceptance","await_lightning_payment_success","await_primary_module_output","await_receive_success","await_refund","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","contract","contract","contract_id","contracts","create_bolt11_invoice","create_exact_output","create_incoming_contract_output","create_incoming_output","create_lightning_receive_output","create_outgoing_output","create_sufficient_input","db","decoder","decoder","decoder","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fees","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","gateway_redeem_key","get_balance","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","incoming","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice_has_internal_payment_markers","invoice_routes_back_to_federation","is_permanent","ln_decoder","ln_operation","mint_channel_id","module_api","module_kind","module_kind","network_to_currency","node_pub_key","notifier","operation_id","operation_id","output_amount","output_amount","pay","pay_bolt11_invoice","provide","provide","receive","redeem_key","redeem_key","restore","route_hints","route_hints","secp","select_active_gateway","serde_routing_fees","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_active_gateway","subscribe_balance_changes","subscribe_internal_pay","subscribe_ln_pay","subscribe_ln_receive","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_until","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","witness","error","error","error","error_message","outpoint","change_outpoint","invoice","invoice","out_point","out_point","contract","gateway_signature","id","id","id","outcome","block_height","error_message","gateway_error","gateway_error","preimage","invoice","reason","timeout","LnFederationApi","fetch_consensus_block_count","fetch_contract","fetch_gateways","fetch_offer","get_incoming_contract","get_outgoing_contract","offer_exists","register_gateway","Bitcoin","FeeConsensus","GatewayFee","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigLocal","LightningConfigPrivate","LightningGenParams","LightningGenParamsConsensus","LightningGenParamsLocal","Network","Regtest","Signet","Testnet","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_input","contract_output","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_magic","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","magic","network","network","network","partial_cmp","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifiableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_permanent","is_permanent","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","FundedIncomingContract","IncomingContract","IncomingContractAccount","IncomingContractOffer","OfferId","all_zeros","amount","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","claim","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","out_point","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","OutgoingContract","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancellation_message","cancelled","claim","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","contract_id","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","gateway_key","hash","hash","into","into","into","into_request","into_request","into_request","invoice","recovery_key","refund","serialize","serialize","serialize","timelock","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_key","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","get","idx","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AmountError","AwaitingPreimageDecryption","DecryptingPreimage","DecryptingPreimageState","FailedToFundContract","Failure","FetchContractError","FundingFailed","FundingOffer","FundingOfferState","IncomingSmCommon","IncomingSmError","IncomingSmStates","IncomingStateMachine","InvalidOffer","InvalidPreimage","Preimage","PreimageState","RefundSubmitted","RefundSuccessState","TimeoutFetchingOffer","ViolatedFeePolicy","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","preimage","provide","refund_txid","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txid","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract","error_message","error_message","invoice","offer_amount","offer_hash","payment_amount","payment_hash","payment_hash","payment_hash","error","error","txid","Canceled","CreatedOutgoingLnContract","Failure","Funded","GatewayInternalError","GatewayPayError","LightningPayCommon","LightningPayCreatedOutgoingLnContract","LightningPayFunded","LightningPayRefund","LightningPayRefundable","LightningPayStateMachine","LightningPayStates","OutgoingContractError","PayInvoicePayload","Refund","Refundable","Refunded","Success","as_any","await_contract_cancellable","await_contract_timeout","await_outgoing_contract_funded","await_refund_success","block_timelock","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","contract_id","contract_id","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","error","federation_id","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","funding_txid","gateway","gateway","gateway_pay_invoice","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","operation_id","operation_id","operation_id","payload","provide","refund_txid","serialize","serialize","state","timelock","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_outgoing_contract_execution","transition_outgoing_contract_funded","transition_refund_success","transitions","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error_code","error_message","Canceled","ClaimRejected","ConfirmedInvoice","Funded","InvalidPreimage","LightningReceiveConfirmedInvoice","LightningReceiveError","LightningReceiveFunded","LightningReceiveStateMachine","LightningReceiveStates","LightningReceiveSubmittedOffer","Rejected","SubmittedOffer","Success","Timeout","as_any","await_claim_success","await_incoming_contract_account","await_invoice_confirmation","await_payment_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim_incoming_contract","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","keypair","offer_txid","operation_id","operation_id","operation_id","outpoint","payment_keypair","provide","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_claim_success","transition_confirmed_invoice","transition_funded","transition_timeout","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cltv_expiry_delta","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","htlc_maximum_msat","htlc_minimum_msat","into","into","into_request","into_request","proportional_millionths","serialize","serialize","short_channel_id","src_node_id","to_bytes","to_bytes","to_ldk_route_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize"],"q":[[0,"fedimint_ln_client"],[582,"fedimint_ln_client::InternalPayState"],[587,"fedimint_ln_client::LightningMeta"],[592,"fedimint_ln_client::LightningOutput"],[594,"fedimint_ln_client::LightningOutputOutcome"],[598,"fedimint_ln_client::LnPayState"],[603,"fedimint_ln_client::LnReceiveState"],[606,"fedimint_ln_client::api"],[615,"fedimint_ln_client::config"],[892,"fedimint_ln_client::contracts"],[1186,"fedimint_ln_client::contracts::incoming"],[1365,"fedimint_ln_client::contracts::outgoing"],[1458,"fedimint_ln_client::db"],[1536,"fedimint_ln_client::incoming"],[1778,"fedimint_ln_client::incoming::IncomingSmError"],[1788,"fedimint_ln_client::incoming::IncomingSmStates"],[1791,"fedimint_ln_client::pay"],[2055,"fedimint_ln_client::pay::GatewayPayError"],[2057,"fedimint_ln_client::receive"],[2237,"fedimint_ln_client::route_hints"],[2299,"fedimint_ln_client::serde_routing_fees"]],"d":["","","","Allow early refund of outgoing contract","","","","","","Fund contract","","","","","","","","","","","","","","","","","","The high-level state of an pay operation internal to the …","","","","","","","","","","","","","","Information a gateway registers with a fed","","","","Represents an output of the Lightning module.","","","The high-level state of a pay operation over lightning, …","The high-level state of a reissue operation started with …","","","","Number of blocks until outgoing lightning contracts times …","Create incoming contract offer","","","","","","","","","","","","","","","","","","","","While for now we only support spending the entire contract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Receive over LN with a new invoice","","","Create an output that funds an incoming contract within …","","Create an output that incentivizes a Lightning gateway to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateway configured routing fees","Gateways actively registered with the fed","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Key used to pay the gateway","","","","","","","","","","Incoming State Machine","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channel identifier assigned to the mint by the gateway. …","","","","","","","","","","","","Pays a LN invoice with our available funds","","","","","","","Hack to get a route hint that implements <code>serde</code> traits.","Route hints to reach the LN node of the gateway.","","The set active gateway, or a random one if none has been …","","","","","","","","","","","","","","","Sets the gateway to be used by all other operations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limits the validity of the announcement to allow updates","","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","","","","","","","","","","","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","","","","Classic Bitcoin","","Gateway routing fees","","","","","","","","","The cryptocurrency to act on","Bitcoin’s regtest","Bitcoin’s signet","Bitcoin’s testnet","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for LN transactions","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a <code>Network</code> from the magic bytes.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Return the network magic bytes, which should be encoded …","","","","","","","","","","","","","","","","","The number of decryption shares required","","The threshold public keys for encrypting the LN preimage","Our secret key for decrypting preimages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","","","","","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Invoice containing metadata on how to obtain the preimage","","","","","","Block height at which the money will be spendable by the …","","","","","","","","","","","","","","","","Public key of the user that can claim the money back after …","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes a transaction between two users","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that requests the lightning gateway to pay …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that waits on the receipt of a Lightning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of hops along a payment path terminating with a …","","Flat routing fee in millisatoshis","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","The maximum value in msat available for routing with a …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Liquidity-based routing fee in millionths of a routed …","","","The <code>short_channel_id</code> of this channel","The <code>node_id</code> of the non-target end of the route","","","","","","","","","","","","","","",""],"i":[22,23,38,30,34,22,23,9,23,30,34,0,68,0,22,23,38,68,9,22,23,21,21,68,68,20,26,0,68,68,68,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,68,68,68,0,30,34,24,0,0,21,24,26,21,21,9,22,9,22,21,22,68,23,22,68,29,32,33,0,36,3,26,29,30,34,38,25,3,3,3,3,3,3,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,3,20,21,22,23,24,25,26,26,29,29,30,30,32,33,34,34,36,38,38,39,20,21,22,23,24,25,26,29,30,32,33,34,36,38,39,0,26,29,30,32,33,34,36,38,26,29,30,32,33,34,36,38,26,29,30,32,33,34,36,38,3,3,32,33,29,0,182,3,0,3,3,3,3,0,25,25,3,75,20,21,22,23,24,9,29,30,32,33,34,36,38,29,30,34,38,20,21,22,23,26,29,30,32,33,34,36,38,68,20,20,21,21,22,22,23,23,26,26,29,29,30,30,32,32,33,33,34,34,36,36,38,38,68,68,26,29,30,34,38,20,21,22,23,24,9,29,30,32,33,34,36,38,36,182,20,21,22,23,24,25,3,9,9,26,29,29,30,30,32,33,34,34,36,38,38,75,39,68,68,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,26,29,30,32,33,34,36,38,20,21,22,23,24,25,26,29,30,32,33,34,36,38,39,36,36,3,3,29,30,32,33,34,36,38,0,25,25,3,3,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,26,29,30,34,38,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,0,0,34,39,0,36,3,25,25,0,36,3,26,26,3,3,0,182,9,68,0,3,39,3,0,36,3,182,0,20,21,22,23,24,9,29,30,32,33,34,36,38,182,3,182,182,182,25,25,3,3,26,29,30,32,33,34,36,38,25,20,21,22,23,24,25,26,29,30,32,33,34,36,38,39,9,29,30,34,38,68,26,26,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,36,181,20,21,22,23,24,25,3,9,26,29,30,32,33,34,36,38,75,39,68,3,29,183,184,185,184,183,186,186,187,186,187,188,188,189,190,191,189,192,193,192,194,195,196,197,196,0,198,198,198,198,198,198,198,198,64,0,0,0,0,0,0,0,0,0,0,0,64,64,64,87,103,105,101,102,103,104,105,106,107,87,109,110,64,101,102,103,104,105,106,107,87,109,110,64,101,102,103,104,105,106,107,87,87,109,110,64,101,102,103,104,105,106,107,87,109,110,64,64,101,104,105,106,87,109,64,105,106,87,109,64,105,106,87,109,64,109,109,109,101,102,103,104,105,106,107,87,109,64,87,87,109,64,87,87,109,109,64,64,87,101,102,103,104,105,106,107,87,109,64,106,87,101,102,103,104,105,106,107,87,87,109,110,64,64,101,102,103,104,105,106,107,87,109,110,64,105,106,87,109,64,64,101,104,101,102,103,104,105,106,107,87,109,110,64,110,64,87,109,64,101,102,103,104,105,106,107,87,109,110,64,87,101,102,103,104,105,106,107,87,109,110,64,106,101,104,64,102,106,87,64,104,101,101,102,103,104,105,106,107,87,109,64,106,87,106,107,105,106,87,109,64,101,102,103,104,105,106,107,87,109,110,64,101,104,87,64,101,102,103,104,105,106,107,87,109,110,64,101,102,103,104,105,106,107,87,109,110,64,101,102,103,104,105,106,107,87,109,110,64,106,101,102,103,104,105,106,107,87,109,110,64,0,0,0,0,0,0,0,119,120,121,124,119,120,121,0,124,0,0,124,100,100,100,100,100,100,100,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,100,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,100,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,199,119,120,100,100,119,120,121,122,123,124,125,126,100,100,100,100,119,120,121,122,123,124,125,126,100,100,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,100,119,120,121,122,123,124,125,126,100,100,100,119,120,121,122,123,124,125,126,100,100,119,120,121,122,123,124,125,126,100,100,119,120,121,122,123,124,125,126,100,100,100,100,119,120,121,122,123,124,125,126,100,100,100,100,119,120,121,122,123,124,125,126,0,100,100,119,120,121,122,123,124,125,126,100,100,119,120,121,122,123,124,125,126,121,124,125,0,100,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,119,100,119,100,119,120,121,122,123,124,125,126,123,100,100,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,100,119,120,121,122,123,124,125,126,100,0,0,0,0,0,140,142,141,140,140,140,140,140,142,143,144,140,140,141,142,143,144,140,141,140,141,142,143,144,140,141,142,143,144,140,141,140,142,143,144,140,141,142,143,144,140,141,142,143,144,140,141,144,141,143,143,140,142,143,144,140,141,140,140,142,143,140,142,143,144,140,141,142,142,143,143,144,144,140,140,141,141,142,143,144,140,141,142,142,143,144,140,140,140,141,142,143,144,140,140,141,140,142,143,144,140,141,140,140,140,142,143,144,140,141,140,140,140,143,142,143,144,140,142,143,142,140,142,143,144,140,141,140,142,143,144,140,141,144,140,142,143,144,140,141,142,143,144,140,141,140,142,143,144,140,141,140,140,142,143,144,140,141,142,143,144,140,141,142,143,144,140,141,142,143,144,140,141,140,0,0,0,146,145,147,146,145,147,146,145,145,146,145,147,146,145,147,146,145,147,146,145,147,146,145,147,146,146,147,145,145,147,146,145,147,146,145,145,147,147,146,146,145,147,146,145,147,146,145,147,146,145,147,146,145,147,146,145,145,145,145,147,146,145,147,146,145,147,146,145,147,146,145,145,147,146,145,147,146,145,147,146,145,147,146,145,147,146,145,145,147,146,0,0,148,0,0,149,148,149,150,151,148,149,150,151,148,149,148,149,150,151,150,151,150,151,150,148,150,151,148,149,150,151,150,150,151,148,149,149,149,148,149,150,151,149,148,149,150,151,148,149,149,149,149,149,150,149,150,150,151,151,148,149,148,149,150,151,148,149,150,151,148,149,150,151,148,149,150,151,155,0,152,0,155,152,155,152,152,0,0,0,0,0,155,155,152,0,152,0,155,155,154,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,152,153,154,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,154,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,153,155,152,153,154,155,156,157,158,159,160,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,154,155,152,153,154,155,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,154,154,153,159,155,160,155,154,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,155,154,154,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,156,157,158,152,153,154,155,156,157,158,159,160,152,153,154,155,156,157,158,159,160,200,201,202,203,204,205,204,205,206,201,207,208,207,164,164,164,164,161,0,0,0,0,0,0,0,0,161,0,164,164,164,164,165,168,168,166,169,168,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,164,162,165,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,165,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,162,166,168,170,161,170,164,162,165,166,167,161,168,169,170,164,164,162,162,165,165,166,166,167,167,161,161,168,168,169,169,170,170,165,161,170,168,162,170,164,162,165,166,167,161,161,168,169,170,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,166,166,167,167,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,170,165,165,162,167,161,169,161,170,165,167,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,161,167,166,169,165,165,166,167,168,169,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,168,164,162,165,166,167,161,168,169,170,164,162,165,166,167,161,168,169,170,209,209,173,6,173,173,6,0,0,0,0,0,0,6,173,173,6,174,177,176,175,176,173,174,175,6,176,177,173,174,175,6,176,177,176,173,174,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,6,173,174,175,6,176,177,173,173,174,174,175,175,6,6,176,176,177,177,174,6,173,174,175,6,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,175,176,176,175,174,174,174,177,175,6,6,174,173,174,175,6,176,177,173,174,175,6,176,177,6,177,175,176,176,174,174,175,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,173,174,175,6,176,177,0,0,178,178,62,178,62,178,62,178,62,178,178,62,178,62,178,62,178,62,178,62,178,178,62,62,178,62,178,62,178,62,178,62,178,62,178,62,178,178,178,62,178,62,178,178,62,178,178,178,62,62,178,62,178,62,178,62,178,62,178,62,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[3,4],[[7,[5,6]]]],[[3,4],[[7,[8,9]]]],[[4,10],[[14,[[13,[11,12]]]]]],[[3,4],[[7,[6]]]],[[3,4],[[7,[5,9]]]],[[[16,[15]],[18,[17]],19,15],[[14,[[13,[11,12]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[15,27],[15,28],[29,29],[30,30],[15,31],[32,32],[33,33],[34,34],[15,35],[36,36],[15,37],[38,38],[39,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[40,41],[[7,[26,42]]]],[[40,[45,[43,44]]],[[7,[29,42]]]],[[40,[45,[43,44]]],[[7,[30,42]]]],[[40,[45,[43,44]]],[[7,[32,42]]]],[[40,[45,[43,44]]],[[7,[33,42]]]],[[40,[45,[43,44]]],[[7,[34,42]]]],[[40,[45,[43,44]]],[[7,[36,42]]]],[[40,[45,[43,44]]],[[7,[38,42]]]],[[26,46],[[7,[47,48]]]],[[29,46],[[7,[47,48]]]],[[30,46],[[7,[47,48]]]],[[32,46],[[7,[47,48]]]],[[33,46],[[7,[47,48]]]],[[34,46],[[7,[47,48]]]],[[36,46],[[7,[47,48]]]],[[38,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[3],[15,49],0,0,0,0,[[50,8,[52,[51]]],[[14,[[13,[11]]]]]],[[15,53,4,50],[[14,[[13,[11,12]]]]]],[[54,55,50,56],11],[[3,4,57],58],[[3,50,8,[0,[59,60]],[52,[51]],61,51,[63,[62]],64],58],[[3,4,54,57,36,65,[0,[59,60]]],58],[[15,53,4,50],[[14,[[13,[11,12]]]]]],0,[[],43],[[],43],[[],43],[[],43],[66,[[7,[20]]]],[66,[[7,[21]]]],[66,[[7,[22]]]],[66,[[7,[23]]]],[66,[[7,[24]]]],[66,[[7,[9]]]],[66,[[7,[29]]]],[66,[[7,[30]]]],[66,[[7,[32]]]],[66,[[7,[33]]]],[66,[[7,[34]]]],[66,[[7,[36]]]],[66,[[7,[38]]]],[[],51],[[],51],[[],51],[[],51],[[20,20],67],[[21,21],67],[[22,22],67],[[23,23],67],[[26,26],67],[[29,29],67],[[30,30],67],[[32,32],67],[[33,33],67],[[34,34],67],[[36,36],67],[[38,38],67],[[68,68],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[27,67],[28,67],[31,67],[35,67],[37,67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],0,[[],[[14,[[13,[11]]]]]],[[20,72],73],[[21,72],73],[[22,72],73],[[23,72],73],[[24,72],73],[[25,72],73],[[3,72],73],[[9,72],73],[[9,72],73],[[26,72],73],[[29,72],[[7,[74]]]],[[29,72],[[7,[74]]]],[[30,72],[[7,[74]]]],[[30,72],[[7,[74]]]],[[32,72],[[7,[74]]]],[[33,72],[[7,[74]]]],[[34,72],[[7,[74]]]],[[34,72],[[7,[74]]]],[[36,72],[[7,[74]]]],[[38,72],[[7,[74]]]],[[38,72],[[7,[74]]]],[[75,72],[[7,[74]]]],[[39,72],[[7,[74]]]],[[68,72],[[7,[74]]]],[[68,72],[[7,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[15,53],[[14,[[13,[11,12]]]]]],[[79,[77,[80]]],[[14,[[13,[11,12]]]]]],[[29,81]],[[30,81]],[[32,81]],[[33,81]],[[34,81]],[[36,81]],[[38,81]],0,[[65,82,83,15,84,85,[86,[17]],19],[[14,[[13,[11,12]]]]]],[[25,65,87,83,84,85,[88,[17]],19,54],[[14,[[13,[11]]]]]],[3,89],[28,89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,90]],[[29,15]],[[30,15]],[[34,15]],[[38,15]],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[57,67],[[57,[63,[36]]],67],[34,67],0,[[79,4],11],0,0,[[],92],[[],92],[64,93],0,0,[[],4],[26,4],[3,89],[31,89],0,[57,[[14,[[13,[11]]]]]],[94],[94],0,0,0,[[53,15,[18,[17]],19,[52,[[77,[76]]]]],[[14,[[13,[11,12]]]]]],0,0,0,[[],[[14,[[13,[11]]]]]],0,[[20,95],7],[[21,95],7],[[22,95],7],[[23,95],7],[[24,95],7],[[9,95],7],[[29,95],7],[[30,95],7],[[32,95],7],[[33,95],7],[[34,95],7],[[36,95],7],[[38,95],7],[61,[[14,[[13,[11]]]]]],[[],[[14,[[13,[11,12]]]]]],[4,[[14,[[13,[11]]]]]],[4,[[14,[[13,[11]]]]]],[4,[[14,[[13,[11]]]]]],[[],96],[25,96],[[],67],[[],67],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[49,[[63,[[98,[27]],12]]]],[[26,17],[[63,[[98,[26]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[15]],15,[18,[17]]],[[14,[[13,[11,12]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[14,[[13,[11,12]]]]]],[100,[[14,[[13,[11,12]]]]]],[[],[[14,[[13,[11,12]]]]]],[55,[[14,[[13,[11,12]]]]]],[100,[[14,[[13,[11,12]]]]]],[100,[[14,[[13,[11,12]]]]]],[55,[[14,[[13,[11,12]]]]]],[36,[[14,[[13,[11,12]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[15,108],[87,87],[109,109],[110,110],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,64],111],0,0,[[40,[45,[43,44]]],[[7,[105,42]]]],[[40,[45,[43,44]]],[[7,[106,42]]]],[[40,[45,[43,44]]],[[7,[87,42]]]],[[40,[45,[43,44]]],[[7,[109,42]]]],[[40,[45,[43,44]]],[[7,[64,42]]]],[[105,46],[[7,[47,48]]]],[[106,46],[[7,[47,48]]]],[[87,46],[[7,[47,48]]]],[[109,46],[[7,[47,48]]]],[[64,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],0,0,[[],109],[66,[[7,[101]]]],[66,[[7,[102]]]],[66,[[7,[103]]]],[66,[[7,[104]]]],[66,[[7,[105]]]],[66,[[7,[106]]]],[66,[[7,[107]]]],[66,[[7,[87]]]],[66,[[7,[109]]]],[66,[[7,[64]]]],[[],51],[[87,87],67],[[109,109],67],[[64,64],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[108,67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],0,0,[[101,72],[[7,[74]]]],[[102,72],[[7,[74]]]],[[103,72],[[7,[74]]]],[[104,72],[[7,[74]]]],[[105,72],[[7,[74]]]],[[106,72],[[7,[74]]]],[[107,72],[[7,[74]]]],[[87,72],[[7,[74]]]],[[87,72],[[7,[74]]]],[[109,72],[[7,[74]]]],[[110,72],[[7,[74]]]],[[64,72],[[7,[74]]]],[[64,72],[[7,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[112,[[52,[64]]]],[[],101],[[],104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,[[7,[110]]]],[113,[[7,[64]]]],[[87,81]],[[109,81]],[[64,81]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[87,15]],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[106,92],0,0,[64,112],0,0,0,[[64,64],[[52,[111]]]],0,[114,101],[[101,95],7],[[102,95],7],[[103,95],7],[[104,95],7],[[105,95],7],[[106,95],7],[[107,95],7],[[87,95],7],[[109,95],7],[[64,95],7],[106,47],0,0,0,[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101],[104],[[],8],[[],8],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[106,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],100],[[],[[117,[116]]]],[100,55],[100],[100,[[77,[76]]]],[[],47],[100,[[77,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[[63,[118,12]]]]]],[100,100],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[100,100],111],[[40,[45,[43,44]]],[[7,[100,42]]]],[[40,[45,[43,44]]],[[7,[119,42]]]],[[40,[45,[43,44]]],[[7,[120,42]]]],[[40,[45,[43,44]]],[[7,[121,42]]]],[[40,[45,[43,44]]],[[7,[122,42]]]],[[40,[45,[43,44]]],[[7,[123,42]]]],[[40,[45,[43,44]]],[[7,[124,42]]]],[[40,[45,[43,44]]],[[7,[125,42]]]],[[40,[45,[43,44]]],[[7,[126,42]]]],[[100,46],[[7,[47,48]]]],[[119,46],[[7,[47,48]]]],[[120,46],[[7,[47,48]]]],[[121,46],[[7,[47,48]]]],[[122,46],[[7,[47,48]]]],[[123,46],[[7,[47,48]]]],[[124,46],[[7,[47,48]]]],[[125,46],[[7,[47,48]]]],[[126,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[[],100],[119,100],[120,100],[100],[66,[[7,[100]]]],[66,[[7,[119]]]],[66,[[7,[120]]]],[66,[[7,[121]]]],[66,[[7,[122]]]],[66,[[7,[123]]]],[66,[[7,[124]]]],[66,[[7,[125]]]],[66,[[7,[126]]]],[[],[[128,[127]]]],[[],[[128,[127]]]],[[]],[[100,100],67],[[119,119],67],[[120,120],67],[[121,121],67],[[122,122],67],[[123,123],67],[[124,124],67],[[125,125],67],[[126,126],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[[100,72],[[7,[74]]]],[[100,72],[[7,[74]]]],[[100,72],[[7,[74]]]],[[119,72],[[7,[74]]]],[[120,72],[[7,[74]]]],[[121,72],[[7,[74]]]],[[122,72],[[7,[74]]]],[[123,72],[[7,[74]]]],[[124,72],[[7,[74]]]],[[125,72],[[7,[74]]]],[[126,72],[[7,[74]]]],[[]],[55,100],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[129,130,131]]],[[7,[132]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[],100],[55,100],[[],100],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[76]]],[[7,[100,133]]]],[[[77,[76]]],[[7,[100,133]]]],[113,[[7,[100]]]],[[100,81]],[[119,81]],[[120,81]],[[121,81]],[[122,81]],[[123,81]],[[124,81]],[[125,81]],[[126,81]],0,[[100,[134,[[77,[76]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[121,67],[124,67],[[123,135],125],0,[[100,100],[[52,[111]]]],[[100,95],7],[[119,95],7],[[120,95],7],[[121,95],7],[[122,95],7],[[123,95],7],[[124,95],7],[[125,95],7],[[126,95],7],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[119,10],120],[[],8],[119,121],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,[[7,[136,137]]]],[[],8],[[],[[7,[[117,[116]],138]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[139,7],0,0,0,0,0,[[],140],0,0,[[],[[117,[116]]]],[140,55],[140],[140,[[77,[76]]]],[[],47],[[]],[[]],[[]],[140,[[77,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[[63,[118,12]]]]]],[141,29],[142,142],[143,143],[144,144],[140,140],[141,141],[[]],[[]],[[]],[[]],[[]],[[140,140],111],[[40,[45,[43,44]]],[[7,[142,42]]]],[[40,[45,[43,44]]],[[7,[143,42]]]],[[40,[45,[43,44]]],[[7,[144,42]]]],[[40,[45,[43,44]]],[[7,[140,42]]]],[[40,[45,[43,44]]],[[7,[141,42]]]],[[142,46],[[7,[47,48]]]],[[143,46],[[7,[47,48]]]],[[144,46],[[7,[47,48]]]],[[140,46],[[7,[47,48]]]],[[141,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],0,0,[143,100],0,[140],[66,[[7,[142]]]],[66,[[7,[143]]]],[66,[[7,[144]]]],[66,[[7,[140]]]],[66,[[7,[141]]]],[[],[[128,[127]]]],[[],[[128,[127]]]],0,0,[[]],[[142,142],67],[[143,143],67],[[144,144],67],[[140,140],67],[[141,141],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],0,[[142,72],[[7,[74]]]],[[143,72],[[7,[74]]]],[[144,72],[[7,[74]]]],[[140,72],[[7,[74]]]],[[140,72],[[7,[74]]]],[[140,72],[[7,[74]]]],[[141,72],[[7,[74]]]],[[]],[[]],[[]],[55,140],[[]],[[]],[[[0,[129,130,131]]],[[7,[132]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[],140],[55,140],[[],140],[[]],[[]],[[]],[[]],[[]],[[[77,[76]]],[[7,[140,133]]]],[[[77,[76]]],[[7,[140,133]]]],[113,[[7,[140]]]],0,[[142,81]],[[143,81]],[[144,81]],[[140,81]],0,0,[142,140],[[140,[134,[[77,[76]]]]]],[[]],[[]],[[]],[[]],[[]],[140],[[],91],[[],91],[[],91],[[],91],[[],91],0,[[140,140],[[52,[111]]]],[[142,95],7],[[143,95],7],[[144,95],7],[[140,95],7],[[141,95],7],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],8],[[]],[[]],[[]],[[]],[[]],[[],8],[[],[[7,[[117,[116]],138]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[139,7],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[145,55],0,[[146,123],29],[145,145],[147,147],[146,146],[[]],[[]],[[]],[[40,[45,[43,44]]],[[7,[145,42]]]],[[40,[45,[43,44]]],[[7,[147,42]]]],[[40,[45,[43,44]]],[[7,[146,42]]]],[[145,46],[[7,[47,48]]]],[[147,46],[[7,[47,48]]]],[[146,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],0,0,[145,100],[66,[[7,[145]]]],[66,[[7,[147]]]],[66,[[7,[146]]]],[[145,145],67],[[147,147],67],[[146,146],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[[145,72],[[7,[74]]]],[[147,72],[[7,[74]]]],[[146,72],[[7,[74]]]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[]],0,[[145,81]],0,[[]],[[]],[[]],[[],91],[[],91],[[],91],0,0,[146,29],[[145,95],7],[[147,95],7],[[146,95],7],0,[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],0,[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[148,148],[149,149],[[]],[[]],[[40,41],[[7,[150,42]]]],[[40,41],[[7,[151,42]]]],[[150,46],[[7,[47,48]]]],[[151,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[69,[[7,[70,71]]]],[[148,72],73],[[150,72],73],[[151,72],73],[[]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[149,47],[[52,[148]]]],0,[[]],[[]],[[]],[[]],[[]],[[],91],[[],91],[[],91],[[],91],[[],149],[149,47],0,[149,52],[149,52],[[149,47],52],[[150,95],7],[149],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[152,152],[153,153],[154,154],[15,27],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[40,[45,[43,44]]],[[7,[152,42]]]],[[40,[45,[43,44]]],[[7,[153,42]]]],[[40,[45,[43,44]]],[[7,[154,42]]]],[[40,[45,[43,44]]],[[7,[155,42]]]],[[40,[45,[43,44]]],[[7,[156,42]]]],[[40,[45,[43,44]]],[[7,[157,42]]]],[[40,[45,[43,44]]],[[7,[158,42]]]],[[40,[45,[43,44]]],[[7,[159,42]]]],[[40,[45,[43,44]]],[[7,[160,42]]]],[[152,46],[[7,[47,48]]]],[[153,46],[[7,[47,48]]]],[[154,46],[[7,[47,48]]]],[[155,46],[[7,[47,48]]]],[[156,46],[[7,[47,48]]]],[[157,46],[[7,[47,48]]]],[[158,46],[[7,[47,48]]]],[[159,46],[[7,[47,48]]]],[[160,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],0,[66,[[7,[155]]]],[[152,152],67],[[153,153],67],[[154,154],67],[[155,155],67],[[156,156],67],[[157,157],67],[[158,158],67],[[159,159],67],[[160,160],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[27,67],[69,[[7,[70,71]]]],[[152,72],[[7,[74]]]],[[153,72],[[7,[74]]]],[[154,72],[[7,[74]]]],[[155,72],[[7,[74]]]],[[155,72],[[7,[74]]]],[[156,72],[[7,[74]]]],[[157,72],[[7,[74]]]],[[158,72],[[7,[74]]]],[[159,72],[[7,[74]]]],[[160,72],[[7,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[154,4],[[],4],0,0,[94],0,[[155,95],7],0,[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[154,[[63,[[98,[154]],12]]]],[49,[[63,[[98,[27]],12]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[100,17]],[[17,112]],[[43,17,5,100],[[7,[112,161]]]],[[162,17,5],[[7,[163]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[164,164],[162,162],[165,165],[15,27],[166,166],[167,167],[161,161],[168,168],[169,169],[170,170],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[40,41],[[7,[164,42]]]],[[40,41],[[7,[162,42]]]],[[40,41],[[7,[165,42]]]],[[40,41],[[7,[166,42]]]],[[40,41],[[7,[167,42]]]],[[40,41],[[7,[161,42]]]],[[40,41],[[7,[168,42]]]],[[40,41],[[7,[169,42]]]],[[40,41],[[7,[170,42]]]],[[164,46],[[7,[47,48]]]],[[162,46],[[7,[47,48]]]],[[165,46],[[7,[47,48]]]],[[166,46],[[7,[47,48]]]],[[167,46],[[7,[47,48]]]],[[161,46],[[7,[47,48]]]],[[168,46],[[7,[47,48]]]],[[169,46],[[7,[47,48]]]],[[170,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],0,0,0,0,[66,[[7,[161]]]],[66,[[7,[170]]]],[[164,164],67],[[162,162],67],[[165,165],67],[[166,166],67],[[167,167],67],[[161,161],67],[[168,168],67],[[169,169],67],[[170,170],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[27,67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],0,0,0,[[164,72],73],[[162,72],73],[[165,72],73],[[166,72],73],[[167,72],73],[[161,72],73],[[161,72],73],[[168,72],73],[[169,72],73],[[170,72],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[36,170],[[7,[8,161]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],[[65,100],170],[165,4],[[],4],0,0,[94],0,[[161,95],7],[[170,95],7],0,0,[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[[7,[8,161]],165,100,112],165],[[[7,[112,161]],165,162,100,36],165],[[[7,[163]],165,5],165],[165,[[63,[[98,[165]]]]]],[49,[[63,[[98,[27]],12]]]],[[166,162,39,17],[[63,[[98,[165]]]]]],[167,[[63,[[98,[165]]]]]],[[168,162,17],[[63,[[98,[165]]]]]],[[169,162,17],[[63,[[98,[165]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[165,162,171,17],165],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[4,17,5],[[7,[163]]]],[[57,17],[[7,[141,6]]]],[[17,4,5],[[7,[163]]]],[172],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[171,141,56,17],10],[173,173],[174,174],[15,27],[175,175],[6,6],[176,176],[177,177],[[]],[[]],[[]],[[]],[[]],[[]],[[40,41],[[7,[173,42]]]],[[40,41],[[7,[174,42]]]],[[40,41],[[7,[175,42]]]],[[40,41],[[7,[6,42]]]],[[40,41],[[7,[176,42]]]],[[40,41],[[7,[177,42]]]],[[173,46],[[7,[47,48]]]],[[174,46],[[7,[47,48]]]],[[175,46],[[7,[47,48]]]],[[6,46],[[7,[47,48]]]],[[176,46],[[7,[47,48]]]],[[177,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[66,[[7,[6]]]],[[173,173],67],[[174,174],67],[[175,175],67],[[6,6],67],[[176,176],67],[[177,177],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[27,67],[69,[[7,[70,71]]]],[[173,72],73],[[174,72],73],[[175,72],73],[[6,72],73],[[6,72],73],[[176,72],73],[[177,72],73],[[]],[[]],[[]],[[]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],91],[[],91],[[],91],[[],91],[[],91],[[],91],0,0,0,0,[[],4],[174,4],0,0,0,[94],[[6,95],7],0,[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[[7,[163]],174,5],174],[[[7,[163]],174,57,56],174],[[174,56,[7,[141,6]],171,17],174],[174,174],[174,[[63,[[98,[174]]]]]],[49,[[63,[[98,[27]],12]]]],[[175,4,17],[[63,[[98,[174]]]]]],[[176,17],[[63,[[98,[174]]]]]],[[177,4,17],[[63,[[98,[174]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[],99],[[],99],[[],99],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[178,178],[62,62],[[]],[[]],0,[[40,[45,[43,44]]],[[7,[178,42]]]],[[40,[45,[43,44]]],[[7,[62,42]]]],[[178,46],[[7,[47,48]]]],[[62,46],[[7,[47,48]]]],[46,[[7,[47,48]]]],[46,[[7,[47,48]]]],[66,[[7,[178]]]],[66,[[7,[62]]]],[[178,178],67],[[62,62],67],[[],67],[[],67],[[],67],[[],67],[69,[[7,[70,71]]]],[69,[[7,[70,71]]]],[[178,72],[[7,[74]]]],[[62,72],[[7,[74]]]],[[]],[[]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[[77,[76]],[45,[43,44]]],[[7,[78]]]],[[]],[[]],[[178,81]],[[62,81]],0,0,[[]],[[]],[[],91],[[],91],0,[[178,95],7],[[62,95],7],0,0,[[],[[63,[76,12]]]],[[],[[63,[76,12]]]],[62,179],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],99],[[],99],[[]],[[]],[66,[[7,[180]]]],[[180,95],7]],"c":[],"p":[[8,"Any"],[8,"IDynCommonModuleInit"],[3,"LightningClientModule"],[3,"OperationId"],[3,"TransactionId"],[4,"LightningReceiveError"],[4,"Result"],[3,"String"],[4,"PayError"],[3,"OutPoint"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"DynGlobalClientContext"],[3,"Executor"],[3,"DynGlobalApi"],[4,"PayType"],[4,"InternalPayState"],[4,"LnPayState"],[4,"LnReceiveState"],[4,"LightningMeta"],[3,"LightningClientGen"],[4,"LightningClientStateMachines"],[3,"DynState"],[3,"DynInput"],[3,"LightningInput"],[4,"LightningOutput"],[3,"DynOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[4,"LightningOutputOutcome"],[3,"DynOutputOutcome"],[3,"LightningGateway"],[3,"DynModuleConsensusItem"],[4,"LightningConsensusItem"],[3,"LightningClientContext"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DynContext"],[3,"Amount"],[15,"u64"],[4,"Option"],[3,"DatabaseTransaction"],[3,"DynModuleApi"],[3,"Hash"],[3,"KeyPair"],[3,"Invoice"],[6,"Result"],[8,"RngCore"],[8,"CryptoRng"],[3,"PublicKey"],[3,"RouteHint"],[3,"Vec"],[4,"Network"],[3,"FederationId"],[8,"Deserializer"],[15,"bool"],[4,"LightningError"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"LightningCommonGen"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[3,"Client"],[3,"OsString"],[8,"Hasher"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"Notifier"],[3,"LightningClientConfig"],[3,"ModuleNotifier"],[3,"TransactionItemAmount"],[6,"ModuleInstanceId"],[3,"Request"],[3,"ModuleKind"],[4,"Currency"],[3,"Demand"],[8,"Serializer"],[3,"MultiApiVersion"],[3,"DynCommonModuleInit"],[3,"StateTransition"],[3,"TypeId"],[3,"ContractId"],[3,"LightningGenParams"],[3,"LightningGenParamsConsensus"],[3,"LightningGenParamsLocal"],[3,"LightningConfig"],[3,"LightningConfigLocal"],[3,"LightningConfigConsensus"],[3,"LightningConfigPrivate"],[3,"DynClientConfig"],[3,"FeeConsensus"],[3,"GatewayFee"],[4,"Ordering"],[15,"u32"],[15,"str"],[3,"BitcoinRpcConfig"],[3,"ModuleConsensusVersion"],[8,"BitOrder"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[15,"char"],[8,"FromIterator"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[4,"Error"],[8,"SliceIndex"],[3,"PublicKey"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[8,"WriteBase32"],[3,"OfferId"],[3,"IncomingContractAccount"],[3,"IncomingContractOffer"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[3,"OutgoingContractAccount"],[3,"OutgoingContractData"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[4,"IncomingSmStates"],[3,"IncomingSmCommon"],[3,"IncomingStateMachine"],[4,"IncomingSmError"],[3,"FundingOfferState"],[3,"DecryptingPreimageState"],[3,"AwaitingPreimageDecryption"],[3,"PreimageState"],[3,"RefundSuccessState"],[4,"GatewayPayError"],[3,"LightningPayCommon"],[4,"TxSubmissionError"],[4,"LightningPayStates"],[3,"LightningPayStateMachine"],[3,"LightningPayCreatedOutgoingLnContract"],[3,"LightningPayFunded"],[3,"LightningPayRefundable"],[3,"LightningPayRefund"],[3,"PayInvoicePayload"],[3,"ClientSMDatabaseTransaction"],[3,"Duration"],[4,"LightningReceiveStates"],[3,"LightningReceiveStateMachine"],[3,"LightningReceiveSubmittedOffer"],[3,"LightningReceiveConfirmedInvoice"],[3,"LightningReceiveFunded"],[3,"RouteHintHop"],[3,"RouteHint"],[3,"RoutingFees"],[3,"LightningModuleTypes"],[8,"LightningClientExt"],[13,"RefundSuccess"],[13,"RefundError"],[13,"FundingFailed"],[13,"Pay"],[13,"Receive"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[13,"CancelOutgoingContract"],[13,"WaitingForRefund"],[13,"UnexpectedError"],[13,"Refunded"],[13,"Success"],[13,"WaitingForPayment"],[13,"Canceled"],[8,"LnFederationApi"],[8,"IdentifiableContract"],[13,"InvalidPreimage"],[13,"FetchContractError"],[13,"FailedToFundContract"],[13,"AmountError"],[13,"ViolatedFeePolicy"],[13,"InvalidOffer"],[13,"TimeoutFetchingOffer"],[13,"RefundSubmitted"],[13,"FundingFailed"],[13,"GatewayInternalError"]]},\
"fedimint_ln_common":{"doc":"Lightning Module","t":"NRNNNNDNDNNNNNNNRDDEEDDDEENNNNNNNMMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLMMMAFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMFMMLMAMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMMMMMMIKKKKKKKKNDDDDDDDDDDENNNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDEEDEINNNNNNNDNDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDMLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMMLLLLMLLLLLLLLLLLLLLLMLLLNDDDNDDNDDNDDEDNDDNDDNDDNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNNNNNDDEEDNNNDNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMDDMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLMMLLLLLLLLLLLLLFF","n":["BlockCount","CONSENSUS_VERSION","CancelOutgoing","CancelOutgoingContract","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","DecryptPreimage","DuplicateEncryptedPreimage","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","KIND","LightningClientContext","LightningCommonGen","LightningConsensusItem","LightningError","LightningGateway","LightningInput","LightningModuleTypes","LightningOutput","LightningOutputOutcome","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","contracts","create_incoming_contract_output","db","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fees","fetch_and_validate_offer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","gateway_redeem_key","hash","hash","hash","hash","hash","hash","hash","incoming","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_permanent","ln_decoder","ln_operation","mint_channel_id","node_pub_key","provide","redeem_key","route_hints","route_hints","serde_routing_fees","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_until","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","id","outcome","LnFederationApi","fetch_consensus_block_count","fetch_contract","fetch_gateways","fetch_offer","get_incoming_contract","get_outgoing_contract","offer_exists","register_gateway","Bitcoin","FeeConsensus","GatewayFee","LightningClientConfig","LightningConfig","LightningConfigConsensus","LightningConfigLocal","LightningConfigPrivate","LightningGenParams","LightningGenParamsConsensus","LightningGenParamsLocal","Network","Regtest","Signet","Testnet","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_input","contract_output","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_magic","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","magic","network","network","network","partial_cmp","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifiableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_permanent","is_permanent","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","FundedIncomingContract","IncomingContract","IncomingContractAccount","IncomingContractOffer","OfferId","all_zeros","amount","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","claim","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","out_point","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancellation_message","cancelled","claim","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","contract_id","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","gateway_key","hash","hash","into","into","into","into_request","into_request","into_request","invoice","recovery_key","refund","serialize","serialize","serialize","timelock","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_key","vzip","vzip","vzip","AgreedDecryptionShare","AgreedDecryptionShareContractIdPrefix","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","EncryptedPreimageIndex","EncryptedPreimageIndexKey","EncryptedPreimageIndexKeyPrefix","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AmountError","AwaitingPreimageDecryption","DecryptingPreimage","DecryptingPreimageState","FailedToFundContract","Failure","FetchContractError","FundingFailed","FundingOffer","FundingOfferState","IncomingSmCommon","IncomingSmError","IncomingSmStates","IncomingStateMachine","InvalidOffer","InvalidPreimage","Preimage","PreimageState","RefundSubmitted","RefundSuccessState","TimeoutFetchingOffer","ViolatedFeePolicy","as_any","await_funding_success","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","preimage","provide","refund_incoming_contract","refund_txid","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_funding_success","transition_incoming_contract_funded","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txid","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract","error_message","error_message","invoice","offer_amount","offer_hash","payment_amount","payment_hash","payment_hash","payment_hash","error","error","txid","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cltv_expiry_delta","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","from_bytes","from_ref","from_ref","hash","hash","htlc_maximum_msat","htlc_minimum_msat","into","into","into_request","into_request","proportional_millionths","serialize","serialize","short_channel_id","src_node_id","to_bytes","to_bytes","to_ldk_route_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize"],"q":[[0,"fedimint_ln_common"],[321,"fedimint_ln_common::LightningOutput"],[323,"fedimint_ln_common::LightningOutputOutcome"],[327,"fedimint_ln_common::api"],[336,"fedimint_ln_common::config"],[613,"fedimint_ln_common::contracts"],[907,"fedimint_ln_common::contracts::incoming"],[1086,"fedimint_ln_common::contracts::outgoing"],[1180,"fedimint_ln_common::db"],[1552,"fedimint_ln_common::incoming"],[1801,"fedimint_ln_common::incoming::IncomingSmError"],[1811,"fedimint_ln_common::incoming::IncomingSmStates"],[1814,"fedimint_ln_common::route_hints"],[1876,"fedimint_ln_common::serde_routing_fees"]],"d":["","","Allow early refund of outgoing contract","","Fund contract","","","","","","","","","","","","","","","","","Information a gateway registers with a fed","","","Represents an output of the Lightning module.","","","","","Create incoming contract offer","","","","While for now we only support spending the entire contract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateway configured routing fees","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Key used to pay the gateway","","","","","","","","Incoming State Machine","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Channel identifier assigned to the mint by the gateway. …","","","","Hack to get a route hint that implements <code>serde</code> traits.","Route hints to reach the LN node of the gateway.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Limits the validity of the announcement to allow updates","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","Classic Bitcoin","","Gateway routing fees","","","","","","","","","The cryptocurrency to act on","Bitcoin’s regtest","Bitcoin’s signet","Bitcoin’s testnet","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for LN transactions","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a <code>Network</code> from the magic bytes.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Return the network magic bytes, which should be encoded …","","","","","","","","","","","","","","","","","The number of decryption shares required","","The threshold public keys for encrypting the LN preimage","Our secret key for decrypting preimages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","","","","","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Invoice containing metadata on how to obtain the preimage","","","","","","Block height at which the money will be spendable by the …","","","","","","","","","","","","","","","","Public key of the user that can claim the money back after …","","","","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","","","","An iterator over the variants of Self","","We save the hash of the encrypted preimage from each …","","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes a transaction between two users","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of hops along a payment path terminating with a …","","Flat routing fee in millisatoshis","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","The maximum value in msat available for routing with a …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Liquidity-based routing fee in millionths of a routed …","","","The <code>short_channel_id</code> of this channel","The <code>node_id</code> of the non-target end of the route","","","","","","","","","","","","","","",""],"i":[12,0,6,10,6,10,0,31,0,12,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,31,31,31,6,10,31,31,4,7,8,0,11,4,6,10,12,149,4,6,7,8,10,11,12,39,14,31,149,4,6,7,8,10,11,12,39,14,31,4,4,6,6,7,8,10,10,11,12,12,14,4,6,7,8,10,11,12,14,0,4,6,7,8,10,11,12,4,6,7,8,10,11,12,4,6,7,8,10,11,12,7,8,4,0,0,0,39,4,6,7,8,10,11,12,4,6,10,12,4,6,7,8,10,11,12,31,4,4,6,6,7,7,8,8,10,10,11,11,12,12,31,31,4,6,10,12,4,6,7,8,10,11,12,11,0,4,4,6,6,7,8,10,10,11,12,12,39,14,31,31,149,4,6,7,8,10,11,12,39,14,31,4,6,7,8,10,11,12,4,6,7,8,10,11,12,14,11,11,4,6,7,8,10,11,12,0,149,4,6,7,8,10,11,12,39,14,31,4,6,10,12,149,4,6,7,8,10,11,12,39,14,31,10,14,0,11,11,31,14,0,11,0,4,6,7,8,10,11,12,4,6,7,8,10,11,12,4,6,7,8,10,11,12,14,4,6,10,12,31,149,4,6,7,8,10,11,12,39,14,31,149,4,6,7,8,10,11,12,39,14,31,149,4,6,7,8,10,11,12,39,14,31,11,149,4,6,7,8,10,11,12,39,14,31,4,150,150,151,152,153,151,0,154,154,154,154,154,154,154,154,72,0,0,0,0,0,0,0,0,0,0,0,72,72,72,69,63,65,61,62,63,64,65,66,67,69,70,71,72,61,62,63,64,65,66,67,69,70,71,72,61,62,63,64,65,66,67,69,69,70,71,72,61,62,63,64,65,66,67,69,70,71,72,72,61,64,65,66,69,70,72,65,66,69,70,72,65,66,69,70,72,70,70,70,61,62,63,64,65,66,67,69,70,72,69,69,70,72,69,69,70,70,72,72,69,61,62,63,64,65,66,67,69,70,72,66,69,61,62,63,64,65,66,67,69,69,70,71,72,72,61,62,63,64,65,66,67,69,70,71,72,65,66,69,70,72,72,61,64,61,62,63,64,65,66,67,69,70,71,72,71,72,69,70,72,61,62,63,64,65,66,67,69,70,71,72,69,61,62,63,64,65,66,67,69,70,71,72,66,61,64,72,62,66,69,72,64,61,61,62,63,64,65,66,67,69,70,72,66,69,66,67,65,66,69,70,72,61,62,63,64,65,66,67,69,70,71,72,61,64,69,72,61,62,63,64,65,66,67,69,70,71,72,61,62,63,64,65,66,67,69,70,71,72,61,62,63,64,65,66,67,69,70,71,72,66,61,62,63,64,65,66,67,69,70,71,72,0,0,0,0,0,0,0,84,85,86,89,84,85,86,0,89,0,0,89,60,60,60,60,60,60,60,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,60,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,60,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,155,84,85,60,60,84,85,86,87,88,89,90,91,60,60,60,60,84,85,86,87,88,89,90,91,60,60,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,60,84,85,86,87,88,89,90,91,60,60,60,84,85,86,87,88,89,90,91,60,60,84,85,86,87,88,89,90,91,60,60,84,85,86,87,88,89,90,91,60,60,60,60,84,85,86,87,88,89,90,91,60,60,60,60,84,85,86,87,88,89,90,91,0,60,60,84,85,86,87,88,89,90,91,60,60,84,85,86,87,88,89,90,91,86,89,90,0,60,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,84,60,84,60,84,85,86,87,88,89,90,91,88,60,60,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,60,84,85,86,87,88,89,90,91,60,0,0,0,0,0,106,35,107,106,106,106,106,106,35,108,109,106,106,107,35,108,109,106,107,106,107,35,108,109,106,107,35,108,109,106,107,106,35,108,109,106,107,35,108,109,106,107,35,108,109,106,107,109,107,108,108,106,35,108,109,106,107,106,106,35,108,106,35,108,109,106,107,35,35,108,108,109,109,106,106,107,107,35,108,109,106,107,35,35,108,109,106,106,106,107,35,108,109,106,106,107,106,35,108,109,106,107,106,106,106,35,108,109,106,107,106,106,106,108,35,108,109,106,35,108,35,106,35,108,109,106,107,106,35,108,109,106,107,109,106,35,108,109,106,107,35,108,109,106,107,106,35,108,109,106,107,106,106,35,108,109,106,107,35,108,109,106,107,35,108,109,106,107,35,108,109,106,107,106,0,0,0,0,111,110,112,111,110,112,111,110,110,111,110,112,111,110,112,111,110,112,111,110,112,111,110,112,111,111,112,110,110,112,111,110,112,111,110,110,112,112,111,111,110,112,111,110,112,111,110,112,111,110,112,111,110,112,111,110,110,110,110,112,111,110,112,111,110,112,111,110,112,111,110,110,112,111,110,112,111,110,112,111,110,112,111,110,112,111,110,110,112,111,113,0,0,0,113,0,0,113,0,0,113,0,0,0,0,113,0,0,113,0,0,113,0,0,113,0,0,114,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,115,116,117,118,113,114,115,116,117,118,115,116,119,117,120,121,122,123,124,125,126,127,128,118,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,115,119,120,121,122,124,125,126,128,113,113,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,115,115,116,119,119,117,120,120,121,122,122,123,124,124,125,125,126,126,127,128,128,118,113,114,115,116,117,118,114,114,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,114,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,114,114,114,114,115,119,120,121,122,124,125,126,128,114,115,115,116,116,119,119,117,117,120,120,121,121,122,122,123,123,124,124,129,125,125,130,131,126,126,127,127,128,128,118,118,113,114,115,116,117,118,113,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,113,114,115,116,119,117,120,121,122,123,124,129,125,130,131,126,127,128,118,26,0,133,0,26,133,26,133,133,0,0,0,0,0,26,26,133,0,133,0,26,26,135,137,138,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,133,134,135,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,135,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,134,26,133,134,135,26,137,138,139,140,141,133,133,134,134,135,135,26,26,137,137,138,138,139,139,140,140,141,141,135,26,133,134,135,26,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,135,135,134,140,26,138,141,26,135,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,26,137,138,135,135,137,138,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,137,138,139,133,134,135,26,137,138,139,140,141,133,134,135,26,137,138,139,140,141,156,157,158,159,160,161,160,161,162,157,163,164,163,0,0,145,145,146,145,146,145,146,145,146,145,145,146,145,146,145,146,145,146,145,146,145,145,146,146,145,146,145,146,145,146,145,146,145,146,145,146,145,145,145,146,145,146,145,145,146,145,145,145,146,146,145,146,145,146,145,146,145,146,145,146,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,3],[4,4],[2,5],[6,6],[7,7],[8,8],[2,9],[10,10],[11,11],[12,12],[2,13],[14,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[15,16],[[18,[4,17]]]],[[15,16],[[18,[6,17]]]],[[15,16],[[18,[7,17]]]],[[15,16],[[18,[8,17]]]],[[15,16],[[18,[10,17]]]],[[15,16],[[18,[11,17]]]],[[15,16],[[18,[12,17]]]],[[4,19],[[18,[20,21]]]],[[6,19],[[18,[20,21]]]],[[7,19],[[18,[20,21]]]],[[8,19],[[18,[20,21]]]],[[10,19],[[18,[20,21]]]],[[11,19],[[18,[20,21]]]],[[12,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],0,0,0,0,[[22,23,24,25],[[18,[26]]]],0,[[],27],[28,[[18,[4]]]],[28,[[18,[6]]]],[28,[[18,[7]]]],[28,[[18,[8]]]],[28,[[18,[10]]]],[28,[[18,[11]]]],[28,[[18,[12]]]],[[],29],[[],29],[[],29],[[],29],[[4,4],30],[[6,6],30],[[7,7],30],[[8,8],30],[[10,10],30],[[11,11],30],[[12,12],30],[[31,31],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[3,30],[5,30],[9,30],[13,30],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],0,[[22,23,24],[[36,[35,26]]]],[[4,37],38],[[4,37],38],[[6,37],38],[[6,37],38],[[7,37],38],[[8,37],38],[[10,37],38],[[10,37],38],[[11,37],38],[[12,37],38],[[12,37],38],[[39,37],38],[[14,37],38],[[31,37],38],[[31,37],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[4,45]],[[6,45]],[[7,45]],[[8,45]],[[10,45]],[[11,45]],[[12,45]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,46]],[[6,46]],[[10,46]],[[12,46]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[10,30],0,[[48,49],[[36,[50]]]],0,0,[51],0,0,0,0,[[4,52],18],[[6,52],18],[[7,52],18],[[8,52],18],[[10,52],18],[[11,52],18],[[12,52],18],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],55],[[],55],[[],55],[[],55],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],[[59,[[58,[57]]]]]],[60,[[59,[[58,[57]]]]]],[[],[[59,[[58,[57]]]]]],[23,[[59,[[58,[57]]]]]],[60,[[59,[[58,[57]]]]]],[60,[[59,[[58,[57]]]]]],[23,[[59,[[58,[57]]]]]],[11,[[59,[[58,[57]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[2,68],[69,69],[70,70],[71,71],[72,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,72],73],0,0,[[15,16],[[18,[65,17]]]],[[15,16],[[18,[66,17]]]],[[15,16],[[18,[69,17]]]],[[15,16],[[18,[70,17]]]],[[15,[43,[27,42]]],[[18,[72,17]]]],[[65,19],[[18,[20,21]]]],[[66,19],[[18,[20,21]]]],[[69,19],[[18,[20,21]]]],[[70,19],[[18,[20,21]]]],[[72,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],0,0,[[],70],[28,[[18,[61]]]],[28,[[18,[62]]]],[28,[[18,[63]]]],[28,[[18,[64]]]],[28,[[18,[65]]]],[28,[[18,[66]]]],[28,[[18,[67]]]],[28,[[18,[69]]]],[28,[[18,[70]]]],[28,[[18,[72]]]],[[],29],[[69,69],30],[[70,70],30],[[72,72],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[68,30],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],0,0,[[61,37],38],[[62,37],38],[[63,37],38],[[64,37],38],[[65,37],38],[[66,37],38],[[67,37],38],[[69,37],38],[[69,37],38],[[70,37],38],[[71,37],38],[[72,37],[[18,[74]]]],[[72,37],[[18,[74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[75,[[76,[72]]]],[[],61],[[],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,[[18,[71]]]],[77,[[18,[72]]]],[[69,45]],[[70,45]],[[72,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[69,46]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[66,78],0,0,[72,75],0,0,0,[[72,72],[[76,[73]]]],0,[79,61],[[61,52],18],[[62,52],18],[[63,52],18],[[64,52],18],[[65,52],18],[[66,52],18],[[67,52],18],[[69,52],18],[[70,52],18],[[72,52],18],[66,20],0,0,0,[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61],[64],[[],55],[[],55],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[66,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],60],[[],[[82,[81]]]],[60,23],[60],[60,[[41,[40]]]],[[],20],[60,[[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[18,[[54,[83,53]]]]]],[60,60],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[60,60],73],[[15,16],[[18,[60,17]]]],[[15,16],[[18,[84,17]]]],[[15,16],[[18,[85,17]]]],[[15,16],[[18,[86,17]]]],[[15,16],[[18,[87,17]]]],[[15,16],[[18,[88,17]]]],[[15,16],[[18,[89,17]]]],[[15,16],[[18,[90,17]]]],[[15,16],[[18,[91,17]]]],[[60,19],[[18,[20,21]]]],[[84,19],[[18,[20,21]]]],[[85,19],[[18,[20,21]]]],[[86,19],[[18,[20,21]]]],[[87,19],[[18,[20,21]]]],[[88,19],[[18,[20,21]]]],[[89,19],[[18,[20,21]]]],[[90,19],[[18,[20,21]]]],[[91,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[[],60],[84,60],[85,60],[60],[28,[[18,[60]]]],[28,[[18,[84]]]],[28,[[18,[85]]]],[28,[[18,[86]]]],[28,[[18,[87]]]],[28,[[18,[88]]]],[28,[[18,[89]]]],[28,[[18,[90]]]],[28,[[18,[91]]]],[[],[[93,[92]]]],[[],[[93,[92]]]],[[]],[[60,60],30],[[84,84],30],[[85,85],30],[[86,86],30],[[87,87],30],[[88,88],30],[[89,89],30],[[90,90],30],[[91,91],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[[60,37],38],[[60,37],38],[[60,37],38],[[84,37],38],[[85,37],38],[[86,37],38],[[87,37],38],[[88,37],38],[[89,37],38],[[90,37],38],[[91,37],38],[23,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[94,95,96]]],[[18,[97]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[],60],[23,60],[[],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]]],[[18,[60,98]]]],[[[41,[40]]],[[18,[60,98]]]],[77,[[18,[60]]]],[[60,45]],[[84,45]],[[85,45]],[[86,45]],[[87,45]],[[88,45]],[[89,45]],[[90,45]],[[91,45]],0,[[60,[99,[[41,[40]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[86,30],[89,30],[[88,100],90],0,[[60,60],[[76,[73]]]],[[60,52],18],[[84,52],18],[[85,52],18],[[86,52],18],[[87,52],18],[[88,52],18],[[89,52],18],[[90,52],18],[[91,52],18],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[84,101],85],[[],55],[84,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,[[18,[102,103]]]],[[],55],[[],[[18,[[82,[81]],104]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,18],0,0,0,0,0,[[],106],0,0,[[],[[82,[81]]]],[106,23],[106],[106,[[41,[40]]]],[[],20],[[]],[[]],[[]],[[]],[106,[[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[18,[[54,[83,53]]]]]],[107,4],[35,35],[108,108],[109,109],[106,106],[107,107],[[]],[[]],[[]],[[]],[[]],[[106,106],73],[[15,16],[[18,[35,17]]]],[[15,16],[[18,[108,17]]]],[[15,16],[[18,[109,17]]]],[[15,16],[[18,[106,17]]]],[[15,16],[[18,[107,17]]]],[[35,19],[[18,[20,21]]]],[[108,19],[[18,[20,21]]]],[[109,19],[[18,[20,21]]]],[[106,19],[[18,[20,21]]]],[[107,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],0,0,[108,60],0,[106],[28,[[18,[35]]]],[28,[[18,[108]]]],[28,[[18,[109]]]],[28,[[18,[106]]]],[28,[[18,[107]]]],[[],[[93,[92]]]],[[],[[93,[92]]]],0,0,[[]],[[35,35],30],[[108,108],30],[[109,109],30],[[106,106],30],[[107,107],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],0,[[35,37],38],[[108,37],38],[[109,37],38],[[106,37],38],[[106,37],38],[[106,37],38],[[107,37],38],[[]],[[]],[[]],[23,106],[[]],[[]],[[[0,[94,95,96]]],[[18,[97]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[],106],[23,106],[[],106],[[]],[[]],[[]],[[]],[[]],[[[41,[40]]],[[18,[106,98]]]],[[[41,[40]]],[[18,[106,98]]]],[77,[[18,[106]]]],0,[[35,45]],[[108,45]],[[109,45]],[[106,45]],0,0,[35,106],[[106,[99,[[41,[40]]]]]],[[]],[[]],[[]],[[]],[[]],[106],[[],47],[[],47],[[],47],[[],47],[[],47],0,[[106,106],[[76,[73]]]],[[35,52],18],[[108,52],18],[[109,52],18],[[106,52],18],[[107,52],18],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],55],[[]],[[]],[[]],[[]],[[]],[[],55],[[],[[18,[[82,[81]],104]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[105,18],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[110,23],0,[[111,88],4],[110,110],[112,112],[111,111],[[]],[[]],[[]],[[15,16],[[18,[110,17]]]],[[15,16],[[18,[112,17]]]],[[15,16],[[18,[111,17]]]],[[110,19],[[18,[20,21]]]],[[112,19],[[18,[20,21]]]],[[111,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],0,0,[110,60],[28,[[18,[110]]]],[28,[[18,[112]]]],[28,[[18,[111]]]],[[110,110],30],[[112,112],30],[[111,111],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[[110,37],38],[[112,37],38],[[111,37],38],[[]],[[]],[[]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[]],[[]],[[]],0,[[110,45]],0,[[]],[[]],[[]],[[],47],[[],47],[[],47],0,0,[111,4],[[110,52],18],[[112,52],18],[[111,52],18],0,[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[],56],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[[]],[[]],[[]],[[]],[[]],[[]],[[15,16],[[18,[115,17]]]],[[15,16],[[18,[116,17]]]],[[15,16],[[18,[119,17]]]],[[15,16],[[18,[117,17]]]],[[15,16],[[18,[120,17]]]],[[15,16],[[18,[121,17]]]],[[15,16],[[18,[122,17]]]],[[15,16],[[18,[123,17]]]],[[15,16],[[18,[124,17]]]],[[15,16],[[18,[125,17]]]],[[15,16],[[18,[126,17]]]],[[15,16],[[18,[127,17]]]],[[15,16],[[18,[128,17]]]],[[15,16],[[18,[118,17]]]],[[115,19],[[18,[20,21]]]],[[116,19],[[18,[20,21]]]],[[119,19],[[18,[20,21]]]],[[117,19],[[18,[20,21]]]],[[120,19],[[18,[20,21]]]],[[121,19],[[18,[20,21]]]],[[122,19],[[18,[20,21]]]],[[123,19],[[18,[20,21]]]],[[124,19],[[18,[20,21]]]],[[129,19],[[18,[20,21]]]],[[125,19],[[18,[20,21]]]],[[130,19],[[18,[20,21]]]],[[131,19],[[18,[20,21]]]],[[126,19],[[18,[20,21]]]],[[127,19],[[18,[20,21]]]],[[128,19],[[18,[20,21]]]],[[118,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[[113,37],38],[[113,37],38],[[115,37],38],[[116,37],38],[[119,37],38],[[117,37],38],[[120,37],38],[[121,37],38],[[122,37],38],[[123,37],38],[[124,37],38],[[129,37],38],[[125,37],38],[[130,37],38],[[131,37],38],[[126,37],38],[[127,37],38],[[128,37],38],[[118,37],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[114,20],[[76,[113]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],114],[114,20],0,[114,76],[114,76],[[114,20],76],[[115,52],18],[[119,52],18],[[120,52],18],[[121,52],18],[[122,52],18],[[124,52],18],[[125,52],18],[[126,52],18],[[128,52],18],[114],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[132,101,14],[[18,[26]]]],[[132,60],[[18,[88,26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[134,134],[135,135],[2,136],[26,26],[137,137],[138,138],[139,139],[140,140],[141,141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[15,16],[[18,[133,17]]]],[[15,16],[[18,[134,17]]]],[[15,16],[[18,[135,17]]]],[[15,16],[[18,[26,17]]]],[[15,16],[[18,[137,17]]]],[[15,16],[[18,[138,17]]]],[[15,16],[[18,[139,17]]]],[[15,16],[[18,[140,17]]]],[[15,16],[[18,[141,17]]]],[[133,19],[[18,[20,21]]]],[[134,19],[[18,[20,21]]]],[[135,19],[[18,[20,21]]]],[[26,19],[[18,[20,21]]]],[[137,19],[[18,[20,21]]]],[[138,19],[[18,[20,21]]]],[[139,19],[[18,[20,21]]]],[[140,19],[[18,[20,21]]]],[[141,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],0,[28,[[18,[26]]]],[[133,133],30],[[134,134],30],[[135,135],30],[[26,26],30],[[137,137],30],[[138,138],30],[[139,139],30],[[140,140],30],[[141,141],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[136,30],[32,[[18,[33,34]]]],[[133,37],38],[[134,37],38],[[135,37],38],[[26,37],38],[[26,37],38],[[137,37],38],[[138,37],38],[[139,37],38],[[140,37],38],[[141,37],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],49],[135,49],0,0,[51],[[142,132,14,135,[58,[107]]],135],0,[[26,52],18],0,[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[[18,[26]],135],135],[[[18,[88,26]],135,142,132,14],135],[143,[[54,[[144,[136]],53]]]],[135,[[54,[[144,[135]]]]]],[[137,132,14],[[54,[[144,[135]]]]]],[[138,134,132,14],[[54,[[144,[135]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[145,145],[146,146],[[]],[[]],0,[[15,16],[[18,[145,17]]]],[[15,16],[[18,[146,17]]]],[[145,19],[[18,[20,21]]]],[[146,19],[[18,[20,21]]]],[19,[[18,[20,21]]]],[19,[[18,[20,21]]]],[28,[[18,[145]]]],[28,[[18,[146]]]],[[145,145],30],[[146,146],30],[[],30],[[],30],[[],30],[[],30],[32,[[18,[33,34]]]],[32,[[18,[33,34]]]],[[145,37],38],[[146,37],38],[[]],[[]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[[41,[40]],[43,[27,42]]],[[18,[44]]]],[[]],[[]],[[145,45]],[[146,45]],0,0,[[]],[[]],[[],47],[[],47],0,[[145,52],18],[[146,52],18],0,0,[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[146,147],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],56],[[],56],[[]],[[]],[28,[[18,[148]]]],[[148,52],18]],"c":[],"p":[[8,"Any"],[15,"u16"],[3,"DynInput"],[3,"LightningInput"],[3,"DynOutput"],[4,"LightningOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[3,"DynOutputOutcome"],[4,"LightningOutputOutcome"],[3,"LightningGateway"],[4,"LightningConsensusItem"],[3,"DynModuleConsensusItem"],[3,"LightningClientContext"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DynModuleApi"],[3,"Hash"],[3,"Amount"],[3,"KeyPair"],[4,"IncomingSmError"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[4,"LightningError"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"IncomingContractOffer"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"LightningCommonGen"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[3,"Client"],[3,"OperationId"],[3,"OperationLogEntry"],[3,"Demand"],[8,"Serializer"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"ContractId"],[3,"LightningGenParams"],[3,"LightningGenParamsConsensus"],[3,"LightningGenParamsLocal"],[3,"LightningConfig"],[3,"LightningConfigLocal"],[3,"LightningConfigConsensus"],[3,"LightningConfigPrivate"],[3,"DynClientConfig"],[3,"LightningClientConfig"],[3,"FeeConsensus"],[3,"GatewayFee"],[4,"Network"],[4,"Ordering"],[3,"Error"],[15,"u32"],[4,"Option"],[15,"str"],[3,"ModuleKind"],[3,"BitcoinRpcConfig"],[3,"ModuleConsensusVersion"],[8,"BitOrder"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[15,"char"],[8,"FromIterator"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[4,"Error"],[8,"SliceIndex"],[3,"PublicKey"],[3,"OutPoint"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[8,"WriteBase32"],[3,"OfferId"],[3,"IncomingContractAccount"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[3,"OutgoingContractAccount"],[3,"OutgoingContractData"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKeyPrefix"],[3,"BlockCountVotePrefix"],[3,"ContractUpdateKey"],[3,"EncryptedPreimageIndexKey"],[3,"EncryptedPreimageIndexKeyPrefix"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"BlockCountVoteKey"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareContractIdPrefix"],[3,"DynGlobalClientContext"],[4,"IncomingSmStates"],[3,"IncomingSmCommon"],[3,"IncomingStateMachine"],[3,"DynState"],[3,"FundingOfferState"],[3,"DecryptingPreimageState"],[3,"AwaitingPreimageDecryption"],[3,"PreimageState"],[3,"RefundSuccessState"],[3,"ClientSMDatabaseTransaction"],[3,"DynContext"],[3,"StateTransition"],[3,"RouteHintHop"],[3,"RouteHint"],[3,"RouteHint"],[3,"RoutingFees"],[3,"LightningModuleTypes"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[13,"CancelOutgoingContract"],[8,"LnFederationApi"],[8,"IdentifiableContract"],[13,"InvalidPreimage"],[13,"FetchContractError"],[13,"FailedToFundContract"],[13,"AmountError"],[13,"ViolatedFeePolicy"],[13,"InvalidOffer"],[13,"TimeoutFetchingOffer"],[13,"RefundSubmitted"],[13,"FundingFailed"]]},\
"fedimint_ln_server":{"doc":"","t":"DDDDDDDDDDDMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ALL_METRICS","AMOUNTS_BUCKETS_SATS","LN_FUNDED_CONTRACT_INCOMING","LN_FUNDED_CONTRACT_INCOMING_ACCOUNT_AMOUNTS_SATS","LN_FUNDED_CONTRACT_OUTGOING","LN_FUNDED_CONTRACT_OUTGOING_ACCOUNT_AMOUNTS_SATS","LN_INCOMING_OFFER","LN_OUTPUT_OUTCOME_CANCEL_OUTGOING_CONTRACT","Lightning","LightningGen","LightningVerificationCache","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","api_endpoints","api_endpoints","as_any","as_any","as_common","audit","audit","await_consensus_proposal","await_consensus_proposal","block_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_rpc","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone_into","clone_into","common","consensus_block_count","consensus_decode","consensus_encode","consensus_encode_dyn","consensus_proposal","consensus_proposal","database_version","decoder","decoder","deref","deref","deref","deref","deref","deref","deref","deref","deserialize","distributed_gen","distributed_gen","dump_database","dump_database","eq","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_ref","from_ref","get_client_config","get_client_config","get_contract_account","get_database_migrations","get_offer","get_offers","hash","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","list_gateways","module_kind","new","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","register_gateway","serialize","supported_api_versions","supported_api_versions","to_bytes","to_dyn_common","to_owned","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_decryption_share","validate_params","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_contract_account","wait_offer"],"q":[[0,"fedimint_ln_server"]],"d":["","","","","","","","","The lightning module implements an account system. It does …","","","","","","","","","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","This function is called once for every consensus item. The …","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,30,32,33,34,35,37,39,40,1,1,1,20,19,1,1,1,1,1,30,32,33,34,35,37,39,40,19,1,20,30,32,33,34,35,37,39,40,19,1,20,1,1,1,1,19,20,20,19,20,0,1,20,20,20,1,1,19,19,1,30,32,33,34,35,37,39,40,20,19,19,19,19,20,20,20,20,19,1,20,30,32,33,34,35,37,39,40,19,1,20,20,19,20,19,19,1,19,1,1,20,19,19,30,32,33,34,35,37,39,40,19,1,20,30,32,33,34,35,37,39,40,19,1,20,1,19,1,1,1,1,1,1,1,1,1,1,20,19,19,20,19,19,20,19,19,30,32,33,34,35,37,39,40,19,1,20,30,32,33,34,35,37,39,40,19,1,20,30,32,33,34,35,37,39,40,19,1,20,19,19,1,19,19,30,32,33,34,35,37,39,40,19,1,20,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],6],[[],7],[[[9,[8]],10],[[13,[[12,[11,5]]]]]],[[1,9,10],[[13,[[12,[11]]]]]],[[[9,[8]]],[[13,[[12,[11,5]]]]]],[[1,9],[[13,[[12,[11]]]]]],[1,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[16,[15]]],17],[[1,18]],0,[19,19],[[],17],[20,20],[[]],[[]],0,[[1,9],14],[[21,22],[[24,[20,23]]]],[[20,25],[[24,[26,27]]]],[25,[[24,[26,27]]]],[[[9,[8]],8],[[13,[[12,[11,5]]]]]],[[1,9],[[13,[[12,[11]]]]]],[[],28],[[],29],[[],29],[30,31],[32,31],[33,31],[34,31],[35,[[3,[36]]]],[37,38],[39,38],[40,[[42,[[12,[41]]]]]],[43,[[24,[20]]]],[[44,45],[[13,[[12,[11,5]]]]]],[[19,44,45],[[13,[[12,[11]]]]]],[[19,9,[3,[46]]],[[13,[[12,[11]]]]]],[[[9,[8]],[3,[46,5]]],[[13,[[12,[11,5]]]]]],[[20,20],47],[[],47],[[],47],[48,[[24,[49,50]]]],[[19,51],52],[[1,51],52],[[20,51],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[53]],[55,[29,54]]],[[24,[56]]]],[[]],[[]],[[19,57],[[59,[58]]]],[[8,57],[[24,[60,61]]]],[[1,9,62],[[64,[63]]]],[[],[[65,[28,5]]]],[[1,9,66],[[64,[67]]]],[[1,9],[[3,[67]]]],[[20,68]],[[19,69,70,71],[[13,[[12,[11]]]]]],[[69,70,71],[[13,[[12,[11,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[1,9],[[3,[73]]]],[[],74],[[75,71],[[59,[1]]]],[[[9,[8]],76,8],[[13,[[12,[11,5]]]]]],[[1,9,76],[[13,[[12,[11]]]]]],[[[9,[8]],77,78],[[13,[[12,[11,5]]]]]],[[1,9,79,78],[[13,[[12,[11]]]]]],[[1,9,80],[[13,[[12,[11]]]]]],[[[9,[8]],15,17],[[13,[[12,[11,5]]]]]],[[1,9,81,76],[[13,[[12,[11]]]]]],[[[9,[8]],82,76],[[13,[[12,[11,5]]]]]],[[1,9,73]],[[20,83],24],[[],84],[19,84],[[],[[3,[53,5]]]],[[],85],[[]],[[]],[[19,[16,[78]],45],[[65,[78,69]]]],[[[16,[78]],45],[[65,[78,69,5]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[],86],[[19,78,69],59],[[78,69],[[24,[61]]]],[[1,78,87,88],47],[45,[[24,[61]]]],[[19,89],[[16,[90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,91,62],63],[[1,91,66],67]],"c":[],"p":[[3,"Lightning"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u64"],[3,"DynInput"],[15,"slice"],[3,"DynVerificationCache"],[8,"Iterator"],[3,"LightningGen"],[3,"LightningVerificationCache"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DatabaseVersion"],[3,"Decoder"],[3,"LN_INCOMING_OFFER"],[6,"IntCounter"],[3,"LN_OUTPUT_OUTCOME_CANCEL_OUTGOING_CONTRACT"],[3,"LN_FUNDED_CONTRACT_INCOMING"],[3,"LN_FUNDED_CONTRACT_OUTGOING"],[3,"AMOUNTS_BUCKETS_SATS"],[15,"f64"],[3,"LN_FUNDED_CONTRACT_INCOMING_ACCOUNT_AMOUNTS_SATS"],[3,"Histogram"],[3,"LN_FUNDED_CONTRACT_OUTGOING_ACCOUNT_AMOUNTS_SATS"],[3,"ALL_METRICS"],[8,"Collector"],[15,"array"],[8,"Deserializer"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[15,"u8"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"ServerModuleConsensusConfig"],[3,"LightningClientConfig"],[6,"Result"],[3,"ClientModuleConfig"],[3,"Error"],[3,"ContractId"],[3,"ContractAccount"],[4,"Option"],[3,"BTreeMap"],[3,"Hash"],[3,"IncomingContractOffer"],[8,"Hasher"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"Request"],[3,"LightningGateway"],[3,"ModuleKind"],[3,"LightningConfig"],[3,"OutPoint"],[3,"DynModuleConsensusItem"],[3,"PeerId"],[4,"LightningConsensusItem"],[3,"LightningInput"],[4,"LightningOutput"],[3,"DynOutput"],[8,"Serializer"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[3,"TypeId"],[3,"PreimageDecryptionShare"],[3,"EncryptedPreimage"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"],[3,"ApiEndpointContext"]]},\
"fedimint_load_test_tool":{"doc":"","t":"NEDDNENDDDNNMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLAMLLLLLLLLLLLLLLLLFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLFLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMMFMMMMMMMMMMMMMFLLFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLMMMMMFFFFFFFFFFFFFFF","n":["ClnLightningCli","Command","EventMetricComparison","EventMetricSummary","LnCli","LnInvoiceGeneration","LoadTest","LoadTestArgs","MetricEvent","Opts","TestConnect","TestDownload","archive_dir","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","avg_ms","avg_ms_gain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command_for_update","common","current","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","do_user_task","drop","drop","drop","drop","drop","drop","drop","duration","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","generate_invoice_with","get_gateway_id","group_id","group_id","handle_metrics_summary","has_subcommand","init","init","init","init","init","init","init","initial_notes","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","invoice_amount","invoices_file","invoices_per_user","ln_payment_sleep_secs","main","max_ms","max_ms_gain","median_ms","median_ms_gain","metrics_json_output","min_ms","min_ms_gain","n","name","name","note_denomination","notes_per_user","previous","run_load_test","serialize","serialize","test_connect_raw_client","test_download_config","timestamp_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","url_to_string_with_default_port","users","users","value_variants","vzip","vzip","vzip","vzip","vzip","vzip","vzip","duration_secs","invite_code","invite_code","limit_endpoints","timeout_secs","await_spend_notes_finish","build_client","cln_create_invoice","cln_wait_invoice_payment","do_spend_notes","gateway_pay_invoice","get_note_summary","get_notes_cli","lnd_create_invoice","lnd_wait_invoice_payment","parse_gateway_id","reissue_notes","remint_denomination","switch_default_gateway","try_get_notes_cli"],"q":[[0,"fedimint_load_test_tool"],[210,"fedimint_load_test_tool::Command"],[215,"fedimint_load_test_tool::common"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,0,0,0,3,0,4,0,0,0,4,4,2,2,5,2,5,4,4,7,11,2,3,4,5,6,7,11,2,3,4,5,6,7,11,2,3,4,5,6,7,2,3,4,5,6,7,2,2,2,0,11,2,3,4,5,6,7,11,2,3,4,5,6,7,11,7,11,0,2,3,4,5,6,7,11,6,7,11,3,6,7,11,11,2,3,4,5,6,7,11,2,4,5,2,4,5,2,3,4,5,6,7,5,5,0,2,5,0,4,2,3,4,5,6,7,11,5,2,3,4,5,6,7,11,2,2,3,3,4,4,5,5,6,6,7,7,11,11,5,5,5,5,5,0,7,11,7,11,2,7,11,7,6,7,5,5,11,0,7,11,0,0,7,2,3,4,5,6,7,3,11,2,3,4,5,6,7,11,2,3,4,5,6,7,11,2,3,4,5,6,7,11,2,4,5,2,4,5,0,2,7,3,2,3,4,5,6,7,11,48,48,49,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],0,[[],1],0,0,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[9,[[10,[7]]]],[9,[[10,[11]]]],[[12,[14,[13]],15,16,17,[14,[18]],[19,[3]],[20,[6]]],21],[8],[8],[8],[8],[8],[8],[8],0,[22,[[10,[23,24]]]],[22,[[10,[23,24]]]],[[3,25],26],[[6,25],26],[[7,25],26],[[11,25],26],[[11,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[10,[2,28]]]],[27,[[10,[4,28]]]],[27,[[10,[5,28]]]],[27,[[10,[2,28]]]],[27,[[10,[4,28]]]],[27,[[10,[5,28]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[3,[[21,[29]]]],[[],[[19,[30]]]],[[],[[19,[30]]]],[[2,[31,[6]]],21],[32,33],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],35],[[],34],[[],35],[[],34],[[],35],[[],34],[[],35],[[],35],[[],34],[[],35],[[],34],[[],35],[[],34],0,0,0,0,0,[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[19,[36]],15,[19,[37]],13,[19,[3]],15,16,[14,[18]],[19,[29]],15,17,17,[20,[6]]],[[21,[[14,[[38,[21]]]]]]]],[[7,39],10],[[11,39],10],[[37,15,16,16,[19,[8]],[20,[6]]],[[21,[[14,[[38,[21]]]]]]]],[[37,15,[20,[6]]],[[21,[[14,[[38,[21]]]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[3,[[19,[40]]]],[[],29],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[2,27],[[10,[28]]]],[[4,27],[[10,[28]]]],[[5,27],[[10,[28]]]],[[2,27],[[10,[28]]]],[[4,27],[[10,[28]]]],[[5,27],[[10,[28]]]],[42,29],0,0,[[],[[43,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[12,44],21],[[[19,[37]],[19,[36]]],[[21,[12]]]],[17,21],[32,21],[[12,17],21],[[12,18,[20,[6]]],21],[12,[[21,[45]]]],[17,[[21,[13]]]],[17,21],[29,21],[32,[[21,[46,47]]]],[[12,13,[20,[6]]],21],[[12,17,15],21],[[12,32],21],[[17,8],[[21,[13]]]]],"c":[],"p":[[3,"Command"],[3,"Opts"],[4,"LnInvoiceGeneration"],[4,"Command"],[3,"LoadTestArgs"],[3,"MetricEvent"],[3,"EventMetricSummary"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"EventMetricComparison"],[3,"Client"],[3,"OOBNotes"],[3,"Vec"],[15,"u16"],[3,"Duration"],[3,"Amount"],[3,"Invoice"],[4,"Option"],[3,"UnboundedSender"],[6,"Result"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"String"],[3,"Id"],[3,"UnboundedReceiver"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Request"],[3,"PathBuf"],[3,"InviteCode"],[6,"BoxFuture"],[8,"Serializer"],[3,"PossibleValue"],[3,"TypeId"],[3,"Url"],[15,"slice"],[3,"OperationId"],[3,"TieredSummary"],[3,"PublicKey"],[4,"Error"],[13,"TestConnect"],[13,"TestDownload"]]},\
"fedimint_logging":{"doc":"","t":"RRRRRRRRRRRRRRRRRRDLLLLLLLLMLLLLLMLMLM","n":["LOG_BLOCKCHAIN","LOG_CLIENT","LOG_CLIENT_BACKUP","LOG_CLIENT_RECOVERY","LOG_CLIENT_RECOVERY_MINT","LOG_CONSENSUS","LOG_CORE","LOG_DB","LOG_DEVIMINT","LOG_ECASH_RECOVERY","LOG_NET","LOG_NET_API","LOG_NET_PEER","LOG_NET_PEER_DKG","LOG_TASK","LOG_TEST","LOG_TIMING","LOG_WALLET","TracingSetup","borrow","borrow_mut","default","from","init","into","into_request","tokio_console_bind","tokio_console_bind","try_from","try_into","type_id","vzip","with_chrome","with_chrome","with_file","with_file","with_jaeger","with_jaeger"],"q":[[0,"fedimint_logging"]],"d":["Constants for categorizing the logging type","","","","","","","","","","","","","","","","","","Consolidates the setup of server tracing into a helper","","","","Returns the argument unchanged.","Initialize the logging, must be called for tracing to begin","Calls <code>U::from(self)</code>.","","Setup a console server for tokio logging …","","","","","","Setup telemetry through Chrome …","","","","Setup telemetry through Jaeger …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],[[]],[1,2],[[]],[[],3],[[1,[5,[4]]],1],0,[[],6],[[],6],[[],7],[[]],[[1,8],1],0,[[1,[5,[9]]],1],0,[[1,8],1],0],"c":[],"p":[[3,"TracingSetup"],[6,"Result"],[3,"Request"],[4,"SocketAddr"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"bool"],[3,"File"]]},\
"fedimint_metrics":{"doc":"","t":"IDGDLLLLLLLMLLKLLLLLKLLLLFLLOLLLLOLLLLLOCOOFLLLLLLLLLLL","n":["Encoder","Histogram","IntCounter","TextEncoder","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","collect","core","default","desc","encode","encode","encode_to_string","encode_utf8","fmt","fmt","format_type","format_type","from","from","from_ref","get_metrics","get_sample_count","get_sample_sum","histogram_opts","into","into","into_request","into_request","lazy_static","local","metric","new","observe","observe_closure_duration","opts","prometheus","register_histogram","register_int_counter","run_api_server","start_timer","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_opts"],"q":[[0,"fedimint_metrics"]],"d":["An interface for encoding metric families into an …","A <code>Metric</code> counts individual observations from an event or …","The integer version of <code>Counter</code>. Provides better …","An implementation of an <code>Encoder</code> that converts a …","","","","","","","","","","","<code>encode</code> converts a slice of MetricFamily proto messages …","","Converts metrics to <code>String</code>.","Appends metrics to a given <code>String</code> buffer.","","","<code>format_type</code> returns target format.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Return count of all samples.","Return accumulated sum of all samples.","Create a <code>HistogramOpts</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Return a <code>LocalHistogram</code> for single thread usage.","","Create a new text encoder.","Add a single observation to the <code>Histogram</code>.","Observe execution time of a closure, in second.","Create an <code>Opts</code>.","","Create a <code>Histogram</code> and registers to default registry.","Create an <code>IntCounter</code> and registers to default registry.","","Return a <code>HistogramTimer</code> to track a duration.","","","","","","","","","","<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options."],"i":[0,0,0,0,5,1,5,1,1,1,1,1,5,1,28,5,5,5,5,1,28,5,5,1,1,0,1,1,0,5,1,5,1,0,1,1,5,1,1,0,0,0,0,0,1,1,5,1,5,1,5,1,5,1,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[1,[[4,[2,3]]]],0,[[],5],[1,[[4,[6,3]]]],[[[7,[2]],8],[[10,[9]]]],[[5,[7,[2]],8],[[10,[9]]]],[[5,[7,[2]]],[[10,[11,9]]]],[[5,[7,[2]],11],[[10,[9]]]],[[5,12],[[10,[13]]]],[[1,12],[[10,[13]]]],[[],14],[5,14],[[]],[[]],[[]],[[]],[1,15],[1,16],0,[[]],[[]],[[],17],[[],17],0,[1,18],[1,19],[[],5],[[1,16]],[[1,20]],0,0,0,0,[[21,22],[[24,[23]]]],[1,25],[[]],[[],10],[[],10],[[],10],[[],10],[[],26],[[],26],[[]],[[]],[27,[[10,[1,9]]]]],"c":[],"p":[[3,"Histogram"],[3,"MetricFamily"],[3,"Global"],[3,"Vec"],[3,"TextEncoder"],[3,"Desc"],[15,"slice"],[8,"Write"],[4,"Error"],[4,"Result"],[3,"String"],[3,"Formatter"],[3,"Error"],[15,"str"],[15,"u64"],[15,"f64"],[3,"Request"],[3,"LocalHistogram"],[3,"Metric"],[8,"FnOnce"],[4,"SocketAddr"],[3,"TaskGroup"],[3,"TaskShutdownToken"],[6,"Result"],[3,"HistogramTimer"],[3,"TypeId"],[3,"HistogramOpts"],[8,"Encoder"]]},\
"fedimint_mint_client":{"doc":"","t":"DDENNRNNNNNNDNNNNNNRRRRDIDDEDDEDDEDDDDDDNNDDDNDDDNENNENDNDEDNNNNNNNNLMLLLLLLLLLLLKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLLLLMMMALLMALLLLMLLLLKMMLLMMMLFLLLLLLLLLLLLLLLLLLLMMLMKLLLLKKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDLLLLLLMLLLLLLLLLLMMMALLLLLLDDNNDDDERNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLMMMLLLMLMMMMLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENDDNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDDDDDDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNDEDDDNNLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMLLLLLLLLLLFFLLLFLLLLLLLLLLLLLLLLLLLLNRNNNNNNDDEDDDDDEDRNNNMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BackupRequest","BlindNonce","CombineError","Created","Created","DEFAULT_MAX_NOTES_PER_DENOMINATION","DifferentNonce","DifferentStructureSigShare","Done","ExceededMaxNotes","Failed","Input","InsufficientBalanceError","InvalidAmountTier","InvalidAmountTier","InvalidNote","InvalidSignature","InvalidSignature","Issuing","KIND","LOG_TARGET","MINT_BACKUP_RESTORE_OPERATION_ID","MINT_E_CASH_TYPE_CHILD_ID","MintClientContext","MintClientExt","MintClientGen","MintClientModule","MintClientStateMachines","MintCommonGen","MintConsensusItem","MintError","MintInput","MintMeta","MintMetaVariants","MintModuleTypes","MintOutput","MintOutputBlindSignatures","MintOutputOutcome","MintOutputSignatureShare","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","NoteIndex","OOB","OOBNotes","OOBReissueTag","OOBSpendTag","Output","PeerErrorType","Refunded","Reissuance","ReissueExternalNotesState","Restore","SignedBackupRequest","SpendOOB","SpendOOBRefund","SpendOOBState","SpendableNote","SpentCoin","Success","TooFewNotes","TooFewShares","TooFewValidShares","UserCanceledFailure","UserCanceledProcessing","UserCanceledSuccess","advance","amount","as_any","as_any","as_any","as_any","as_any","as_any","as_common","as_u64","await_output_finalized","await_primary_module_output","await_primary_module_output","await_restore_finished","await_restore_finished","await_spend_oob_refund","backup","backup","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_oob_payment_bc","cancel_oob_payment_bc","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_exact_output","create_input","create_input_from_notes","create_output","create_sufficient_input","create_sufficient_input","db","decoder","decoder","decoder","decoder","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","engine","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extra_meta","federation_id","federation_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_u64","get_all_spendable_notes","get_balance","get_balance","get_next_note_index","get_wallet_summary","handle_cli_command","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","init","init","input","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mint_decoder","mint_keys","mint_operation","module_kind","module_kind","new_ecash_note","new_note_secret","new_note_secret_static","next","note","notes","notifier","oob","operation_id","operation_id","out_point","output","output_amount","output_amount","partial_cmp","partial_cmp","payload","prepare_plaintext_ecash_backup","provide","provide","provide","reissue_external_notes","request","requested_amount","restore","restore","secp","secret","secret","select_notes","select_notes_from_stream","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","signature","signatures","spend_key","spend_key","spend_notes","spend_notes_oob","subscribe_balance_changes","subscribe_balance_changes","subscribe_cancel_oob_payment","subscribe_reissue_external_notes","subscribe_spend_notes","supported_api_versions","supported_api_versions","supports_backup","supports_backup","supports_being_primary","supports_being_primary","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_amount","total_amount","transaction_id","transitions","transitions","try_cancel_spend_notes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_triggered","validate_notes","variant","verify","verify_valid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","wipe_all_spendable_notes","oob_notes","out_point","requested_amount","EcashBackup","borrow","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","epoch_count","eq","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","into","into_request","new_empty","next_note_idx","notes","pending_notes","recovery","serialize","to_bytes","try_from","try_into","type_id","vzip","CompressedBlindedMessage","EcashRecoveryFinalState","Failed","InProgress","MintRestoreFailedState","MintRestoreInProgressState","MintRestoreStateMachine","MintRestoreStates","PROGRESS_SNAPSHOT_EPOCHS","Success","add_next_pending_nonce_in_pending_pool","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","deserialize","end_epoch","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","fetch_epochs_stream","fill_initial_pending_nonces","finalize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_backup","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","gap_limit","handle_consensus_item","handle_input","handle_output","handle_output_confirmation","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_done","last_mined_nonce_idx","make_progress","next_epoch","next_note_idx","next_pending_note_idx","observe_nonce_idx_being_used","operation_id","operation_id","operation_id","partial_cmp","pending_nonces","pending_outputs","pub_key_shares","reason","serialize","serialize","spendable_note_by_nonce","spendable_notes","start_epoch","state","tbs_pks","threshold","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unconfirmed_notes","vzip","vzip","vzip","vzip","vzip","vzip","FeeConsensus","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigLocal","MintConfigPrivate","MintGenParams","MintGenParamsConsensus","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","max_notes_per_denomination","max_notes_per_denomination","mint_amounts","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","NextECashNoteIndex","NextECashNoteIndexKey","NextECashNoteIndexKeyPrefix","Note","NoteKey","NoteKeyPrefix","amount","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","nonce","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Created","Error","MintInputCommon","MintInputStateCreated","MintInputStateError","MintInputStateMachine","MintInputStateRefund","MintInputStateRefundSuccess","MintInputStateSuccess","MintInputStates","Refund","RefundSuccess","Success","as_any","await_refund_success","await_success","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","input_idx","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","notes","operation_id","operation_id","operation_id","refund","refund_txid","refund_txid","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transition_refund_success","transition_success","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Created","MintOOBStateMachine","MintOOBStates","MintOOBStatesCreated","MintOOBStatesTimeoutRefund","MintOOBStatesUserRefund","TimeoutRefund","UserRefund","as_any","await_timeout_cancel","await_user_cancels","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","notes","operation_id","operation_id","operation_id","refund_txid","refund_txid","state","timeout","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_timeout_cancel","transition_user_cancel","transitions","transitions","transitions","try_cancel_oob_spend","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Aborted","BLINDING_KEY_CHILD_ID","Created","Failed","InvalidAmountTier","InvalidIssuanceId","InvalidSignature","InvalidSignatureAtIdx","MintOutputCommon","MintOutputStateMachine","MintOutputStates","MintOutputStatesAborted","MintOutputStatesCreated","MintOutputStatesFailed","MintOutputStatesSucceeded","MultiNoteIssuanceRequest","NoteFinalizationError","NoteIssuanceRequest","SPEND_KEY_CHILD_ID","Succeeded","UnknownIssuance","WrongMintAnswer","amount","as_any","await_outcome_ready","await_tx_rejected","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","error","extend","finalize","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","nonce","note_issuance","notes","operation_id","operation_id","operation_id","out_point","provide","recover_blind_nonce","serialize","serialize","spend_key","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_outcome_ready","transition_tx_rejected","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_client"],[853,"fedimint_mint_client::MintMetaVariants"],[856,"fedimint_mint_client::backup"],[884,"fedimint_mint_client::backup::recovery"],[1061,"fedimint_mint_client::config"],[1264,"fedimint_mint_client::db"],[1373,"fedimint_mint_client::input"],[1585,"fedimint_mint_client::oob"],[1722,"fedimint_mint_client::output"]],"d":["","<code>Nonce</code> but blinded by the user key","","The operation has been created and is waiting to be …","The e-cash has been selected and given to the caller","By default, the maximum notes per denomination when …","","","The operation has been completed successfully.","","Some error happened and the operation failed.","","","","","","","","We are waiting for blind signatures to arrive but can …","","","","","","","","","","","Data structures taking into account different amount tiers …","","","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","Blind signature share from one Federation peer for a …","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","An index used to deterministically derive <code>Note</code>s","","An encapsulation of <code>FederationId</code> and e-cash notes in the …","","","","","We tried to cancel the operation automatically after the …","","The high-level state of a reissue operation started with …","","","","","The high-level state of a raw e-cash spend operation …","A <code>Note</code> with associated secret key that allows to proof …","","We tried to cancel the operation automatically after the …","","","","The user-requested cancellation failed, the e-cash notes …","The user requested a cancellation of the operation, we are …","The user-requested cancellation was successful, we got all …","","","","","","","","","","","Wait for the e-cash notes to be retrieved. If this is not …","","","Awaits the backup restoration to completereates a mint input of at least <code>min_amount</code>.","Create a mint input from external, potentially untrusted …","Creates a mint output with exactly the given <code>amount</code>, …","","","Database keys used throughout the mint client module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base64 encode a set of e-cash notes for out-of-band …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode a set of out-of-band e-cash notes from a base64 …","","","","","","Returns the number of held e-cash notes per denomination","","","","","","","","","","","","","","","","","","","","State machines for mint inputs","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive the note <code>DerivableSecret</code> from the Mint’s <code>secret</code> …","","","","","State machines for out-of-band transmitted e-cash notes","","","Reference to a Federation Transaction containing an …","State machines for mint outputs","","","","","","","","","","Try to reissue e-cash notes received from a third party to …","","","","","","","","Select notes with total amount of <em>at least</em> <code>amount</code>. If more …","","","","","","","","","","","","","","","","","","","","","","(Partial) signatures","Access the nonce as the public key to the spend key","","Fetches and removes notes of <em>at least</em> amount <code>min_amount</code> …","","","","","Subscribe to updates on the progress of a reissue …","Subscribe to updates on the progress of a raw e-cash spend …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","Try to cancel a spend operation started with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the given notes and return the total amount of …","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Snapshot of a ecash state (notes)","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","An empty backup with, like a one created by a newly …","","","","","","","","","","","Newtype over <code>BlindedMessage</code> to enable <code>Ord</code>","","Something went wrong, and restore failed","The restore has been started and is processing","","The state machine used for fast-forwarding backup from …","","State machine managing e-cash that has been taken out of …","Restore will progress in chunks of a fixed epoch count, …","Done","Add next nonce from <code>amount</code> tier to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch epochs in a given range and send them over <code>sender</code>","Fill each tier pool to the gap limit","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","The number of nonces we look-ahead when looking for mints …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","<code>LastECashNoteIndex</code> but tracked in flight. Basically max …","","","Note index to derive next note in a given amount tier","Tail of <code>pending</code>. <code>pending_notes</code> is filled by generating …","React to a valid pending nonce being tracked being used in …","","","","","Next nonces that we expect might soon get used. Once we …","Outputs (by <code>OutPoint</code>) we track federation member …","Public key shares for each peer","","","","Nonces that we track that are currently spendable.","Nonces that we track that are currently spendable.","","","Aggregate public key for each amount tier","Threshold","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsigned notes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum amount of change a client can request","","","","","The set of public keys for blind-signing all peers and note","","","","","","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine managing the e-cash redemption process …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The e-cash has been taken out of the wallet and we are …","","State machine managing e-cash that has been taken out of …","","","","The timeout of this out-of-band transaction was hit and we …","The user has triggered a refund.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction containing the issuance was rejected, we …","Child ID used to derive the blinding key from a note’s …","Issuance request was created, we are waiting for blind …","The transaction containing the issuance was accepted but …","","","","","","","State machine managing the e-cash issuance process related …","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","See <code>MintOutputStates</code>","Multiple <code>Note</code> issuance requests","","Single <code>Note</code> issuance request to the mint.f","Child ID used to derive the spend key from a note’s …","The issuance was completed successfully and the e-cash …","","","","","","","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the blind signatures received from the federation to …","Finalize the issuance request using a …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Generate a request session for a single note and returns …","Return nonce of the e-cash note being requested","","Finalization data for all note outputs in this request","","","","","","","","","Spend key from which the note nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,39,40,0,35,35,39,37,39,47,0,35,37,37,35,37,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,47,0,0,0,47,0,40,42,0,47,0,42,0,0,0,37,40,37,36,36,40,40,40,1,41,22,29,31,33,5,47,43,1,5,5,5,182,5,5,0,5,5,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,5,44,5,22,22,23,24,25,26,27,29,29,31,31,33,33,34,35,36,37,38,39,40,41,42,43,44,45,47,47,48,1,22,23,24,25,26,27,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,1,26,1,0,0,54,22,23,24,25,26,27,29,31,33,38,47,48,1,54,22,23,24,25,26,27,29,31,33,38,47,48,1,54,22,23,24,25,26,27,29,31,33,38,47,48,1,5,5,5,5,5,5,5,5,5,0,76,43,43,5,29,31,1,29,31,33,29,31,33,54,67,22,23,24,25,26,27,29,31,33,38,39,40,41,42,48,1,22,29,31,33,184,185,22,23,24,25,26,27,29,31,33,34,35,36,37,39,40,47,48,1,22,22,23,23,24,24,25,25,26,26,27,27,29,29,31,31,33,33,34,34,35,35,36,36,37,37,39,39,40,40,47,47,48,48,1,1,22,29,31,33,47,54,67,22,23,24,25,26,27,29,31,33,38,39,40,41,42,48,1,31,41,38,5,54,67,22,22,23,24,25,26,27,76,29,29,31,31,33,33,34,35,36,36,37,37,38,38,39,40,41,42,43,5,44,45,45,47,48,1,1,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,37,38,39,40,41,42,43,5,44,45,47,48,1,54,22,23,24,25,26,26,27,29,31,33,38,47,48,1,22,23,24,25,26,27,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,1,38,1,5,5,5,5,5,5,5,22,23,24,25,26,27,29,31,33,34,35,36,37,48,54,43,43,0,5,5,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,22,29,31,33,47,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,44,44,0,43,43,5,5,5,1,48,38,5,0,47,47,22,0,5,5,26,1,54,5,36,37,45,182,67,45,5,5,5,5,44,5,0,54,67,22,23,24,25,26,27,29,31,33,38,39,40,41,42,48,1,54,67,22,25,48,182,5,5,5,44,182,182,43,43,5,5,5,5,54,54,22,23,24,25,26,26,27,29,31,33,38,47,48,1,43,26,22,23,24,25,26,27,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,1,22,29,31,33,36,37,38,45,1,38,45,14,47,47,182,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,14,182,41,25,67,183,14,184,185,54,67,22,23,24,25,26,27,76,29,31,33,34,35,36,37,38,39,40,41,42,43,5,44,45,47,48,1,5,5,5,186,187,186,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,101,101,101,101,101,101,0,0,128,128,0,0,0,0,0,128,124,127,131,125,124,126,127,128,131,125,124,126,127,128,125,124,126,127,127,128,125,124,126,127,128,125,125,124,126,127,128,125,124,126,127,128,125,124,126,127,128,125,124,124,125,124,126,127,128,125,125,124,124,126,126,127,127,128,128,127,125,124,124,124,124,131,125,124,126,127,128,131,125,125,124,126,127,128,124,125,124,126,127,128,125,124,126,127,128,124,124,124,124,124,131,125,124,126,127,128,131,125,124,126,127,128,124,124,124,124,131,124,124,127,127,127,125,124,124,124,126,125,124,124,131,124,127,124,124,125,124,126,127,128,125,124,126,127,128,124,127,127,131,125,124,126,127,128,131,125,124,126,127,128,131,125,124,126,127,128,131,131,125,124,126,127,128,0,0,0,0,0,0,0,0,93,141,142,143,144,145,146,93,148,141,142,143,144,145,146,93,148,141,142,143,144,145,146,93,93,148,141,142,143,144,145,146,93,148,141,143,144,145,93,148,144,145,93,148,144,145,93,148,141,148,141,142,143,144,145,146,93,148,93,93,148,93,93,148,148,93,141,142,143,144,145,146,93,148,145,93,141,142,143,144,145,146,93,93,148,141,142,143,144,145,146,93,148,144,145,93,148,141,143,141,142,143,144,145,146,93,148,93,148,141,142,143,144,145,146,93,148,93,141,142,143,144,145,146,93,148,145,141,143,145,93,142,148,148,145,93,143,141,142,143,144,145,146,93,148,93,146,144,145,93,148,141,142,143,144,145,146,93,148,141,143,93,141,142,143,144,145,146,93,148,141,142,143,144,145,146,93,148,141,142,143,144,145,146,93,148,145,141,142,143,144,145,146,93,148,0,150,0,0,150,0,0,151,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,151,152,153,154,151,152,153,154,151,152,153,154,151,153,150,151,152,153,154,150,151,152,153,154,151,151,152,153,153,154,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,151,151,153,151,151,152,152,153,153,154,154,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,150,151,152,153,154,157,157,0,0,0,0,0,0,0,0,157,157,157,158,160,159,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,157,155,158,158,159,160,161,162,163,157,155,158,159,160,161,162,163,158,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,157,157,155,155,158,158,159,159,160,160,161,161,162,162,163,163,158,162,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,155,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,159,158,158,155,159,160,163,158,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,160,159,158,158,159,160,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,155,157,155,158,159,160,161,162,163,157,155,158,159,160,161,162,163,166,0,0,0,0,0,166,166,167,0,0,166,167,168,169,170,166,167,168,169,170,166,167,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,166,167,167,168,168,169,169,170,170,167,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,168,167,167,167,169,170,167,168,166,167,168,169,170,166,167,168,169,170,0,0,167,167,168,0,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,166,167,168,169,170,172,0,172,172,181,181,181,181,0,0,0,0,0,0,0,0,0,0,0,172,181,181,177,173,174,174,178,172,171,173,174,175,176,177,178,179,181,172,171,173,174,175,176,177,178,179,181,172,171,173,173,174,175,176,177,178,179,172,171,173,174,175,176,177,178,179,173,172,171,173,174,175,176,177,178,179,172,171,173,174,175,176,177,178,179,172,171,173,174,175,176,177,178,179,179,178,179,172,171,173,174,175,176,177,178,179,172,172,171,171,173,173,174,174,175,175,176,176,177,177,178,178,179,179,173,178,179,176,179,178,179,172,171,173,174,175,176,177,178,179,181,181,172,171,173,174,175,176,177,178,179,181,172,171,173,174,175,176,177,178,179,172,171,173,174,175,176,177,178,179,172,171,173,174,175,176,177,178,179,181,172,171,173,174,175,176,177,178,179,181,178,178,174,179,173,173,171,171,181,178,178,179,178,173,172,171,173,174,175,176,177,178,179,172,171,173,174,175,176,177,178,179,181,174,174,173,173,174,172,171,173,174,175,176,177,178,179,181,172,171,173,174,175,176,177,178,179,181,172,171,173,174,175,176,177,178,179,181,172,171,173,174,175,176,177,178,179,181],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[1,4],[[5,6,7],[[9,[8]]]],[[6,7],[[13,[[12,[10,11]]]]]],[[5,6,7],[[13,[[12,[10]]]]]],[[],[[13,[[12,[10]]]]]],[5,9],[[5,6],14],0,[[5,15,[17,[16]],18,19],[[13,[[12,[10]]]]]],[[[15,[20]],[17,[16]],18,20],[[13,[[12,[10,11]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[20,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[20,28],[29,29],[20,30],[31,31],[20,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[20,46],[47,47],[48,48],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,26],49],[[1,1],49],0,0,[[50,[53,[51,52]]],[[56,[54,55]]]],[[50,[53,[51,52]]],[[56,[22,55]]]],[[50,[53,[51,52]]],[[56,[23,55]]]],[[50,[53,[51,52]]],[[56,[24,55]]]],[[50,[53,[51,52]]],[[56,[25,55]]]],[[50,[53,[51,52]]],[[56,[26,55]]]],[[50,[53,[51,52]]],[[56,[27,55]]]],[[50,[53,[51,52]]],[[56,[29,55]]]],[[50,[53,[51,52]]],[[56,[31,55]]]],[[50,[53,[51,52]]],[[56,[33,55]]]],[[50,57],[[56,[38,55]]]],[[50,57],[[56,[47,55]]]],[[50,57],[[56,[48,55]]]],[[50,57],[[56,[1,55]]]],[[54,58],[[56,[59,60]]]],[[22,58],[[56,[59,60]]]],[[23,58],[[56,[59,60]]]],[[24,58],[[56,[59,60]]]],[[25,58],[[56,[59,60]]]],[[26,58],[[56,[59,60]]]],[[27,58],[[56,[59,60]]]],[[29,58],[[56,[59,60]]]],[[31,58],[[56,[59,60]]]],[[33,58],[[56,[59,60]]]],[[38,58],[[56,[59,60]]]],[[47,58],[[56,[59,60]]]],[[48,58],[[56,[59,60]]]],[[1,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[5],[20,61],[[20,62,6,8],[[13,[[12,[10,11]]]]]],[[5,15,6,8],[[13,[[12,[10]]]]]],[[5,15,6,8],[[9,[[63,[29,47]]]]]],[[5,6,[64,[48]]],[[9,[[63,[29,47]]]]]],[[5,15,6,20,8],[[65,[31,47]]]],[[20,62,6,8],[[13,[[12,[10,11]]]]]],[[5,15,6,8],[[13,[[12,[10]]]]]],0,[[],51],[[],51],[[],51],[[],51],[[],29],[[],31],[[],1],[29],[31],[33],[29],[31],[33],[66,[[56,[54]]]],[66,[[56,[67]]]],[66,[[56,[22]]]],[66,[[56,[23]]]],[66,[[56,[24]]]],[66,[[56,[25]]]],[66,[[56,[26]]]],[66,[[56,[27]]]],[66,[[56,[29]]]],[66,[[56,[31]]]],[66,[[56,[33]]]],[66,[[56,[38]]]],[66,[[56,[39]]]],[66,[[56,[40]]]],[66,[[56,[41]]]],[66,[[56,[42]]]],[66,[[56,[48]]]],[66,[[56,[1]]]],[[],4],[[],4],[[],4],[[],4],[[],68],[[],68],[[22,22],69],[[23,23],69],[[24,24],69],[[25,25],69],[[26,26],69],[[27,27],69],[[29,29],69],[[31,31],69],[[33,33],69],[[34,34],69],[[35,35],69],[[36,36],69],[[37,37],69],[[39,39],69],[[40,40],69],[[47,47],69],[[48,48],69],[[1,1],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[21,69],[28,69],[30,69],[32,69],[46,69],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[[31,73]],0,0,0,[[54,74],[[56,[75]]]],[[67,74],[[56,[75]]]],[[22,74],[[56,[75]]]],[[22,74],[[56,[75]]]],[[23,74],[[56,[75]]]],[[24,74],[[56,[75]]]],[[25,74],[[56,[75]]]],[[26,74],[[56,[75]]]],[[27,74],[[56,[75]]]],[[76,74],[[56,[75]]]],[[29,74],[[56,[75]]]],[[29,74],[[56,[75]]]],[[31,74],[[56,[75]]]],[[31,74],[[56,[75]]]],[[33,74],[[56,[75]]]],[[33,74],[[56,[75]]]],[[34,74],[[56,[75]]]],[[35,74],[[56,[75]]]],[[36,74],[[56,[75]]]],[[36,74],[[56,[75]]]],[[37,74],[[56,[75]]]],[[37,74],[[56,[75]]]],[[38,74],77],[[38,74],77],[[39,74],77],[[40,74],77],[[41,74],77],[[42,74],77],[[43,74],77],[[5,74],77],[[44,74],77],[[45,74],77],[[45,74],77],[[47,74],77],[[48,74],77],[[1,74],77],[[1,74],77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]]],26],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,[[56,[38]]]],[4,1],[15,[[64,[48]]]],[[20,62],[[13,[[12,[10,11]]]]]],[[5,15],[[13,[[12,[10]]]]]],[[5,15,8],1],[[5,15],83],[[5,84,[80,[85]]],[[13,[[12,[10]]]]]],[[84,[80,[85]]],[[13,[[12,[10,11]]]]]],[[22,86]],[[23,86]],[[24,86]],[[25,86]],[[26,86]],[[27,86]],[[29,86]],[[31,86]],[[33,86]],[[34,86]],[[35,86]],[[36,86]],[[37,86]],[[48,86]],0,[[87,88,89,20,90,91,[92,[16]],18],[[13,[[12,[10,11]]]]]],[[43,87,93,89,90,91,[94,[16]],18,95],[[13,[[12,[10]]]]]],0,[5,96],[28,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,20]],[[29,20]],[[31,20]],[[33,20]],[[47,19]],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],0,0,[[84,6],[[9,[98]]]],[[],99],[[],99],[[5,8,15]],[[5,8,15],91],[[91,8,1],91],[1,1],0,0,0,0,[47,6],[[],6],0,0,[5,96],[30,96],[[26,26],[[100,[49]]]],[[1,1],[[100,[49]]]],0,[[5,15,[17,[16]],18,19],[[9,[101]]]],[102],[102],[102],[[38,[0,[103,104]]],[[13,[[12,[10]]]]]],0,0,[[62,20,[17,[16]],18,[100,[[80,[79]]]]],[[13,[[12,[10,11]]]]]],[[5,62,19,[17,[16]],18,[100,[[80,[79]]]]],[[13,[[12,[10]]]]]],0,0,0,[[15,8],[[56,[[64,[48]],45]]]],[[105,8],[[56,[64,45]]]],[[54,106],56],[[67,106],56],[[22,106],56],[[23,106],56],[[24,106],56],[[25,106],56],[[26,106],56],[[27,106],56],[[29,106],56],[[31,106],56],[[33,106],56],[[38,106],56],[[39,106],56],[[40,106],56],[[41,106],56],[[42,106],56],[[48,106],56],[[1,106],56],[[54,107],[[56,[67,108]]]],0,0,[25,109],0,[[8,110,[0,[103,104]]],[[13,[[12,[10]]]]]],[[5,15,8,110],9],[[],[[13,[[12,[10,11]]]]]],[5,[[13,[[12,[10]]]]]],[44,[[111,[6]]]],[6,[[13,[[12,[10]]]]]],[6,[[13,[[12,[10]]]]]],[[],112],[43,112],[[],69],[5,69],[5,69],[[],69],0,[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[26,[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],114],[26,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[38,8],0,0,[[47,16],[[113,[[117,[47]]]]]],[61,[[113,[[117,[46]],11]]]],[6,[[13,[[12,[10]]]]]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],0,[38,[[13,[[12,[10]]]]]],0,[[25,119],69],[[67,[122,[[0,[120,121]]]]],[[56,[54,123]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[20]],20,[17,[16]]],[[13,[[12,[10,11]]]]]],[[5,15,19,[17,[16]]],[[13,[[12,[10]]]]]],[15],0,0,0,0,[[]],[[]],[[50,57],[[56,[101,55]]]],[[101,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[66,[[56,[101]]]],0,[[101,101],69],[[],69],[[],69],[70,[[56,[71,72]]]],[[101,74],77],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[],97],[[],101],0,0,0,0,[[101,106],56],[[],[[113,[79,11]]]],[[],56],[[],56],[[],118],[[]],0,0,0,0,0,0,0,0,0,0,[[124,8,91]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[125,125],[124,124],[126,126],[127,127],[20,46],[128,128],[[]],[[]],[[]],[[]],[[]],[[125,125],49],[[50,57],[[56,[125,55]]]],[[50,57],[[56,[124,55]]]],[[50,57],[[56,[126,55]]]],[[50,57],[[56,[127,55]]]],[[50,57],[[56,[128,55]]]],[[125,58],[[56,[59,60]]]],[[124,58],[[56,[59,60]]]],[[126,58],[[56,[59,60]]]],[[127,58],[[56,[59,60]]]],[[128,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[66,[[56,[125]]]],[66,[[56,[124]]]],0,[[125,125],69],[[124,124],69],[[126,126],69],[[127,127],69],[[128,128],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[46,69],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[[18,129,57,[130,[4]]],105],[[124,8,91]],[124,131],[[131,74],77],[[125,74],77],[[124,74],77],[[126,74],77],[[127,74],77],[[128,74],77],[[]],[[]],[132,125],[[]],[[]],[[]],[[]],[[4,101,4,[133,[119]],[136,[134,[133,[135]]]],91],124],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[]],[[]],[[]],[[]],0,[[124,134,137,[139,[138]],[140,[138]],91]],[[124,29]],[[124,7,31,91]],[[124,134,22]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[124,69],0,[[124,18,57,129,91],124],0,0,0,[[124,8,1,91]],[127,6],[[],6],0,[[125,125],[[100,[49]]]],0,0,0,0,[[125,106],56],[[124,106],56],0,0,0,0,0,0,[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[]],[[]],[[]],[[]],[[]],[[124,6,44,16],[[113,[[117,[127]]]]]],[61,[[113,[[117,[46]],11]]]],[127,[[113,[[117,[127]]]]]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[20,147],[93,93],[148,148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[50,[53,[51,52]]],[[56,[144,55]]]],[[50,[53,[51,52]]],[[56,[145,55]]]],[[50,[53,[51,52]]],[[56,[93,55]]]],[[50,[53,[51,52]]],[[56,[148,55]]]],[[144,58],[[56,[59,60]]]],[[145,58],[[56,[59,60]]]],[[93,58],[[56,[59,60]]]],[[148,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[[],141],[[],148],[66,[[56,[141]]]],[66,[[56,[142]]]],[66,[[56,[143]]]],[66,[[56,[144]]]],[66,[[56,[145]]]],[66,[[56,[146]]]],[66,[[56,[93]]]],[66,[[56,[148]]]],[[],4],[[93,93],69],[[148,148],69],[[],69],[[],69],[[],69],[[],69],[147,69],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],0,0,[[141,74],[[56,[75]]]],[[142,74],[[56,[75]]]],[[143,74],[[56,[75]]]],[[144,74],[[56,[75]]]],[[145,74],[[56,[75]]]],[[146,74],[[56,[75]]]],[[93,74],[[56,[75]]]],[[93,74],[[56,[75]]]],[[148,74],[[56,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[],141],[[],143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[93,86]],[[148,86]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[93,20]],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[145,99],0,0,0,0,0,0,0,0,0,0,[[141,106],56],[[142,106],56],[[143,106],56],[[144,106],56],[[145,106],56],[[146,106],56],[[93,106],56],[[148,106],56],0,0,[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141],[143],[[],116],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[145,149],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,150],[151,151],[152,152],[153,153],[154,154],[[]],[[]],[[]],[[]],[[]],[[50,57],[[56,[151,55]]]],[[50,57],[[56,[152,55]]]],[[50,57],[[56,[153,55]]]],[[50,57],[[56,[154,55]]]],[[151,58],[[56,[59,60]]]],[[152,58],[[56,[59,60]]]],[[153,58],[[56,[59,60]]]],[[154,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],[[150,74],77],[[151,74],77],[[152,74],77],[[153,74],77],[[154,74],77],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],97],[[],97],[[],97],[[],97],0,[[151,106],56],[[153,106],56],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],118],[[],118],[[],118],[[],118],[[],118],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[155,16,138],[[56,[156]]]],[[155,16],[[56,[156]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[157,157],[155,155],[158,158],[20,46],[159,159],[160,160],[161,161],[162,162],[163,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[50,57],[[56,[157,55]]]],[[50,57],[[56,[155,55]]]],[[50,57],[[56,[158,55]]]],[[50,57],[[56,[159,55]]]],[[50,57],[[56,[160,55]]]],[[50,57],[[56,[161,55]]]],[[50,57],[[56,[162,55]]]],[[50,57],[[56,[163,55]]]],[[157,58],[[56,[59,60]]]],[[155,58],[[56,[59,60]]]],[[158,58],[[56,[59,60]]]],[[159,58],[[56,[59,60]]]],[[160,58],[[56,[59,60]]]],[[161,58],[[56,[59,60]]]],[[162,58],[[56,[59,60]]]],[[163,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[[157,157],69],[[155,155],69],[[158,158],69],[[159,159],69],[[160,160],69],[[161,161],69],[[162,162],69],[[163,163],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[46,69],0,[[157,74],77],[[155,74],77],[[158,74],77],[[159,74],77],[[160,74],77],[[161,74],77],[[162,74],77],[[163,74],77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],0,[158,6],[[],6],0,[[164,158,16],158],0,0,0,[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[156]],158],158],[[[56,[156]],158,164,16],158],[158,[[113,[[117,[158]]]]]],[61,[[113,[[117,[46]],11]]]],[[159,155,16],[[113,[[117,[158]]]]]],[[160,155,16],[[113,[[117,[158]]]]]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],2],[165],[[6,[111,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[166,166],[167,167],[20,46],[168,168],[169,169],[170,170],[[]],[[]],[[]],[[]],[[]],[[50,57],[[56,[166,55]]]],[[50,57],[[56,[167,55]]]],[[50,57],[[56,[168,55]]]],[[50,57],[[56,[169,55]]]],[[50,57],[[56,[170,55]]]],[[166,58],[[56,[59,60]]]],[[167,58],[[56,[59,60]]]],[[168,58],[[56,[59,60]]]],[[169,58],[[56,[59,60]]]],[[170,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[[166,166],69],[[167,167],69],[[168,168],69],[[169,169],69],[[170,170],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[46,69],[[166,74],77],[[167,74],77],[[168,74],77],[[169,74],77],[[170,74],77],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],97],[[],97],[[],97],[[],97],0,[167,6],[[],6],0,0,0,0,0,[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[]],[[]],[[]],[[]],[[]],[[167,164,16],167],[[167,164,16],167],[61,[[113,[[117,[46]],11]]]],[167,[[113,[[117,[167]]]]]],[[168,6,44,16],[[113,[[117,[167]]]]]],[[164,6,[64,[48]],16],138],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],118],[[],118],[[],118],[[],118],[[],118],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[16,171,51],[[56,[24,116]]]],[[16,171]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[172,172],[171,171],[173,173],[20,46],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[50,57],[[56,[172,55]]]],[[50,57],[[56,[171,55]]]],[[50,57],[[56,[173,55]]]],[[50,57],[[56,[174,55]]]],[[50,57],[[56,[175,55]]]],[[50,57],[[56,[176,55]]]],[[50,57],[[56,[177,55]]]],[[50,57],[[56,[178,55]]]],[[50,57],[[56,[179,55]]]],[[172,58],[[56,[59,60]]]],[[171,58],[[56,[59,60]]]],[[173,58],[[56,[59,60]]]],[[174,58],[[56,[59,60]]]],[[175,58],[[56,[59,60]]]],[[176,58],[[56,[59,60]]]],[[177,58],[[56,[59,60]]]],[[178,58],[[56,[59,60]]]],[[179,58],[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[58,[[56,[59,60]]]],[[],179],[66,[[56,[178]]]],[66,[[56,[179]]]],[[172,172],69],[[171,171],69],[[173,173],69],[[174,174],69],[[175,175],69],[[176,176],69],[[177,177],69],[[178,178],69],[[179,179],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[[],69],[46,69],[70,[[56,[71,72]]]],[70,[[56,[71,72]]]],0,[[179,73]],[[178,180,119],[[56,[48,181]]]],[[179,24,[133,[119]]],[[56,[[64,[48]],181]]]],[[172,74],77],[[171,74],77],[[173,74],77],[[174,74],77],[[175,74],77],[[176,74],77],[[177,74],77],[[178,74],77],[[179,74],77],[[181,74],77],[[181,74],77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[[80,[79]],[53,[51,52]]],[[56,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[[122,[120]],91]],[178,26],0,0,[173,6],[[],6],0,0,[102],[178,27],[[178,106],56],[[179,106],56],0,0,[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[],[[113,[79,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],116],[[164,[56,[24,116]],173,[133,[119]]],173],[173,173],[173,[[113,[[117,[173]]]]]],[61,[[113,[[117,[46]],11]]]],[[174,44,16,171],[[113,[[117,[173]]]]]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[],118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"NoteIndex"],[8,"Any"],[8,"IDynCommonModuleInit"],[15,"u64"],[3,"MintClientModule"],[3,"OperationId"],[3,"OutPoint"],[3,"Amount"],[6,"Result"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"SpendOOBRefund"],[3,"ModuleDatabaseTransaction"],[3,"DynGlobalClientContext"],[3,"Executor"],[3,"DynGlobalApi"],[6,"ModuleInstanceId"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"MintConsensusItem"],[3,"MintOutputSignatureShare"],[3,"MintOutputBlindSignatures"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"DynInput"],[3,"MintInput"],[3,"DynOutput"],[3,"MintOutput"],[3,"DynOutputOutcome"],[3,"MintOutputOutcome"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"MintError"],[3,"OOBNotes"],[4,"ReissueExternalNotesState"],[4,"SpendOOBState"],[3,"MintMeta"],[4,"MintMetaVariants"],[3,"MintClientGen"],[3,"MintClientContext"],[3,"InsufficientBalanceError"],[3,"DynState"],[4,"MintClientStateMachines"],[3,"SpendableNote"],[4,"Ordering"],[8,"Read"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[3,"BackupRequest"],[3,"DecodeError"],[4,"Result"],[6,"ModuleDecoderRegistry"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DynContext"],[3,"DatabaseTransaction"],[3,"ClientInput"],[3,"TieredMulti"],[3,"ClientOutput"],[8,"Deserializer"],[3,"SignedBackupRequest"],[3,"HashEngine"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"IntoIterator"],[3,"Formatter"],[3,"Error"],[3,"MintCommonGen"],[6,"Result"],[3,"InvalidAmountTierError"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[15,"str"],[3,"TieredSummary"],[3,"Client"],[3,"OsString"],[8,"Hasher"],[3,"FederationId"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"Notifier"],[3,"MintClientConfig"],[3,"ModuleNotifier"],[3,"DynModuleApi"],[3,"TransactionItemAmount"],[3,"Request"],[3,"OperationLogEntry"],[3,"ModuleKind"],[4,"Option"],[3,"EcashBackup"],[3,"Demand"],[8,"Serialize"],[8,"Send"],[8,"Stream"],[8,"Serializer"],[3,"KeyPair"],[3,"Error"],[3,"XOnlyPublicKey"],[3,"Duration"],[3,"Receiver"],[3,"MultiApiVersion"],[3,"Vec"],[3,"DynCommonModuleInit"],[3,"Message"],[3,"String"],[3,"StateTransition"],[3,"TypeId"],[3,"AggregatePublicKey"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[4,"Error"],[3,"MintRestoreInProgressState"],[3,"CompressedBlindedMessage"],[3,"MintRestoreFailedState"],[3,"MintRestoreStateMachine"],[4,"MintRestoreStates"],[3,"PublicKey"],[3,"Range"],[3,"EcashRecoveryFinalState"],[3,"BlindedMessage"],[3,"Tiered"],[3,"PeerId"],[3,"PublicKeyShare"],[3,"BTreeMap"],[4,"ConsensusItem"],[3,"TransactionId"],[3,"HashSet"],[3,"BTreeSet"],[3,"MintGenParams"],[3,"MintGenParamsConsensus"],[3,"MintConfig"],[3,"MintConfigLocal"],[3,"MintConfigConsensus"],[3,"MintConfigPrivate"],[3,"DynClientConfig"],[3,"FeeConsensus"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"NoteKey"],[3,"NoteKeyPrefix"],[3,"NextECashNoteIndexKey"],[3,"NextECashNoteIndexKeyPrefix"],[3,"MintInputCommon"],[4,"TxSubmissionError"],[4,"MintInputStates"],[3,"MintInputStateMachine"],[3,"MintInputStateCreated"],[3,"MintInputStateRefund"],[3,"MintInputStateSuccess"],[3,"MintInputStateError"],[3,"MintInputStateRefundSuccess"],[3,"ClientSMDatabaseTransaction"],[3,"SystemTime"],[4,"MintOOBStates"],[3,"MintOOBStateMachine"],[3,"MintOOBStatesCreated"],[3,"MintOOBStatesUserRefund"],[3,"MintOOBStatesTimeoutRefund"],[3,"MintOutputCommon"],[4,"MintOutputStates"],[3,"MintOutputStateMachine"],[3,"MintOutputStatesCreated"],[3,"MintOutputStatesAborted"],[3,"MintOutputStatesFailed"],[3,"MintOutputStatesSucceeded"],[3,"NoteIssuanceRequest"],[3,"MultiNoteIssuanceRequest"],[3,"BlindedSignature"],[4,"NoteFinalizationError"],[8,"MintClientExt"],[3,"MintModuleTypes"],[3,"OOBSpendTag"],[3,"OOBReissueTag"],[13,"SpendOOB"],[13,"Reissuance"]]},\
"fedimint_mint_common":{"doc":"","t":"CDRERNNNNNNNNRDDEDDDDDDDNNDDECNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLMLLLLMMLLLMMLLLLLLLLLLDDDDDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDDNDDNNNEDDDNNDDNDDNDDDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BackupRequest","BlindNonce","CONSENSUS_VERSION","CombineError","DEFAULT_MAX_NOTES_PER_DENOMINATION","DifferentNonce","DifferentStructureSigShare","ExceededMaxNotes","InvalidAmountTier","InvalidAmountTier","InvalidNote","InvalidSignature","InvalidSignature","KIND","MintCommonGen","MintConsensusItem","MintError","MintInput","MintModuleTypes","MintOutput","MintOutputBlindSignatures","MintOutputOutcome","MintOutputSignatureShare","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PeerErrorType","SignedBackupRequest","SpentCoin","TooFewNotes","TooFewShares","TooFewValidShares","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","db","decoder","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","out_point","partial_cmp","provide","provide","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signatures","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","deserialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","FeeConsensus","MintClientConfig","MintConfig","MintConfigConsensus","MintConfigLocal","MintConfigPrivate","MintGenParams","MintGenParamsConsensus","TEN_BTC_IN_SATS","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","max_notes_per_denomination","max_notes_per_denomination","mint_amounts","note_issuance_abs","note_spend_abs","peer_tbs_pks","peer_tbs_pks","private","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tbs_pks","tbs_sks","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","NonceKeyPrefix","NoteNonce","OutputOutcome","OutputOutcomeKey","OutputOutcomeKeyPrefix","ProposedPartialSig","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSig","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","hash","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_common"],[416,"fedimint_mint_common::common"],[457,"fedimint_mint_common::config"],[661,"fedimint_mint_common::db"]],"d":["","<code>Nonce</code> but blinded by the user key","","","By default, the maximum notes per denomination when …","","","","","","","","","","","Data structures taking into account different amount tiers …","","","","","Result of Federation members confirming <code>MintOutput</code> by …","","Blind signature share from one Federation peer for a …","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the minteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Reference to a Federation Transaction containing an …","","","","","","","","","","","","","(Partial) signatures","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the note’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees charged for ecash transactions","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum amount of change a client can request","","","","","The set of public keys for blind-signing all peers and note","","","","","","","","","","","","Secret keys for blind-signing ecash of varying note …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","","","","","Transaction id and output index identifying an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,17,17,19,17,19,19,17,19,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,0,19,19,18,18,2,10,12,15,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,2,2,5,6,7,8,9,10,10,12,12,15,15,16,17,18,19,2,5,6,7,8,9,10,12,15,16,17,18,19,8,0,0,2,5,6,7,8,9,10,12,15,2,5,6,7,8,9,10,12,15,2,5,6,7,8,9,10,12,15,0,38,10,12,10,12,15,10,12,15,2,5,6,7,8,9,10,12,15,2,10,12,15,2,5,6,7,8,9,10,12,15,16,17,18,19,2,2,5,5,6,6,7,7,8,8,9,9,10,10,12,12,15,15,16,16,17,17,18,18,19,19,2,10,12,15,2,5,6,7,8,9,10,12,15,12,2,2,5,6,7,8,9,38,10,10,12,12,15,15,16,17,18,18,19,19,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,19,2,5,6,7,8,8,9,10,12,15,2,5,6,7,8,9,10,12,15,16,17,18,19,2,5,6,7,8,9,10,12,15,16,17,18,19,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,2,10,12,15,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,2,8,18,19,2,5,6,7,8,9,10,12,15,2,7,2,5,6,7,8,8,9,10,12,15,8,2,5,6,7,8,9,10,12,15,16,17,18,19,2,10,12,15,18,19,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,7,94,2,5,6,7,8,9,38,10,12,15,16,17,18,19,0,0,58,59,58,59,58,58,58,58,59,58,59,58,59,58,59,58,58,58,58,59,58,59,58,59,58,59,58,59,58,58,58,59,58,59,58,59,59,58,59,0,0,0,0,0,0,0,0,0,73,67,68,69,70,71,72,73,75,67,68,69,70,71,72,73,75,67,68,69,70,71,72,73,73,75,67,68,69,70,71,72,73,75,67,69,70,71,73,75,70,71,73,75,70,71,73,75,67,75,67,68,69,70,71,72,73,75,73,73,75,73,73,75,75,73,67,68,69,70,71,72,73,75,71,73,67,68,69,70,71,72,73,73,75,67,68,69,70,71,72,73,75,70,71,73,75,67,69,67,68,69,70,71,72,73,75,73,75,67,68,69,70,71,72,73,75,73,67,68,69,70,71,72,73,75,71,67,69,71,73,68,75,75,71,73,69,67,68,69,70,71,72,73,75,73,72,70,71,73,75,67,68,69,70,71,72,73,75,67,69,73,67,68,69,70,71,72,73,75,67,68,69,70,71,72,73,75,67,68,69,70,71,72,73,75,71,67,68,69,70,71,72,73,75,0,0,0,78,0,0,82,82,78,0,0,0,0,78,78,0,0,78,0,0,78,0,0,0,82,82,79,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,80,81,82,83,84,78,79,80,81,82,83,84,80,85,86,87,88,89,90,81,91,82,92,83,93,84,80,85,86,87,88,89,90,81,91,82,92,83,93,84,80,85,86,87,88,89,90,81,91,82,92,83,93,84,84,84,80,84,80,80,84,84,80,86,88,81,82,83,84,78,78,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,80,80,85,86,86,87,88,88,89,90,81,81,91,82,82,92,83,83,93,84,78,79,80,81,82,83,84,79,80,79,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,79,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,79,79,79,79,80,86,88,81,82,83,84,79,84,80,80,85,85,86,86,87,87,88,88,89,89,90,90,81,81,91,91,82,82,92,92,83,83,93,93,84,78,79,80,81,82,83,84,78,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84,78,79,80,85,86,87,88,89,90,81,91,82,92,83,93,84],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[3,11],[12,12],[3,13],[3,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,8],20],0,0,[[21,22],[[24,[2,23]]]],[[21,22],[[24,[5,23]]]],[[21,22],[[24,[6,23]]]],[[21,22],[[24,[7,23]]]],[[21,22],[[24,[8,23]]]],[[21,22],[[24,[9,23]]]],[[21,22],[[24,[10,23]]]],[[21,22],[[24,[12,23]]]],[[21,22],[[24,[15,23]]]],[[2,25],[[24,[26,27]]]],[[5,25],[[24,[26,27]]]],[[6,25],[[24,[26,27]]]],[[7,25],[[24,[26,27]]]],[[8,25],[[24,[26,27]]]],[[9,25],[[24,[26,27]]]],[[10,25],[[24,[26,27]]]],[[12,25],[[24,[26,27]]]],[[15,25],[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],0,[[],28],[[],10],[[],12],[10],[12],[15],[10],[12],[15],[29,[[24,[2]]]],[29,[[24,[5]]]],[29,[[24,[6]]]],[29,[[24,[7]]]],[29,[[24,[8]]]],[29,[[24,[9]]]],[29,[[24,[10]]]],[29,[[24,[12]]]],[29,[[24,[15]]]],[[],30],[[],30],[[],30],[[],30],[[2,2],31],[[5,5],31],[[6,6],31],[[7,7],31],[[8,8],31],[[9,9],31],[[10,10],31],[[12,12],31],[[15,15],31],[[16,16],31],[[17,17],31],[[18,18],31],[[19,19],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[4,31],[11,31],[13,31],[14,31],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[[12,35]],[[2,36],37],[[2,36],37],[[5,36],37],[[6,36],37],[[7,36],37],[[8,36],37],[[9,36],37],[[38,36],37],[[10,36],37],[[10,36],37],[[12,36],37],[[12,36],37],[[15,36],37],[[15,36],37],[[16,36],37],[[17,36],37],[[18,36],37],[[18,36],37],[[19,36],37],[[19,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,19],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]]],8],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,45]],[[5,45]],[[6,45]],[[7,45]],[[8,45]],[[9,45]],[[10,45]],[[12,45]],[[15,45]],[[16,45]],[[17,45]],[[18,45]],[[19,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,46]],[[10,46]],[[12,46]],[[15,46]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],0,[[8,8],[[48,[20]]]],[49],[49],[[2,50],24],[[5,50],24],[[6,50],24],[[7,50],24],[[8,50],24],[[9,50],24],[[10,50],24],[[12,50],24],[[15,50],24],0,[7,51],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[8,[[53,[40]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[8,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[7,57],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[21,22],[[24,[58,23]]]],[[58,25],[[24,[26,27]]]],[25,[[24,[26,27]]]],[29,[[24,[58]]]],[29,[[24,[59]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[[58,36],37],[[59,36],37],[[]],[[]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[58,60],0,[[]],[[]],[[],47],[[],47],0,0,[[58,50],24],[[59,50],24],[[58,61],[[62,[59]]]],0,0,[[],[[53,[40,52]]]],[[],24],[[],24],[[],24],[[],24],[[],56],[[],56],[[59,[65,[[0,[63,64]]]]],[[24,[58,66]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[3,74],[75,75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[21,22],[[24,[70,23]]]],[[21,22],[[24,[71,23]]]],[[21,22],[[24,[73,23]]]],[[21,22],[[24,[75,23]]]],[[70,25],[[24,[26,27]]]],[[71,25],[[24,[26,27]]]],[[73,25],[[24,[26,27]]]],[[75,25],[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[[],67],[[],75],[29,[[24,[67]]]],[29,[[24,[68]]]],[29,[[24,[69]]]],[29,[[24,[70]]]],[29,[[24,[71]]]],[29,[[24,[72]]]],[29,[[24,[73]]]],[29,[[24,[75]]]],[[],30],[[73,73],31],[[75,75],31],[[],31],[[],31],[[],31],[[],31],[74,31],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],0,0,[[67,36],37],[[68,36],37],[[69,36],37],[[70,36],37],[[71,36],37],[[72,36],37],[[73,36],37],[[73,36],37],[[75,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[],67],[[],69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[73,45]],[[75,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[73,46]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[71,76],0,0,0,0,0,0,0,0,0,0,[[67,50],24],[[68,50],24],[[69,50],24],[[70,50],24],[[71,50],24],[[72,50],24],[[73,50],24],[[75,50],24],0,0,[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67],[69],[[],55],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[71,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,22],[[24,[80,23]]]],[[21,22],[[24,[85,23]]]],[[21,22],[[24,[86,23]]]],[[21,22],[[24,[87,23]]]],[[21,22],[[24,[88,23]]]],[[21,22],[[24,[89,23]]]],[[21,22],[[24,[90,23]]]],[[21,22],[[24,[81,23]]]],[[21,22],[[24,[91,23]]]],[[21,22],[[24,[82,23]]]],[[21,22],[[24,[92,23]]]],[[21,22],[[24,[83,23]]]],[[21,22],[[24,[93,23]]]],[[21,22],[[24,[84,23]]]],[[80,25],[[24,[26,27]]]],[[85,25],[[24,[26,27]]]],[[86,25],[[24,[26,27]]]],[[87,25],[[24,[26,27]]]],[[88,25],[[24,[26,27]]]],[[89,25],[[24,[26,27]]]],[[90,25],[[24,[26,27]]]],[[81,25],[[24,[26,27]]]],[[91,25],[[24,[26,27]]]],[[82,25],[[24,[26,27]]]],[[92,25],[[24,[26,27]]]],[[83,25],[[24,[26,27]]]],[[93,25],[[24,[26,27]]]],[[84,25],[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],[25,[[24,[26,27]]]],0,[29,[[24,[84]]]],[[80,80],31],[[84,84],31],[[],31],[[],31],[[],31],[[],31],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[32,[[24,[33,34]]]],[[78,36],37],[[78,36],37],[[80,36],37],[[85,36],37],[[86,36],37],[[87,36],37],[[88,36],37],[[89,36],37],[[90,36],37],[[81,36],37],[[91,36],37],[[82,36],37],[[92,36],37],[[83,36],37],[[93,36],37],[[84,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[[41,[40]],[43,[28,42]]],[[24,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,26],[[48,[78]]]],[[80,45]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],79],[79,26],0,[79,48],[79,48],[[79,26],48],[[80,50],24],[[86,50],24],[[88,50],24],[[81,50],24],[[82,50],24],[[83,50],24],[[84,50],24],[79],0,[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[],[[53,[40,52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[3,"MintConsensusItem"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"MintOutputSignatureShare"],[3,"MintOutputBlindSignatures"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"MintInput"],[3,"DynInput"],[3,"MintOutput"],[3,"DynOutput"],[3,"DynOutputOutcome"],[3,"MintOutputOutcome"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"MintError"],[4,"Ordering"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"MintCommonGen"],[3,"InvalidAmountTierError"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[3,"XOnlyPublicKey"],[3,"Global"],[3,"Vec"],[3,"Message"],[3,"String"],[3,"TypeId"],[3,"AggregatePublicKey"],[3,"BackupRequest"],[3,"SignedBackupRequest"],[3,"Hash"],[3,"KeyPair"],[6,"Result"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[4,"Error"],[3,"MintGenParams"],[3,"MintGenParamsConsensus"],[3,"MintConfig"],[3,"MintConfigLocal"],[3,"MintConfigConsensus"],[3,"MintConfigPrivate"],[3,"MintClientConfig"],[3,"DynClientConfig"],[3,"FeeConsensus"],[3,"ModuleKind"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"ECashUserBackupSnapshot"],[3,"NonceKeyPrefix"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"OutputOutcomeKeyPrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"],[3,"MintModuleTypes"]]},\
"fedimint_mint_server":{"doc":"","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLMLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BackupRequest","Mint","MintGen","SignedBackupRequest","VerificationCache","api_endpoints","api_endpoints","as_any","as_any","as_common","audit","audit","await_consensus_proposal","await_consensus_proposal","blind_sign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone_into","clone_into","common","consensus_decode","consensus_encode","consensus_encode_dyn","consensus_proposal","consensus_proposal","database_version","decoder","decoder","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","distributed_gen","distributed_gen","drop","drop","drop","drop","drop","dump_database","dump_database","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_ref","from_ref","get_client_config","get_client_config","get_database_migrations","handle_backup_request","handle_recover_request","id","init","init","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","module_kind","new","output_status","output_status","payload","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","pub_key","pub_key","pub_key_shares","request","sec_key","serialize","serialize","sign","signature","supported_api_versions","supported_api_versions","timestamp","to_bytes","to_dyn_common","to_owned","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_params","verify_valid","versions","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_mint_server"]],"d":["","Federated mint member mint","","","","","","","","","Queries the database and returns all assets and …","","","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constructs a new mint","Retrieve the current status of the output. Depending on …","","","This function is called once for every consensus item. The …","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,25,24,1,1,1,1,1,24,1,25,30,37,24,1,25,30,37,1,1,1,24,25,25,24,25,0,30,30,30,1,1,24,24,1,24,1,25,30,37,24,1,25,30,37,30,37,24,24,24,1,25,30,37,24,24,30,37,24,1,25,30,37,24,1,25,30,37,30,24,25,24,24,24,1,1,30,24,24,24,1,25,30,37,24,1,25,30,37,24,1,25,30,37,24,1,1,1,30,1,1,1,1,1,1,1,1,1,37,1,30,37,30,37,24,24,30,30,24,24,25,24,24,24,1,25,30,37,24,1,25,30,37,24,1,25,30,37,24,24,24,37,24,24,1,25,30,37],"f":[0,0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],6],[[],7],[[[9,[8]],10],[[13,[[12,[11,5]]]]]],[[1,9,10],[[13,[[12,[11]]]]]],[[1,9],[[13,[[12,[11]]]]]],[[[9,[8]]],[[13,[[12,[11,5]]]]]],[[1,[15,[14]]],[[18,[16,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[0,[19,20]]]],[[[22,[21]]],23],0,[24,24],[[],23],[25,25],[[]],[[]],0,[[26,[29,[27,28]]],[[18,[30,31]]]],[[30,32],[[18,[33,34]]]],[32,[[18,[33,34]]]],[[1,9],[[13,[[12,[11]]]]]],[[[9,[8]],8],[[13,[[12,[11,5]]]]]],[[],35],[[],27],[[],27],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[36,[[18,[30]]]],[36,[[18,[37]]]],[[38,39],[[13,[[12,[11,5]]]]]],[[24,38,39],[[13,[[12,[11]]]]]],[33],[33],[33],[33],[33],[[24,9,[3,[40]]],[[13,[[12,[11]]]]]],[[[9,[8]],[3,[40,5]]],[[13,[[12,[11,5]]]]]],[41,[[18,[42,43]]]],[41,[[18,[42,43]]]],[[24,44],45],[[1,44],45],[[25,44],45],[[30,44],[[18,[46]]]],[[37,44],[[18,[46]]]],[[]],[[]],[[]],[[]],[[]],[[[22,[47]],[29,[27,28]]],[[18,[48]]]],[[]],[[]],[[24,49],[[51,[50]]]],[[8,49],[[18,[52,53]]]],[[],[[54,[35,5]]]],[[1,9,37],[[18,[55]]]],[[1,9,56],[[58,[57]]]],0,[[59,60,61],[[13,[[12,[11,5]]]]]],[[24,59,60,61],[[13,[[12,[11]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[],62],[[],62],[[],62],[[],62],[[],62],[[],63],[64,1],[[[9,[8]],65,8],[[13,[[12,[11,5]]]]]],[[1,9,65],[[13,[[12,[11]]]]]],0,[[[9,[8]],66,67],[[13,[[12,[11,5]]]]]],[[1,9,68,67],[[13,[[12,[11]]]]]],[[[9,[8]],21,23],[[13,[[12,[11,5]]]]]],[[1,9,69],[[13,[[12,[11]]]]]],[[[9,[8]],70,65],[[13,[[12,[11,5]]]]]],[[1,9,71,65],[[13,[[12,[11]]]]]],[1,[[74,[72,73]]]],0,0,0,0,[[30,75],18],[[37,75],18],[[30,76],[[18,[37,53]]]],0,[[],77],[24,77],0,[[],[[3,[47,5]]]],[[],78],[[]],[[]],[[[22,[67]],39],[[54,[67,59,5]]]],[[24,[22,[67]],39],[[54,[67,59]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],79],[[],79],[[],79],[[],79],[[],79],[[24,67,59],51],[[67,59],[[18,[53]]]],[39,[[18,[53]]]],[[37,[82,[[0,[80,81]]]]],[[18,[30,83]]]],[[24,84],[[22,[85]]]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Mint"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"BlindNonce"],[3,"TieredMulti"],[3,"MintOutputSignatureShare"],[4,"MintError"],[4,"Result"],[8,"Iterator"],[8,"MaybeSend"],[3,"DynInput"],[15,"slice"],[3,"DynVerificationCache"],[3,"MintGen"],[3,"VerificationCache"],[8,"Read"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[3,"BackupRequest"],[3,"DecodeError"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"DatabaseVersion"],[8,"Deserializer"],[3,"SignedBackupRequest"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u8"],[4,"DecodingError"],[3,"ServerModuleConsensusConfig"],[3,"MintClientConfig"],[6,"Result"],[3,"ClientModuleConfig"],[3,"Error"],[3,"BTreeMap"],[3,"ApiError"],[3,"XOnlyPublicKey"],[3,"ECashUserBackupSnapshot"],[4,"Option"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"Request"],[3,"ModuleKind"],[3,"MintConfig"],[3,"OutPoint"],[3,"DynModuleConsensusItem"],[3,"PeerId"],[3,"MintConsensusItem"],[3,"MintInput"],[3,"DynOutput"],[3,"MintOutput"],[3,"Amount"],[3,"AggregatePublicKey"],[3,"HashMap"],[8,"Serializer"],[3,"KeyPair"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[3,"TypeId"],[8,"Signing"],[8,"Verification"],[3,"Secp256k1"],[4,"Error"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"]]},\
"fedimint_rocksdb":{"doc":"","t":"DDDLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLL","n":["RocksDb","RocksDbReadOnly","RocksDbTransaction","begin_transaction","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit_tx","commit_tx","fmt","from","from","from","from","inner","into","into","into","into_request","into_request","into_request","next_prefix","open","open_read_only","raw_find_by_prefix","raw_find_by_prefix","raw_find_by_prefix_sorted_descending","raw_find_by_prefix_sorted_descending","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_by_prefix","raw_remove_entry","raw_remove_entry","rocksdb","rollback_tx_to_savepoint","rollback_tx_to_savepoint","set_tx_savepoint","set_tx_savepoint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"fedimint_rocksdb"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,5,6,1,5,6,1,5,6,1,5,6,1,1,1,5,6,1,5,6,1,0,1,5,5,6,5,6,5,6,5,6,5,6,5,6,0,5,6,5,6,5,6,1,5,6,1,5,6,1,5,6,1],"f":[0,0,0,[1,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[1,7],8],[[]],[[]],[9,1],[[]],[1,9],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[[12,[11]]],[[14,[[13,[11]]]]]],[[[16,[15]]],[[18,[1,17]]]],[[[16,[15]]],[[18,[5,17]]]],[[5,[12,[11]]],[[4,[[3,[2]]]]]],[[6,[12,[11]]],[[4,[[3,[2]]]]]],[[5,[12,[11]]],[[4,[[3,[2]]]]]],[[6,[12,[11]]],[[4,[[3,[2]]]]]],[[5,[12,[11]]],[[4,[[3,[2]]]]]],[[6,[12,[11]]],[[4,[[3,[2]]]]]],[[5,[12,[11]],[12,[11]]],[[4,[[3,[2]]]]]],[[6,[12,[11]],[12,[11]]],[[4,[[3,[2]]]]]],[[5,[12,[11]]],[[4,[[3,[2]]]]]],[[6,[12,[11]]],[[4,[[3,[2]]]]]],[[5,[12,[11]]],[[4,[[3,[2]]]]]],[[6,[12,[11]]],[[4,[[3,[2]]]]]],0,[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[]],[[]],[[]]],"c":[],"p":[[3,"RocksDb"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RocksDbReadOnly"],[3,"RocksDbTransaction"],[3,"Formatter"],[6,"Result"],[6,"OptimisticTransactionDB"],[3,"Request"],[15,"u8"],[15,"slice"],[3,"Vec"],[4,"Option"],[3,"Path"],[8,"AsRef"],[3,"Error"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_server":{"doc":"","t":"RDGIQESQDDDQIQSNNIDEDIDDDDDQNSOOOOMLLALKLAKXLLKLLLOLKKALALLLLLLLLLLLLLLLLLLLLLLLLLLLKLAFLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLKKALLLLLMAMLLLLLLLLLLLLLLOLOOOLLALLLALLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLKLLLLLLLLLLLMLLLLLLLLAOOLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMLALLLOOALOOOOOOFMLALALLLLMAKLLLLLOOKKKLLOOOALLLLLMFMLOLLLLLLLLOMLLLLLLLLLLALLAALAALLLLLLLLLLLLLLLLLLLLLLLLKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLALLLLLLLLLLLLLLDDDDDDLMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMMMMLMMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDNDNNNNNDDNIDGDIIIINNNDIGEEEDGDNNNNNENDNNNNDKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMKLLLLLLLLLMLLLLLLLLLLLLLLKLKLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLKLKLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMMLLMMLMMMMMLLLLKLLMLLLLLLLLMMLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLKLMMMDDDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDRRRLLLLLLLLLLLLLLLLLLLLMLLLLLLMLGDLLLLLLLLLLLLLNRNDDDNGDDQQRNEIEEGNRDNNNDNNNNIDEQQRIDNNDQNIDDDDDGDGNEIILAMMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFMMMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLKLAMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKKLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLKLLMMMLFMMMMFMMMMMMMMMLLLLMLLLLMMLLLAAALLLLLLLLLLLLLLLLLLKMLLLLMLLMLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMKMMMLLLLLLLLLLLLLLLLLLLLLLDDDDDLMMMMLMLLLLLLLLLLLLLLLLLLLMMLMMMMMLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLMMLMMLLMMLMMMMMMMLLFLLLLLMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDENINDLLLLLLLLLLLLLLLLLLMMKMMLLLLLLLLLLLMLLMLLLLLLLLLLLLLMMMMMMMLKLKLLFMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRFFFFFFFFFFFFFEDDDNDGGGNNDLLMMLLLLLLLLLLLLLLLMMLLLLLLMALLMLLLLMLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMMLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLFFNDNEGEGNRNGNNRMMLLLLLLLMLLMMMLLLLLLLLLLMLLLLLLMMFLLLMMLLLLMLLLLLLMLLLLLLLLLLLLLIDDDDDDDQDEIIIIIIIDRRRRIGDIINLKKKKKLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLAKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLKLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLMLLLLMMLLLMMLLLLLLLLLLIDISQKLLLLKKLLLLLMKLLLKLLLLLDDIIIKKKKKLLLLKKLLKKLLLLLLLLLLMMLLLLKKKKLLLLLLLLLNDDNDDNDNDDNDEDNDDRNDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIYDNIEIYNYALLLLLLLLLLKLLLKLLLKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFNEDNDNENNNINNNNGGDDDNDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMLMMLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLDDDIDKLLLLLLLLLFLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLAFFDDDDDGDSQQQQIQENDSDDIQIIQDISIDEDDNQQSQQDQDIIQDDDQDNIQSMMMMOKKLLAKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLKMMMKMLMKKLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLKMLMLLKKMMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMLMMMKLMLLLLLLLLKMLMLKKKLMALMLLLLLLLLLLLLLLKKLLLKLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKAKLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLENGGDNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLDDDDDDDDMMMMMMMMMGRGGDDDLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMLMMLMLLMLLLLLLLLLLLLLLLAAAAADDDLMLLLLLLLLMMLLLLLLMLLMMLMLLLLLLLLLLLLLLLLLLLLLMMLLMMFLLMLLLLLLLLLLLLLLLLLGGGIDGDDLLLLLLLLMLLLLKLFLLLLLLLLLLLLLLLLKLALLMMMFMMMMMLLLLLLLLLLLLLLSDNSDSSDDNEDDSLLLLLLLLLLLLLLMMMLLLLLLLLFLLLMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMGDDGGIGMLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLSDNDDNDDRSSSDEDGDIGGDDDSSSMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMMMMMKMLLLLLLMLLMMLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLNNGELLLLLLLLLLLLLLLLLLLLLMMDNDNEINNDDDDMLLLLLLLLLLLLLLMMMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMMDIIDDDDDDDFLLLLLLLLLLLLLLLLLLMLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMLLLLLLMMMMMMLLFFFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLDDDMMFDLLLLLLLMLLLLLLLLLLNNGDENFFLLLLLLLLLLLLLLLLLLLLMLLLLMLMLLLLLLLLLLLLLLMMMMMMMDLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLGGIQDLLALLLLLLLKKLLLLLFFFFDENLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLL","n":["API_ENDPOINT_TIMEOUT","Amount","ApiResult","BitcoinHash","Common","CoreError","DISPLAY_BACKWARD","Engine","FedimintApiHandler","FedimintServer","Feerate","Gen","HasApiContext","Inner","LEN","MismatchingVariant","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","ServerModule","Tiered","TieredMulti","TieredMultiZip","TieredSummary","TransactionId","VerificationCache","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_define_with_instance_id_inner","_dyn_newtype_impl_deref_mut","_pd","add","add_assign","admin_client","all_tiers_exist_in","all_zeros","all_zeros","api","api_endpoints","apply","as_bits","as_hash","as_inner","as_inner","as_map","as_ref","async_trait_maybe_send","attach_endpoints","audit","await_consensus_proposal","backup","base32_len","bitcoinrpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","calculate_fee","cancellable","check_auth","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","config","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","context","core","count_items","count_items","count_tiers","count_tiers","count_tiers","data_dir","db","db","decoder","default","default","default","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_as_encodable_hex","div","dyn_newtype_define","dyn_newtype_display_passthrough","dyn_newtype_impl_dyn_clone_passhthrough","encode_hex","encode_hex_upper","encoding","engine","engine","entry","epoch","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_utils","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_iter","from_iter","from_iter","from_msats","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_sats","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str_in","gen_denominations","get","get","get_mut","get_mut","get_mut_or_default","handle","hash","hash","hash","hash","hash","hash","hash","hash","hex","impl_db_lookup","impl_db_record","inc","index","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_iter","into_iter","into_iter_items","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","iter","iter","iter","iter_items","iter_tiers","iters","longest_tier_except","macros","map","max_evil","max_tier","maybe_add_send","maybe_add_send_sync","module","module_kind","module_plugin_dyn_newtype_clone_passhthrough","module_plugin_dyn_newtype_define","module_plugin_dyn_newtype_display_passthrough","module_plugin_dyn_newtype_encode_decode","module_plugin_dyn_newtype_eq_passthrough","module_plugin_static_trait_define","msats","msats","mul","multiplexed","multiunzip","net","new","new","next","one_honest","out_idx","outcome","output_status","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl_common","plugin_types_trait_impl_config","process_consensus_item","process_input","process_output","provide","provide","push_db_key_items","push_db_pair_items","push_db_pair_items_no_serde","query","rem","rem_assign","represent_amount","run","run_config_gen","runtime","sats","sats_per_kvb","saturating_sub","serde_as_encodable_hex","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_as_encodable_hex","settings","source","spawn_api","spawn_consensus_api","stop","structural_eq","structural_eq","sub","sub_assign","sum","summary","task","threshold","tier","tiered","tiered_multi","tiers","time","timing","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public","to_string","to_string","to_string","to_string","to_string","to_string","to_usize","total","total_amount","total_amount","transaction","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","ConfigGenConnectionsRequest","ConfigGenParamsConsensus","ConfigGenParamsRequest","ConfigGenParamsResponse","PeerServerParams","WsAdminClient","add_config_gen_peer","api_url","audit","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fetch_last_epoch_history","fmt","fmt","fmt","fmt","fmt","force_process_epoch","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_config_gen_peers","get_consensus_config_gen_params","get_default_config_gen_params","get_verify_config_hash","inner","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","leader_api_url","meta","meta","modules","modules","name","new","our_current_id","our_name","p2p_url","peers","run_dkg","serialize","serialize","serialize","serialize","serialize","set_config_gen_connections","set_config_gen_params","set_password","signal_upgrade","start_consensus","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","ApiVersionSet","AwaitingPassword","ClientConfigDownloadToken","ConfigGenFailed","Connected","ConsensusRunning","Core","Disconnected","DynGlobalApi","DynModuleApi","Federation","FederationApiExt","FederationError","FederationResult","FederationStatus","GlobalFederationApi","IFederationApi","IGlobalFederationApi","IModuleFederationApi","InvalidPeerId","InvalidResponse","InvalidVout","InviteCode","JsonRpcClient","JsonRpcResult","OutputOutcomeError","PeerConnectionStatus","PeerError","PeerResponse","PeerResult","PeerStatus","ReadyForConfigGen","Rejected","ResponseDeserialization","ResponseDeserialization","Rpc","ServerStatus","SharingConfigGenParams","StatusResponse","Timeout","Upgrading","VerifiedConfigs","VerifyingConfigs","WsFederationApi","all_peers","all_peers","as_ref","await_output_outcome","await_output_outcome","await_tx_outcome","await_tx_outcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_status","consensus_config_hash","consensus_config_hash","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","default","default","default","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discover_api_version_set","discover_api_version_set","download_backup","download_backup","download_client_config","download_client_config","download_token","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation","fetch_epoch_count","fetch_epoch_count","fetch_epoch_history","fetch_epoch_history","fetch_output_outcome","fetch_output_outcome","fetch_tx_outcome","fetch_tx_outcome","flagged","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_config","from_invite_code","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","general","id","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_connected","is_retryable","is_retryable","last_contribution","module_id","modules","new","new_with_client","peer","peer_ids","peers","peers","peers","peers_flagged","peers_offline","peers_online","provide","provide","provide","request_current_consensus","request_raw","request_raw","request_with_strategy","result","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","session_count","source","source","status_by_peer","submit_transaction","submit_transaction","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_backup","upload_backup","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_module","with_module","out_idx","outputs_num","peer_id","ClientBackupKey","ClientBackupKeyPrefix","ClientBackupSnapshot","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deserialize","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","into","into","into","into_request","into_request","into_request","serialize","serialize","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BitcoinRpcConfig","FM_BITCOIND_COOKIE_FILE_VAR_NAME","FM_BITCOIN_RPC_KIND","FM_BITCOIN_RPC_URL","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_env_vars","from_ref","hash","into","into_request","kind","serialize","to_bytes","to_owned","try_from","try_into","type_id","url","vzip","Cancellable","Cancelled","borrow","borrow_mut","fmt","fmt","from","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","Auth","CORE_CONSENSUS_VERSION","Cancelled","ClientConfig","ClientConfigResponse","ClientModuleConfig","Commit","CommonModuleInitRegistry","ConfigGenModuleParams","ConfigGenParams","Consensus","Consensus","DEFAULT_MAX_CLIENT_CONNECTIONS","DistributedGen","DkgError","DkgGroup","DkgMessage","DkgPeerMsg","DkgResult","Done","ENV_MAX_CLIENT_CONNECTIONS","EmptyGenParams","Epoch","Extract","Failed","FederationId","G1","G2","HashedCommit","Hbbft","ISupportedDkgMessage","JsonWithKind","KeyType","Local","Local","META_FEDERATION_NAME_KEY","ModuleInitParams","ModuleInitRegistry","ModuleNotFound","ParamsNotFound","PeerUrl","Private","PublicKey","SGroup","ServerConfig","ServerConfigConsensus","ServerConfigLocal","ServerConfigPrivate","ServerModuleConfig","ServerModuleConfigGenParamsRegistry","ServerModuleConsensusConfig","ServerModuleInitRegistry","Share","SupportedDkgMessage","TypedServerModuleConfig","TypedServerModuleConsensusConfig","add_modules","api","api_auth","api_bind","api_endpoints","api_endpoints","api_urls","attach","auth_pk_set","auth_sks","available_decoders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_public_keys","broadcast_secret_key","cast","client_config","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code_version","config","config","connect","consensus","consensus","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_hash","consensus_json","consensus_version","decoders","decoders_strict","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","distributed_gen","distributedgen","download_token","download_token_limit","dummy","epoch_pk","epoch_pk_set","epoch_sks","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extract_keys","fed_bind","federation_id","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_erased","from_iter","from_msg","from_msg","from_msg","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_typed","from_typed","gen_cert_and_key","get","get_first_module_by_kind","get_first_module_by_kind_cfg","get_incoming_count","get_invite_code","get_module","get_module_cfg","get_module_cfg_by_instance_id","get_module_config","get_module_config_typed","get_module_id_by_kind","hash","hash","hash","hbbft_pk_set","hbbft_sks","identity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","io","is_kind","is_kind","iter_module_instances","iter_module_instances","kind","kind","kind","kind","kind","kind","kinds","load_from_file","local","local","local","local","max_connections","max_connections","meta","meta","modules","modules","modules","modules","modules_json","name","network_config","new","new","new","p2p_endpoints","p2p_network","p2p_urls","partial_cmp","peer_ids","private","private","provide","redecode_raw","redecode_raw","serde_binary_human_readable","serde_tls_cert_map","serde_tls_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","signature","source","supported_api_versions","supported_api_versions_summary","tls_certs","tls_certs","tls_config","tls_config","tls_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_common","to_erased","to_fake_ln_pub_key","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","to_string","to_typed","to_typed","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","value","value","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_fixed_empty_value","ConfigGenApi","ConfigGenLocalConnection","ConfigGenParamsLocal","ConfigGenSettings","ConfigGenState","add_config_gen_peer","api_auth","api_bind","api_bind","api_url","auth","auth","bad_request","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","config_generated_tx","context","data_dir","db","default_params","download_token_limit","download_token_limit","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_config_gen_params","get_config_gen_peers","get_consensus_config_gen_params","get_default_config_gen_params","get_peer_info","get_requested_params","get_verification_hashes","get_verify_config_hash","has_upgrade_flag","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","leader_api_url","local","local_connection","max_connections","max_connections","new","new","our_id","our_name","our_peer_info","our_private_key","p2p_bind","p2p_bind","p2p_url","peers","registry","requested_params","require_status","run_dkg","server_endpoints","server_status","set_config_gen_connections","set_config_gen_params","set_password","set_request","settings","start_consensus","state","status","task_group","tls_cert","tls_private","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_leader","verified_configs","vzip","vzip","vzip","vzip","vzip","write_configs","Dkg","DkgKeys","DkgRunner","DkgStep","Messages","PeerHandleOps","Result","ThresholdKeys","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone_into","clone_into","clone_into","commitments","dkg_config","exchange_pubkeys","f1_poly","f2_poly","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","gen_g","gen_h","hash","hashed_commits","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","multi","new","new","our_id","our_id","peers","peers","pk_shares","public_key_set","public_key_set","run","run_dkg_g1","run_dkg_key","run_dkg_multi_g2","run_g1","run_g2","scalar","secret_key_share","secret_key_share","sk_shares","step","tbs","threshold","threshold_crypto","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CLIENT_CONFIG","CLIENT_INVITE_CODE_FILE","CODE_VERSION","CONSENSUS_CONFIG","DB_FILE","ENCRYPTED_EXT","JSON_EXT","LOCAL_CONFIG","PLAINTEXT_PASSWORD","PRIVATE_CONFIG","SALT_FILE","encrypted_json_read","encrypted_json_write","plaintext_display_write","plaintext_json_read","plaintext_json_write","read_server_config","write_server_config","deserialize","serialize","deserialize","serialize","deserialize","serialize","ApiEvent","ConsensusOutcomeConversion","ConsensusProposal","FedimintConsensus","ForceProcessOutcome","FundingVerifier","HbbftConsensusOutcome","HbbftMessage","HbbftSerdeConsensusOutcome","Transaction","UpgradeSignal","VerificationCaches","add_input","add_output","api","api_event_cache","audit","await_consensus_proposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_caches","caches","cfg","clone","clone","clone","clone_into","clone_into","clone_into","db","debug","decoders","default","drop_peers","eq","eq","equivalent","equivalent","fee_amount","fmt","fmt","fmt","fmt","force_new_epoch","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","get_cache","get_consensus_proposal","hash","input_amount","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_at_upgrade_threshold","items","module_inits","modules","output_amount","process_consensus_item","process_consensus_outcome","save_epoch_history","server","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_funding","vzip","vzip","vzip","vzip","vzip","vzip","epoch_message","item_message","ApiEvent","ConsensusServer","Continue","EpochMessage","EpochStep","EpochTriggerEvent","LatestContributionByPeer","ModuleProposalEvent","NUM_EPOCHS_REJOIN_AHEAD","NewMessage","PeerMessage","RejoinRequest","RunEpochRequest","TRANSACTION_BUFFER_SIZE","api","api_receiver","await_next_epoch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone_into","connections","consensus","decoders","deserialize","erased_serialize","fmt","force_process_epoch","from","from","from","from_ref","handle_message","handle_step","hbbft","into","into","into","into_request","into_request","into_request","last_processed_epoch","latest_contribution_by_peer","module_parse_outcome","new","new_with","next_epoch_to_process","other_peers","pending_forced_epochs","process_events_then_propose","process_outcome","propose_epoch","rejoin_at_epoch","rejoin_at_epoch","request_rejoin","run_consensus","run_consensus_epoch","serialize","start_consensus","start_next_epoch","task_group","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ClientConfig","Decoder","DecoderBuilder","DynClientConfig","DynInput","DynModuleConsensusItem","DynOutput","DynOutputOutcome","DynType","DynUnknown","FinalizationError","IClientConfig","IInput","IModuleConsensusItem","IOutput","IOutputOutcome","Input","IntoDynInstance","KeyPair","LEGACY_HARDCODED_INSTANCE_ID_LN","LEGACY_HARDCODED_INSTANCE_ID_MINT","LEGACY_HARDCODED_INSTANCE_ID_WALLET","MODULE_INSTANCE_ID_GLOBAL","ModuleConsensusItem","ModuleInstanceId","ModuleKind","Output","OutputOutcome","SomethingWentWrong","add_xonly_tweak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","as_str","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_str","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode","decode_fns","decode_fns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","display_secret","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_parts","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_static_str","from_str","from_typed","from_typed","from_typed","from_typed","from_typed","hash","hash","hash","hash","hash","hash","hash","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","module_instance_id","new","new_global","partial_cmp","partial_cmp","public_key","secret_bytes","secret_key","serialize","serialize","server","sign_schnorr","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_decodable_type","x_only_public_key","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","deserialize","erased_serialize","erased_serialize","fmt","fmt","from","from","from_bytes","id","into","into","into_request","into_request","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","ClientModule","DynClientModule","IClientModule","KIND","Module","as_any","borrow","borrow_mut","clone","clone_into","decoder","decoder","deref","fmt","from","from","from_ref","inner","input_amount","into","into_request","module_kind","output_amount","to_owned","try_from","try_into","type_id","vzip","DynServerModule","DynVerificationCache","IServerModule","IVerificationCache","VerificationCache","api_endpoints","as_any","as_any","audit","await_consensus_proposal","borrow","borrow","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone_into","consensus_proposal","decoder","deref","deref","deref_mut","fmt","fmt","from","from","from","from","from_ref","inner","inner","into","into","into_request","into_request","output_status","process_consensus_item","process_input","process_output","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AcceptedTransaction","AcceptedTransactionKey","AcceptedTransactionKeyPrefix","ClientConfigDownload","ClientConfigDownloadKey","ClientConfigDownloadKeyPrefix","ClientConfigSignature","ClientConfigSignatureKey","ClientConfigSignatureShare","ClientConfigSignatureShareKey","ClientConfigSignatureSharePrefix","ConsensusUpgrade","ConsensusUpgradeKey","DbKeyPrefix","DbKeyPrefixIter","EpochHistory","EpochHistoryKey","EpochHistoryKeyPrefix","GLOBAL_DATABASE_VERSION","LastEpoch","LastEpochKey","Module","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","get","get_global_database_migrations","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BigSize","CountWrite","Decodable","Decodable","DecodeError","Decoded","DynEncodable","DynRawFallback","Encodable","Encodable","Raw","UnzipConsensus","as_hex","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode_hex","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_to_hex","consensus_encode_to_vec","consensus_hash","count","count","deserialize","emit_bool","emit_i16","emit_i32","emit_i64","emit_i8","emit_slice","emit_u16","emit_u32","emit_u64","emit_u8","eq","equivalent","equivalent","erased_serialize","expect_decoded","expect_decoded_ref","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_err","from_ref","from_str","inner","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","new_custom","provide","read","read","redecode_raw","serialize","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write","write","write_all","write_fixedint","write_varint","module_instance_id","raw","deserialize","serialize","ClientConfigSignatureShare","ConsensusItem","ConsensusUpgrade","ConsensusUpgrade","EpochOutcome","EpochOutcomeSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","MissingPreviousEpoch","MissingSignature","Module","NotEnoughValidSigShares","SerdeConsensusItem","SerdeEpochHistory","SerdeSignature","SerdeSignatureShare","SignedEpochOutcome","Transaction","UnzipConsensusItem","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_config_signature_share","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_sigs","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_upgrade","deserialize","deserialize","epoch","epoch_outcome_signature_share","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","items","last_hash","module","new","outcome","rejected_txs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AbbreviateDebug","AbbreviateHexBytes","AbbreviateJson","AbbreviatedDebug","OptStracktrace","abbreviated_fmt","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","floor_char_boundary","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","rust_log_full_enabled","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","serde","deserialize","serialize","ApiAuth","ApiEndpoint","ApiEndpointContext","ApiError","ApiRequest","ApiRequestErased","ApiVersion","CONSENSUS_VERSION","ClientConfig","ClientConfig","Common","Common","CommonModuleInit","ConsensusItem","ConsensusProposal","Contribute","CoreConsensusVersion","DATABASE_VERSION","DynCommonModuleInit","DynServerModuleInit","ExtendsCommonModuleInit","Gen","IDynCommonModuleInit","IServerModuleInit","Input","InputMeta","IntoModuleError","KIND","ModuleCommon","ModuleConsensusVersion","ModuleError","MultiApiVersion","MultiApiVersionIter","Other","Output","OutputOutcome","PATH","Param","Params","PeerHandle","Response","SerdeModuleEncoding","ServerModule","ServerModuleInit","State","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","Target","TransactionItemAmount","Trigger","TypedApiEndpoint","VerificationCache","ZERO","amount","amount","api","api","api_endpoint","api_endpoints","as_common","as_ref","as_ref","audit","audit","auth","await_consensus_proposal","bad_request","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","commit_tx_result","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","core","core_consensus","core_consensus","database_version","db","dbtx","dbtx","decoder","decoder","decoder","decoder","decoder_builder","default","default","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","distributed_gen","dump_database","dump_database","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exchange_pubkeys","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forces_new_epoch","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_inner","from_raw","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_typed","get_client_config","get_client_config","get_database_migrations","get_database_migrations","handle","handler","has_auth","has_auth","hash","hash","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_items","into_iter","into_iter","into_module_error_other","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","items","kind","major","map","message","minor","module_consensus","module_kind","module_kind","modules","new","new","new","new","new","new_auto_trigger","next","not_found","output_status","params","parse_params","path","peer_ids","process_consensus_item","process_input","process_output","provide","pub_keys","registry","request_auth","request_auth","run_dkg_g1","run_dkg_multi_g2","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server_error","source","supported_api_versions","supported_api_versions","to_bytes","to_bytes","to_bytes","to_dyn_common","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_typed","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner_known_module_kind","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unauthorized","validate_config","validate_config","validate_params","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_key_exists","wait_value_matches","with_auth","Audit","AuditItem","AuditSummary","ModuleSummary","add_items","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_audit","from_ref","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","items","milli_sat","module_name","module_summaries","name","net_assets","net_assets","net_assets","serialize","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DecodingMode","Fallback","ModuleDecoderRegistry","ModuleInstanceId","ModuleRegistry","Reject","ServerModuleRegistry","assert_reject_mode","attach_config_gen_params","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decoder_registry","decoding_mode","default","default","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from_iter","from_ref","from_ref","get","get_expect","get_with_kind","hash","inner","into","into","into_request","into_request","iter_modules","new","register_module","serialize","state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_fallback","ApiVersion","CoreConsensusVersion","ModuleConsensusVersion","MultiApiVersion","MultiApiVersionIter","SupportedApiVersionsSummary","SupportedCoreApiVersions","SupportedModuleApiVersions","api","api","core","core_consensus","core_consensus","major","minor","module_consensus","modules","Callback","MAX_PEER_OUT_OF_ORDER_MESSAGES","ModuleId","ModuleIdRef","ModuleMultiplexed","ModuleMultiplexerOutOfOrder","PeerConnectionMultiplexer","ban_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callbacks","clone","clone","clone_into","clone_into","default","deserialize","erased_serialize","fmt","from","from","from","from_ref","from_ref","into","into","into","into_request","into_request","into_request","key","msg","msgs","new","peer_bans_tx","peer_counts","receive","receive_callbacks_tx","run","send","send_requests_tx","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","api","connect","framed","peers","queue","ConsensusApi","ExpiringCache","RpcHandlerCtx","accepted_transaction_status","api_sender","api_versions_summary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_verification_caches","cfg","client_cfg","clone","clone","clone","clone_into","clone_into","clone_into","consensus_status_cache","context","context","data","db","download_client_config","duration","epoch_history","fmt","force_process_outcome","from","from","from","from_ref","from_ref","from_ref","get","get_epoch_count","get_federation_audit","get_federation_status","handle_backup_request","handle_recover_request","into","into","into","into_request","into_request","into_request","latest_contribution_by_peer","modules","new","new_module","peer_status_channels","rpc_context","server_endpoints","signal_upgrade","submit_transaction","supported_api_versions","to_owned","to_owned","to_owned","transaction_status","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_transaction_status","AnyConnector","ConnectResult","ConnectionListener","Connector","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","dns_sanitize","fmt","fmt","fmt","from","from","from","from_ref","from_ref","get_peer_by_cert","into","into","into","into_dyn","into_request","into_request","into_request","listen","listen","mock","new","new","our_certificate","our_private_key","our_private_key","parse_host_port","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BROKEN","FailureRate","FullyReliable","INTEGRATION_TEST","LatencyInterval","MAX","MILDLY_UNRELIABLE","MockConnector","MockNetwork","RandomlyUnreliable","StreamReliability","UnreliabilityGenerator","UnreliableDuplexStream","ZERO","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broken","clients","clients","clone","clone","clone","clone_into","clone_into","clone_into","connect_framed","connector","do_handshake","eq","equivalent","equivalent","failure_rate","flush_generator","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","generate","id","inner","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","latency","listen","max_millis","min_millis","new","new","new","new","new","poll_broken","poll_flush","poll_read","poll_shutdown","poll_write","random","random_fail","read_generator","reliability","shutdown_generator","sleep_future","successes","timeout","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_generator","flush_failure_rate","flush_latency","read_failure_rate","read_latency","shutdown_failure_rate","shutdown_latency","write_failure_rate","write_latency","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","encode","fmt","fmt","from","from","into","into","into_dyn","into_request","into_request","into_streaming_request","new","new","new_from_tcp","new_from_tcp","next_or_pending","ok","poll_close","poll_flush","poll_next","poll_ready","sink","start_send","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","BASE_MS","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","DelayCalculator","Disconnected","DisconnectedPeerConnectionState","NetworkConfig","PING_INTERVAL","PROD_DEFAULT","PROD_MAX_RETRY_DURATION_MS","PROD_MIN_RETRY_DURATION_MS","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","PeerStatusChannelReceiver","PeerStatusChannelSender","PeerStatusChannels","PeerStatusQuery","ReconnectPeerConnections","TEST_DEFAULT","TEST_MAX_RETRY_DURATION_MS","TEST_MIN_RETRY_DURATION_MS","ack","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","common","connect","connect","connection","connections","delay_calculator","deserialize","deserialize","disconnect","disconnect_err","erased_serialize","erased_serialize","failed_reconnect_counter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_all_status","identity","incoming","incoming","incoming_connections","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_received","max_retry_duration_ms","min_retry_duration_ms","msg","new","new","next_ping","our_id","outgoing","outgoing","peer_address","peer_id","peers","peers","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","reconnection_delay","resend_buffer_contents","resend_queue","response_sender","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","send_message_connected_inner","send_ping","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","status_query_receiver","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","id","increment","into","into","into","into_request","into_request","into_request","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Accepted","Rejected","SerdeOutputOutcome","TransactionStatus","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","from","from_ref","hash","into","into_request","serialize","to_owned","try_from","try_into","type_id","vzip","epoch","outputs","AllOrDeadline","Continue","DiscoverApiVersionSet","Failure","QueryStep","QueryStrategy","Retry","Success","ThresholdConsensus","UnionResponses","UnionResponsesSingle","VerifiableResponse","allow_threshold_fallback","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_versions","deadline","error_strategy","error_strategy","error_strategy","fmt","from","from","from","from","from","from","from","full_participation","inner","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","new","new","new","new","new","num_peers","process","process","process","process","process","process","process","request_timeout","request_timeout","responses","responses","responses","responses","retry","threshold","threshold","threshold","threshold_consensus","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","verifier","vzip","vzip","vzip","vzip","vzip","vzip","vzip","general","peers","Elapsed","MaybeSend","MaybeSync","RwLock","RwLockReadGuard","RwLockWriteGuard","TaskGroup","TaskHandle","TaskPanicGuard","TaskShutdownToken","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","clone","clone","clone_into","clone_into","completed","const_new","const_with_max_readers","data","data","default","default","deref","deref","deref_mut","downgrade","downgrade_map","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","get_mut","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into","into_future","into_inner","into_mapped","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_shutting_down","is_shutting_down","join_all","join_all_inner","make_handle","make_shutdown_rx","make_subgroup","map","map","marker","marker","mr","name","new","new","payment_path_failed","payment_path_successful","permits_acquired","poll","probe_failed","probe_successful","provide","read","read_owned","resource_span","resource_span","resource_span","s","s","s","shutdown","shutdown_join_all","sleep","sleep_until","spawn","spawn","spawn_local","timeout","to_owned","to_owned","to_string","to_string","to_string","try_downgrade_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","InvalidAmountTierError","Tiered","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_ref","hash","into","into_request","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","TieredMulti","TieredMultiZip","TieredSummary","_pd","iters","now","TimeReporter","borrow","borrow_mut","cancel","drop","finish","from","info","inner","into","into_request","level","new","threshold","threshold_millis","try_from","try_into","type_id","vzip","InvalidSignature","MissingSignature","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","agg_keys","agg_sign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from_bytes","from_ref","hash","inputs","into","into","into_request","into_request","outputs","provide","signature","to_bytes","to_owned","to_string","try_from","try_from","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","validate_signature","vzip","vzip","fee","hash","inputs","key","outputs","sig","tx","TxOutProof","block","block_header","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contains_tx","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","from","from_bytes","from_ref","hash","into","into_request","merkle_proof","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","BoxFuture","BoxStream","NextOrPending","Output","SanitizedUrl","borrow","borrow_mut","broadcaststream","fmt","fmt","from","into","into_request","new_borrowed","new_owned","next_or_pending","ok","to_string","try_from","try_into","type_id","vzip","write_new","write_new_async","write_overwrite","write_overwrite_async","BroadcastStream","BroadcastStreamRecvError","Lagged","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ref","inner","into","into","into_request","into_request","into_streaming_request","new","next_or_pending","ok","poll_next","provide","to_owned","to_string","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip"],"q":[[0,"fedimint_server"],[496,"fedimint_server::admin_client"],[642,"fedimint_server::api"],[1028,"fedimint_server::api::OutputOutcomeError"],[1030,"fedimint_server::api::PeerError"],[1031,"fedimint_server::backup"],[1100,"fedimint_server::bitcoinrpc"],[1133,"fedimint_server::cancellable"],[1148,"fedimint_server::config"],[1765,"fedimint_server::config::api"],[1895,"fedimint_server::config::distributedgen"],[1998,"fedimint_server::config::io"],[2016,"fedimint_server::config::serde_binary_human_readable"],[2018,"fedimint_server::config::serde_tls_cert_map"],[2020,"fedimint_server::config::serde_tls_key"],[2022,"fedimint_server::consensus"],[2139,"fedimint_server::consensus::debug"],[2141,"fedimint_server::consensus::server"],[2220,"fedimint_server::core"],[2597,"fedimint_server::core::backup"],[2637,"fedimint_server::core::client"],[2665,"fedimint_server::core::server"],[2714,"fedimint_server::db"],[2980,"fedimint_server::encoding"],[3092,"fedimint_server::encoding::DynRawFallback"],[3094,"fedimint_server::encoding::as_hex"],[3096,"fedimint_server::epoch"],[3303,"fedimint_server::fmt_utils"],[3355,"fedimint_server::hex"],[3356,"fedimint_server::hex::serde"],[3358,"fedimint_server::module"],[3857,"fedimint_server::module::audit"],[3934,"fedimint_server::module::registry"],[3996,"fedimint_server::module::version"],[4013,"fedimint_server::multiplexed"],[4073,"fedimint_server::net"],[4078,"fedimint_server::net::api"],[4154,"fedimint_server::net::connect"],[4222,"fedimint_server::net::connect::mock"],[4352,"fedimint_server::net::connect::mock::StreamReliability"],[4360,"fedimint_server::net::framed"],[4409,"fedimint_server::net::peers"],[4625,"fedimint_server::net::queue"],[4698,"fedimint_server::outcome"],[4723,"fedimint_server::outcome::TransactionStatus"],[4725,"fedimint_server::query"],[4837,"fedimint_server::query::QueryStep"],[4839,"fedimint_server::task"],[5019,"fedimint_server::tiered"],[5046,"fedimint_server::tiered_multi"],[5051,"fedimint_server::time"],[5052,"fedimint_server::timing"],[5071,"fedimint_server::transaction"],[5121,"fedimint_server::transaction::TransactionError"],[5128,"fedimint_server::txoproof"],[5159,"fedimint_server::util"],[5185,"fedimint_server::util::broadcaststream"]],"d":["How long to wait before timing out client connections","Represents an amount of BTC inside the system. The base …","","Trait which applies to hashes of all types.","","","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","Main server for running Fedimint consensus and APIs","","","Has the context necessary for serving API endpoints","The byte array that represents the hash internally.","Length of the hash, in bytes.","","","for consensus-related calculations given the number of …","<code>OutPoint</code> represents a globally unique output in a …","","","","","Represents notes of different denominations.","","","A transaction id for peg-ins, peg-outs and reissuances","","","","Example","","","","","","","","Verifies that all keys in <code>self</code> are present in the keys of …","Returns an all zero hash.","","","Returns a list of custom API endpoints defined by the …","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","async trait that use MaybeSend","Attaches <code>endpoints</code> to the <code>RpcModule</code>","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint toplevel config","The actual implementation of consensus","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","Fedimint Core API (common) module interface","Returns the number of items in all vectors","","","Returns the number of tiers","","Location where configs are stored","Provides interfaces for ACID-compliant data store backends","Database shared by the API and consensus","Returns a decoder for the following associated types of …","","","","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implements the <code>Display</code> trait for dyn newtypes whose traits …","Implement <code>Clone</code> on a “dyn newtype”","","","This module defines a binary encoding interface which is …","Constructs a new engine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","","","","","","","","","","","","Copies a byte slice into a hash object.","","","","","","Generates denominations as powers of 2 up to and including …","","Returns an <code>Option</code> with a reference to the vector of the …","","","","","Hashes some bytes.","","","","","","","","","","This is a helper macro that generates the implementations …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","","Returns an consuming iterator over every <code>(Amount, T)</code>","","","","","","","","","","","","","","Verifies whether all vectors in all tiers are empty","","Returns an borrowing iterator","","Returns an iterator over every <code>(Amount, &amp;T)</code>","Returns an iterator over the keys","","Returns the length of the longest vector of all tiers, …","","Applies the given closure to every <code>(Amount, T)</code> pair","number of peers that can be evil without disrupting the …","Returns the highest tier amount","MaybeSync can not be used in <code>dyn $Trait + MaybeSend</code>","See <code>maybe_add_send</code>","","","","Define a “module plugin dyn-newtype” which is like a …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","Define a “plugin” trait","Shorthand for <code>Amount::from_msats</code>","","","Implementation of multiplexed peer connections","","Networking for mint-to-mint and client-to-mint …","Creates a new MultiZip Iterator from <code>Notes</code> iterators. …","Returns a new <code>TieredMulti</code> with the given <code>BTreeMap</code> map","","number of peers to select such that one is honest (under …","As a transaction may have multiple outputs, this refers to …","","Retrieve the current status of the output. Depending on …","","","","","","Implements the necessary traits for all associated types …","Implements the necessary traits for all configuration …","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","Determines the denominations to use when representing an …","Starts the <code>ConfigGenApi</code> unless configs already exist After …","Generates the <code>ServerConfig</code>","","Shorthand for <code>Amount::from_sats</code>","","","","","","","","","","","","","Module and endpoint settings necessary for starting the API","","Spawns an API server","Runs the <code>ConsensusApi</code> which serves endpoints while …","Attempts to stop the API","","Verifies whether the structure of <code>self</code> and <code>other</code> is …","","","","Returns the summary of number of items in each tier","","number of peers required for a signature","Returns a reference to the key of the specified tier","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","Returns the total value of all notes in msat as <code>Amount</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The referenced transaction ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sent by admin user to the API","The config gen params that need to be in consensus, sent …","Config gen params that can be configured from the UI","The config gen params response which includes our peer id","Connection information sent between peers in order to …","For a guardian to communicate with their server","During config gen, used for an API-to-API call that adds a …","API for secure websocket requests","Show an audit across all modules","Check auth credentials","","","","","","","","","","","","","TLS cert is necessary for P2P auth during DKG and  …","","","","","","","","","","","The same for all peers","","","","","","","","","","","","","","","","","","","","","","","","Delegates to <code>fetch_epoch_history</code>","","","","","","Sends a signal to consensus that we want to force running …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","During config gen, gets all the server connections we’ve …","Returns the consensus config gen params, followers will …","Gets the default config gen params which can be configured …","After DKG, returns the hash of the consensus config …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Url of “leader” guardian to send our connection info to","Guardian-defined key-value pairs that will be passed to …","Guardian-defined key-value pairs that will be passed to …","Module init params (also contains local params from us)","Set the params (if leader) or just the local params (if …","Name of the peer, used in TLS auth","","Our id (might change if new peers join)","Our guardian name","P2P is the network for running DKG and consensus","Endpoints of all servers","Runs DKG, can only be called once after configs have been …","","","","","","During config gen, sets the server connection containing …","Leader sets the consensus params, everyone sets the local …","Sets the password used to decrypt the configs and …","Sends a signal to consensus that we are ready to shutdown …","Reads the configs from the disk, starts the consensus …","Returns the status of the server","Status of the peer if known","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of api versions for each component (core + modules)","Server needs a password to read configs","Allows a client to download the config","We failed running config gen","","Consensus is running","","","","","","An extension trait allowing to making federation-wide API …","An API request error when calling an entire federation","","The status of a server, including how it views its peers","The API for the global (non-module) endpoints","An API (module or global) that can query a federation","Trait marker for the global (non-module) endpoints","Trait marker for the module (non-global) endpoints","","","","Information required for client to construct …","","","","","An API request error when calling a single federation peer","","","","Ready to run config gen once all peers are ready","","","","","The state of the server returned via APIs","Waiting for peers to share the config gen params","","","Restarted from a planned upgrade (requires action to start)","We have verified all our peer configs","Config is generated, peers should verify the config","Mint API client that will try to run queries against all …","List of all federation peers for the purpose of iterating …","","","","","","Await the outcome of an entire transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches the server consensus hash if enough peers agree on …","","","","","","","","","","","","","","","","","","","","","","","","","Query peers and calculate optimal common api versions to …","","","","Fetch client configuration info only if verified against a …","","Config download token (might only be used a certain number …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the outcome of an entire transaction","Indicates that this peer needs attention from the operator …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a new API client from a client config","Creates a new API client from a invite code, assumes they …","","","","","","","","","","","","","","Authentication id for the federation","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Creates a new API client","Creates a new API client","","","","","","This should always be 0 if everything is okay, so a …","","","","","","","Make request to a specific federation peer by <code>peer_id</code>","","Make an aggregate request to federation, using <code>strategy</code> to …","","","","","","","","","","","","","","","","Submit a transaction for inclusion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Url to reach an API that we can download configs from","","","","","","","","","","","","","","","","","","","","","Key used to store user’s ecash backups","","User’s backup, received at certain time, containing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the bitcoin RPC","Env var that can be set to point at the bitcoind’s …","Env var for bitcoin RPC kind","Env var for bitcoin URL","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","User has cancelled the DKG task","Total client config","The API response for client config requests, signed by the …","Config for the client-side of a particular Federation …","","","Type erased <code>ModuleInitParams</code> used to generate the …","All the parameters necessary for generating the …","Consensus parameters for config generation","Shared consensus-critical config","The default maximum open connections the API can handle","","Captures an error occurring in DKG","Defines a group (e.g. G1 or G2) that we can generate keys …","","Things that a <code>distributed_gen</code> config can send between peers","Result of running DKG","","The env var for maximum open connections the API can handle","Empty struct for if there are no params","","","Error running DKG","The federation id is a copy of the authentication …","","","","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","<code>serde_json::Value</code> that must contain <code>kind: String</code> field","The types of keys to run distributed key generation for","Locally configurable parameters for config generation","Local non-consensus, not security-sensitive settings","Key under which the federation name can be sent to client …","","","","","","Private for this federation member data that are security …","","","All the serializable configuration for the fedimint server","","","","Config for the server-side of a particular Federation …","Registry that contains the config gen params for all …","","","","<code>enum</code> version of <code>SupportedDkgMessage</code>","Module (server side) config, typed","Consensus-critical part of a server side module config","","","Secret API auth string","Our bind address for our API endpoints","Network addresses and names for all peer APIs","API endpoints for each federation member","","","Public keys authenticating members of the federation and …","Secret key for contributing to threshold auth key","Get decoders for <code>modules</code> and skip unsupported ones","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public keys for the atomic broadcast to authenticate …","Secret key for the atomic broadcast to sign messages","","The client config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the binary code running","","","","Contains all configuration that needs to be the same for …","","","","","","","","","","","","","","","","","","","","","Returns the consensus hash for a given client config","","Core consensus version","","Get decoders for <code>modules</code> and fail if any is unsupported","","","","","","","","","","","","","","","","","","","","","","","Runs the distributed key gen algorithm","","Required to download the client config","Limit on the number of times a config download token can …","Random dummy id for testing","Threshold pubkey for authenticating epoch history","Public keys for signing consensus epochs from all peers","Secret key for signing consensus epochs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Our bind address for communicating with peers","","Federation name from config metadata (if set)","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Creates a new config from the results of a trusted or …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Assemble from the distinct parts","Assemble from the three functionally distinct parts","","","","","","","","","","","","","","","","","","","","","","","","","","(soft-deprecated): Get the first instance of a module of a …","","","","","","","Constructs a module config by id","Constructs a module config by name","","","","","Public keys for HBBFT consensus from all peers","Secret key for contributing to HBBFT consensus","Our peer id (generally should not change)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains all configuration that is locally configurable …","","","","","How many API connections we will accept","Additional config the federation wants to transmit to the …","Additional config the federation wants to transmit to the …","Secret material from modules","All configuration that needs to be the same for modules","Non-consensus, non-private configuration from modules","Configs from other client modules","Human readable representation of <code>Self::modules</code>","The peer’s name","","","","","Network addresses and names for all p2p connections","","","","","Contains all configuration that will be encrypted such as …","","","See <code>DynRawFallback::redecode_raw</code>.","","","","","","","","","","","","","","","","","","","","","","","","Auth key signature over the <code>client_config</code>","","Api versions supported by this server","","","Certs for TLS communication, required for peer …","","","Secret key for TLS communication, required for peer …","","","","","","","","Turn the typed config into type-erased version","Converts a federation id to a public key to which we know …","","","","","","","","","","","","","","","","","","","","","","","","Split the config into its distinct parts","Split the config into its three functionally distinct parts","","","Converts the JSON into typed version, errors unless both …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer’s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)","","","","","Agreed on core consensus version","","","","","","","","","","","","","","","","","","","","","","","","Workaround for a serde <code>flatten</code> quirk","Serves the config gen API endpoints","Our local connection info","Config gen params that are only used locally, shouldn’t …","All the info we configure prior to config gen starting","State held by the API after receiving a …","Called from <code>set_config_gen_connections</code> to add a peer’s …","Secret API auth string","Bind address for API communication","Bind address for our API connection","Url for our API connection","","Our auth string","","","","","","","","","","","","","","","","","","","","Configs that have been generated","Tracks when the config is generated","","Directory the configs will be created in","DB not really used","The default params for the modules","Limit on the number of times a config download token can …","Limit on the number of times a config download token can …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Validates and returns the params using our <code>request</code> and …","Returns the peers that have called <code>add_config_gen_peer</code> on …","Gets the consensus config gen params","Returns default config gen params that can be modified by …","","","","Returns the consensus config hash, tweaked by our TLS …","Returns true if the upgrade flag is set indicating that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Url of “leader” guardian to send our connection info to","Our local connection","","How many API connections we will accept","How many API connections we will accept","","","Our peer id","Our guardian name","","Our TLS private key","Bind address for P2P communication","Bind address for our P2P connection","Url for our P2P connection","Connection info received from other guardians, unique by …","Registry for config gen","The config gen params requested by the leader","","Once configs are generated, starts DKG and await its …","","Returns the server status","Sets our connection info, possibly sending it to a leader","Sets and validates the config gen params","","","Our config gen settings configured locally","Attempts to decrypt the config files from disk using the …","In-memory state machine","Our status","Task group for running DKG","Our TLS public cert","Our TLS private key","","","","","","","","","","","","","","","","","","","","Sends our updated peer info to the leader (if we have one)","We have verified all our peer configs","","","","","","Writes the configs to disk after they are generated","","","","","","","","Our secret key share of a threshold key","Create another DKG with <code>threshold</code> signatures required","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a second generator by hashing the first one to the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create multiple DKGs with the same <code>threshold</code> signatures …","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","","","","","","","Runs the DKG algorithms with our peers","","Runs the DKG algorithms for a given key and module id","","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Client configuration file","Client connection string file","Version of the server code (should be the same among peers)","Server consensus-only configurable file","Database file name","","","Server locally configurable file","Plain-text stored password, used to restart the server …","Server encrypted private keys file","Salt backup for combining with the private key","Reads an encrypted json file into a struct","Writes struct into an encrypted json file","","Reads a plaintext json file into a struct","Writes struct into a plaintext json file","Reads the server from the local, private, and consensus …","Writes the server into configuration files (private keys …","","","","","","","Events that can be sent from the API to consensus thread","","Proposed HBBFT consensus changes including removing peers","","","","","","","","","","","","API for accessing state","Cache of <code>ApiEvent</code> to include in a proposal","","","","","","","","","","","","","","","","","Configuration describing the federation and containing our …","","","","","","","Database storing the result of processing consensus …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if a threshold of peers have signaled to …","","Modules config gen information","Modules registered with the federation","","","Calculate the result of the <code>consensus_outcome</code> and save …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","outputs a useful debug message for epochs indicating what …","","A new event has been sent to us from the API","Runs the main server consensus loop","","","","","","One of our modules triggered an event (e.g. new bitcoin …","how many epochs ahead of consensus to rejoin","A peer has sent us a consensus message","","","A rejoining peer wants us to run an empty epoch","How many txs can be stored in memory before blocking the …","Used to make API calls to our peers","Receives event notifications from the API (triggers epochs)","","","","","","","","Our configuration","","","P2P connections for running consensus","Delegate for processing consensus information","Used for decoding module specific-values","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Runs a single HBBFT consensus step","Handles one step of the HBBFT algorithm, sending messages …","Runs the HBBFT consensus algorithm","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Tracks the last epoch outcome from consensus","Under the HBBFT consensus algorithm, this will track the …","","Creates a server with real network and no delays","Creates a server that can simulate network and delays","Returns the next epoch that we need to process, based on …","The list of all other peers","Number of pending forced epochs (requested by peers to …","","Requests, verifies and processes history from peers","","If we are rejoining and received a threshold of messages …","If <code>Some</code> then we restarted and look for the epoch to rejoin …","Sends a rejoin request to all peers, indicating the number …","Loop <code>run_conensus_epoch</code> until shut down","The main consensus function:","","Starts consensus by skipping to the last saved epoch …","","<code>TaskGroup</code> that is running the server","","","","","","","","","","","","","","","Decoder for module associated types","","An owned, immutable input to a <code>Transaction</code>","An owned, immutable input to a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","An owned, immutable output of a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","The type erased version of the type implementing this trait","A type used by when decoding dyn-types, when the module is …","","","Something that can be an <code>DynInput</code> in a <code>Transaction</code>","","Something that can be an <code>DynOutput</code> in a <code>Transaction</code>","","","A type that has a <code>Dyn*</code>, type erased version of itself","Opaque data structure that holds a keypair consisting of a …","","","","Special IDs we use for global dkg","","Module instance ID","A type of a module","","","","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>DecoderBuilder</code> to which decoders for single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a specific <code>DynType</code> from the <code>reader</code> byte stream.","","","","","","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into its type-erased equivalent","","","","","","","","","","","","","","","","","","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","","","","","Attach decoder for a specific <code>Type</code>/<code>DynType</code> pair where …","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the type-erased decoder of the module","","","","","Returns the argument unchanged.","","","Returns the amount represented by the input and the fee …","Calls <code>U::from(self)</code>.","","","Returns the amount represented by the output and the fee …","","","","","","","","Backend side module interface","","","Returns a list of custom API endpoints defined by the …","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","Returns the decoder belonging to the server module","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Retrieve the current status of the output. Depending on …","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lightning TLV uses a custom variable-length integer called …","A writer counting number of writes written to it","Data which can be encoded in a consensus-consistent way","","","","Object-safe trait for things that can encode themselves","A type that decodes <code>module_instance_id</code>-prefixed <code>T</code>s even …","Data which can be encoded in a consensus-consistent way","","","","Serde implementations using hex-encoded encodables","","","","","","","","","","","Decode an object with a well-defined format","","","Decode an object from hex","Encode an object with a well-defined format. Returns the …","","","","","","","","<code>Self::consensus_encode</code> to newly allocated <code>Vec&lt;u8&gt;</code>","Generate a SHA256 hash of the consensus encoding using the …","Returns the number of bytes successfully written so far","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner writer, discarding this wrapper","","","","","","","","","Attempt to re-decode raw values with new set of of <code>modules</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Threshold sign the configs for verification via the API","All the items that may be produced during a consensus epoch","May eventually contains consensus info about the upgrade","Fed shutdown occurs once a threshold want to upgrade","","Threshold sign the epoch history for verification via the …","","","","","","","","Any data that modules require consensus on","","","","","","","Fedimint tx that contains module inputs and outputs that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines signature shares from peers, ignoring bad …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","All the consensus items along with the <code>PeerId</code> of the peer …","","","","","Transactions from <code>items</code> that turned out to be invalid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper that causes the inner <code>T</code> to be debug-formatted …","Use for displaying bytes in the logs","Use for displaying potentially large <code>[serde_json::Value]</code>s …","Something that can be debug-formatted in an abbreviated way","Optional stacktrace formatting for errors.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize a hex String to a <code>Vec&lt;u8&gt;</code>","Serialize a <code>&amp;[u8]</code> to a hex String","Authentication uses the hashed user password in PHC format","Definition of an API endpoint defined by a module <code>M</code>.","State made available to all API endpoints for handling a …","","All requests from client to server contain these fields","","Api version supported by a core server or a client/server …","","","","","","","","","Contribute consensus items if other module triggers an …","Consensus version of a core server","This represents the module’s database version that the …","","","","","Operations common to Server and Client side module gen dyn …","Interface for Module Generation","","","Extension trait with a function to map <code>Result</code>s used by …","","Module associated types required by both client and server","Consensus version of a specific module instance","","Multiple, disjoint, minimum required or maximum supported, …","","","","","example: /transaction","","","A handle passed to <code>ServerModuleInit::distributed_gen</code>","","Creates a struct that can be used to make our …","","Module Generation trait with associated types","","","","","","Information about the amount represented by an input or …","Trigger new epoch immediately including these consensus …","","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","Example","Returns a list of custom API endpoints defined by the …","","","","","Queries the database and returns all assets and …","Hashed user password if the API requires authentication","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to commit the dbtx or returns an ApiError","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","Database tx handle, will be committed","","","","","Returns a decoder for the following associated types of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Create <code>SupportedModuleApiVersions</code> from raw parts","","","","","","","","","","","","","","","","Converts the consensus config into the client config","Retrieves the <code>MigrationMap</code> from the module to be applied …","Retrieves the <code>MigrationMap</code> from the module to be applied …","","Handler for the API call that takes the following …","Whether the request was authenticated as the guardian who …","","","","Initialize the <code>DynServerModule</code> instance from its config","Initialize the <code>DynServerModule</code> instance from its config","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Major API version","","","Minor API version","","","","","<code>db</code> and <code>dbtx</code> should be isolated.","","","","","Trigger new epoch if contains any elements, otherwise …","","","Retrieve the current status of the output. Depending on …","Parameters required by the API","","Path under which the API endpoint can be reached. It …","","This function is called once for every consensus item. The …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue notes, peg-out BTC, …","","","","Returns the auth set on the request (regardless of whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In cases where we know exactly which module kind we expect …","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint consensus and API versioning.","Version of the module consensus supported by this …","","","","","","","","","","","","","","","","","","","","","","Waits for key to be present in database.","Waits for key to have a value that matches.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallback to decoding unknown module instance ids as …","Collection of decoders belonging to modules, typically …","Module instance ID","Module Registry hold module-specific data <code>M</code> by the …","Reject unknown module instance ids","Collection of server modules","Panic if the <code>Self::decoding_mode</code> is not <code>Reject</code>","","","","","","","","","","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get module data by instance id","Return the module data belonging to the module identified …","Get module data by instance id, including <code>ModuleKind</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return an iterator over all module data","Create <code>Self</code> from an iterator of pairs","Add a module to the registry","","","","","","","","","","","","","","Api version supported by a core server or a client/server …","Consensus version of a core server","Consensus version of a specific module instance","Multiple, disjoint, minimum required or maximum supported, …","","","","","Supported Api versions for this core consensus versions","Supported Api versions for this core &amp; module consensus …","","","","Major API version","Minor API version","","","","Amount of per-peer messages after which we will stop …","TODO: Use proper ModuleId after modularization is complete","","A <code>Msg</code> that can target a specific destination module","","A wrapper around <code>AnyPeerConnections</code> multiplexing …","","","","","","","","Callback queue from tasks that want to receive","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Cached messages per <code>ModuleId</code> waiting for callback","","Sender of peer bans","Track pending messages per peer to avoid a potential DoS","Await receipt of a message from any connected peer.","Sender of receive callbacks","","","Sender of send requests","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","","","Very simple cache mostly used to protect endpoints against …","A state that has context for the API, passed to each rpc …","","For sending API events to consensus such as transactions","","","","","","","","","Our server configuration","Cached client config","","","","","","","","","","","Database for serving the API","","","","","Force process an outcome","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Modules registered with the federation","","","","","","Sends an upgrade signal to the fedimint server thread","","","","","","","","","","","","","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","Sanitizes name as valid domain name","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","","","","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","Parses the host and port from a url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","","","","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","","","","","","","","","","","Calculates delays for reconnecting to peers","","","Specifies the network configuration for …","Every how many seconds to send an empty message to our …","","Production defaults will try to reconnect fast but then …","","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","","","Keeps the references to a <code>PeerStatusChannelSender</code> for each …","","Connection manager that automatically reconnects to peers","","For tests we don’t want low min/floor delays because …","","","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Our federation member’s identity","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Query strategy that returns when all peers responded or a …","Do nothing yet, keep waiting for requests","Query for supported api versions from all the guardians …","Fail the whole request","Results from the strategy handling a response from a peer","","Retry request to this peer","Return the successful result","Returns when a threshold of responses are equal","Returns the deduplicated union of a threshold of responses","Returns the deduplicated union of <code>required</code> number of …","Returns first response with a valid signature","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Strategy for returning first response that is verifiable …","","","","","","","","","","","","","","Should requests for this strategy have specific timeouts?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>MaybeSend</code> is no-op on wasm and <code>Send</code> on non wasm.","<code>MaybeSync</code> is no-op on wasm and <code>Sync</code> on non wasm.","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A group of task working together","","","","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","Atomically downgrades a write lock into a read lock …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a mutable reference to the underlying data.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","","","","","","","","","","Is task group shutting down?","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Create a sub-group","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents notes of different denominations.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Add a threshold, which will log a warning if exeeded","Handy alias for <code>Self::threshold</code>","","","","","","","","An atomic value transfer operation within the Fedimint …","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","<code>DynInput</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","<code>DynOutput</code>s created as a result of the transaction","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Future that is <code>Send</code> unless targeting WASM","Stream that is <code>Send</code> unless targeting WASM","","","Wrapper for <code>Url</code> that only prints the scheme, domain, port …","","","Copied from <code>tokio_stream</code> 0.1.12 to use our optional Send …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Write out a new file (like <code>std::fs::write</code> but fails if …","","","","A wrapper around <code>tokio::sync::broadcast::Receiver</code> that …","An error returned from the inner stream of a …","The receiver lagged too far behind. Attempting to receive …","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new <code>BroadcastStream</code>.","Waits for the next item in a stream. If the stream is …","Waits for the next item in a stream. If the stream is …","","","","","","","","","","","","",""],"i":[0,0,0,0,427,0,296,296,0,0,0,427,0,296,296,69,68,0,0,0,0,0,0,0,0,0,0,427,68,1,0,0,0,0,85,1,1,0,2,296,6,0,427,0,6,6,296,6,3,6,0,87,427,427,0,6,0,87,96,85,3,2,39,6,6,40,1,41,68,32,69,87,96,85,3,2,39,6,40,1,41,68,32,69,427,32,0,0,6,3,2,39,6,40,1,41,32,3,2,39,6,40,1,41,32,6,40,1,41,32,0,0,3,2,6,40,1,41,32,3,2,6,40,1,41,32,3,2,6,40,1,41,32,427,18,0,2,39,3,2,39,87,0,87,427,3,2,39,428,6,3,2,39,6,40,1,41,32,0,1,0,0,0,6,6,0,296,6,3,0,3,2,39,6,40,1,41,32,3,3,2,2,6,6,40,40,1,1,41,41,32,32,0,3,2,39,6,40,1,41,32,2,3,2,39,6,6,6,40,40,1,1,41,41,68,68,32,69,69,0,87,96,85,3,2,39,6,6,40,40,1,1,41,68,68,68,32,69,6,3,2,6,40,1,41,32,296,6,6,296,6,3,2,39,1,3,2,39,6,40,1,41,32,1,296,6,6,6,1,1,3,3,2,3,2,3,96,296,3,2,6,40,1,41,32,0,0,0,39,6,3,87,96,85,3,2,39,6,40,1,41,68,32,69,296,6,85,2,2,87,96,85,3,2,39,6,40,1,41,68,32,69,2,3,2,39,2,2,85,2,0,2,428,3,0,0,0,427,0,0,0,0,0,0,0,1,1,0,85,0,85,2,85,428,41,0,427,6,40,1,41,32,0,0,427,427,427,68,69,0,0,0,0,1,1,39,87,87,96,0,32,1,0,3,2,39,6,40,1,41,32,0,87,68,87,87,96,3,2,1,1,1,2,0,428,3,0,0,3,0,0,3,2,6,40,1,41,32,6,3,2,39,6,40,1,41,32,3,6,40,1,41,68,69,40,428,2,39,0,6,87,96,85,3,2,39,6,40,1,41,68,32,69,87,96,85,3,2,39,6,40,1,41,68,32,69,41,0,87,96,85,3,2,39,6,40,1,41,68,32,69,0,87,96,85,3,2,39,6,40,1,41,68,32,69,6,0,0,0,0,0,0,104,105,104,104,104,107,105,108,109,110,104,107,105,108,109,110,105,107,105,108,109,110,107,105,108,109,110,109,110,107,105,108,109,110,105,108,109,110,105,105,108,108,109,109,110,110,107,105,108,109,110,104,107,105,108,109,110,104,104,107,105,108,109,110,107,105,108,109,110,104,104,104,104,104,104,107,105,108,109,110,104,107,105,108,109,110,107,108,110,108,110,105,104,109,107,105,108,104,107,105,108,109,110,104,104,104,104,104,104,105,107,105,108,109,110,104,107,105,108,109,110,104,107,105,108,109,110,104,107,105,108,109,110,104,104,107,105,108,109,110,0,128,0,128,127,128,134,127,0,0,134,0,0,0,0,0,0,0,0,132,132,134,0,0,0,0,0,0,0,0,0,128,134,132,134,132,0,128,0,134,128,128,128,0,429,117,118,430,117,430,117,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,121,122,118,117,123,124,125,126,127,128,129,121,122,118,117,123,124,125,126,127,128,129,116,126,430,117,121,124,121,123,124,121,123,124,121,125,126,127,128,122,118,121,123,124,125,126,127,128,129,430,117,430,117,430,117,123,123,124,125,126,127,128,129,123,123,124,124,125,125,126,126,127,127,128,128,129,129,121,123,124,125,126,127,128,129,129,430,117,430,117,430,117,430,117,126,132,132,133,133,134,134,121,122,118,117,123,123,124,135,125,126,127,128,129,132,132,133,134,134,134,121,122,122,118,118,117,123,124,135,125,126,127,128,129,121,124,117,117,121,122,118,117,123,124,125,126,127,128,129,123,133,123,122,118,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,116,132,133,126,117,121,117,117,135,117,117,133,117,125,125,125,132,133,134,431,429,117,431,135,121,123,124,125,126,127,128,129,129,125,132,134,125,430,117,121,124,121,122,118,117,123,124,125,126,127,128,129,132,133,134,123,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,430,117,123,132,133,134,121,122,118,117,123,124,135,125,126,127,128,129,429,117,432,432,433,0,0,0,148,150,149,148,150,149,148,149,148,149,148,150,149,148,150,149,148,150,149,149,149,149,149,149,148,149,148,150,149,148,150,149,148,148,150,149,148,149,148,150,149,148,150,149,148,149,149,148,148,150,150,149,148,149,148,150,149,148,150,149,148,150,149,148,150,149,0,0,0,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,152,152,152,152,152,152,152,152,152,152,152,152,152,166,0,185,0,0,0,174,0,0,0,190,193,0,171,0,0,0,0,0,171,0,0,166,174,185,0,172,172,174,166,0,0,0,190,193,0,0,0,185,185,0,193,171,0,0,0,0,0,0,0,0,0,174,0,0,0,90,0,161,164,162,140,154,158,162,161,158,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,162,161,160,165,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,172,174,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,172,174,167,162,170,160,0,90,154,168,153,155,140,167,170,160,162,155,140,167,170,160,162,155,140,167,170,160,140,153,140,158,158,158,168,169,90,161,162,163,164,155,140,165,166,167,168,169,170,160,153,171,172,174,434,90,0,164,164,167,140,162,161,163,155,140,165,166,167,168,170,160,153,174,163,163,155,155,140,140,165,165,166,166,167,167,168,168,170,170,160,160,153,153,174,174,90,161,162,163,164,155,140,165,166,167,168,169,170,160,153,171,172,174,90,164,140,140,90,161,162,163,164,155,140,154,165,166,167,167,158,168,169,170,160,153,171,185,185,172,174,90,90,161,162,163,164,155,140,154,165,166,167,158,158,168,169,170,160,153,153,171,185,185,185,172,174,155,140,167,170,160,435,158,436,174,174,190,193,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,172,174,167,168,160,0,158,140,140,90,90,140,140,90,90,90,90,155,166,167,162,161,164,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,0,163,160,90,162,435,163,160,163,170,160,158,0,90,154,168,153,0,164,162,140,161,162,164,140,162,155,90,163,158,168,164,154,154,167,154,90,153,185,140,160,0,0,0,90,161,162,163,164,155,140,165,166,167,168,169,170,160,153,171,172,174,434,165,185,90,90,154,162,90,154,161,155,140,167,170,160,162,158,193,167,436,174,174,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,172,174,190,193,167,185,168,153,90,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,155,90,163,163,435,162,170,160,90,161,162,163,164,155,140,154,165,166,167,158,168,169,170,160,153,171,185,172,174,163,0,0,0,0,0,202,204,204,205,205,203,203,202,202,204,205,203,206,202,204,205,203,206,204,205,203,206,204,205,203,206,203,202,202,202,202,205,204,205,204,205,203,206,202,204,205,203,206,204,205,203,206,203,202,202,202,203,202,0,202,202,202,204,205,203,206,202,204,205,203,206,206,203,203,204,205,202,203,204,206,203,204,204,205,205,203,205,203,202,202,0,202,202,202,202,203,203,202,202,203,202,206,206,204,205,203,206,202,204,205,203,206,202,204,205,203,206,202,204,205,203,206,202,202,202,204,205,203,206,202,0,0,0,0,214,0,214,0,212,213,212,214,215,183,213,212,214,215,183,213,214,215,183,214,215,183,213,212,437,213,213,214,215,183,213,212,214,215,183,214,215,183,213,213,213,213,213,212,214,215,183,213,212,214,215,183,212,213,212,213,212,213,212,213,215,183,212,437,212,437,212,212,0,215,183,213,213,215,213,215,214,215,183,213,212,214,215,183,213,212,214,215,183,213,212,214,215,183,213,212,214,215,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,228,0,0,0,0,228,228,0,222,222,224,224,224,224,224,222,226,227,228,225,224,222,226,227,228,225,224,225,224,226,227,228,226,227,228,224,0,224,222,227,226,228,228,228,222,226,227,228,225,227,224,222,226,226,227,228,225,226,227,228,225,224,228,222,224,222,226,227,228,225,224,222,226,227,228,225,224,227,224,224,222,224,224,224,0,226,227,228,224,222,226,227,228,225,224,222,226,227,228,225,224,222,226,227,228,225,222,224,222,226,227,228,225,0,0,236,0,237,0,0,0,0,236,0,236,0,237,236,0,97,97,97,236,97,237,236,97,237,97,237,237,97,97,97,237,237,237,97,236,97,237,237,97,97,97,236,97,237,236,97,237,97,97,0,97,97,97,97,97,97,97,97,97,97,97,97,97,237,97,97,97,237,236,97,237,236,97,237,236,97,237,236,97,237,0,0,0,0,0,0,0,0,438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,246,261,262,263,264,265,251,251,251,251,251,246,246,84,0,439,246,84,251,253,44,254,255,256,257,258,439,246,84,251,253,44,254,255,256,257,258,253,44,0,261,262,263,264,265,246,84,251,251,251,251,251,251,44,254,255,256,257,258,84,246,84,251,44,254,255,256,257,258,246,84,246,84,251,254,255,256,257,258,246,84,251,254,255,256,257,258,246,84,251,254,255,256,257,258,246,44,253,44,253,44,254,255,256,257,258,254,255,256,257,258,246,84,246,261,262,263,264,265,251,251,251,251,251,246,84,251,254,255,256,257,258,246,246,84,84,254,254,255,255,256,256,257,257,258,258,261,262,263,264,265,251,251,251,251,251,246,84,246,84,84,251,251,44,254,254,255,255,256,256,257,257,258,258,439,246,246,84,84,251,253,44,254,255,256,257,258,246,84,251,254,255,256,257,258,254,255,256,257,258,246,84,251,44,254,255,256,257,258,246,246,246,246,84,246,254,255,256,257,258,246,251,254,255,256,257,258,254,255,256,257,258,439,246,84,251,253,44,254,255,256,257,258,438,439,246,84,251,253,44,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,246,246,246,84,246,246,246,246,84,0,246,246,246,84,251,254,255,256,257,258,246,84,251,44,254,255,256,257,258,84,251,254,255,256,257,258,439,246,84,251,253,44,254,255,256,257,258,439,246,84,251,253,44,254,255,256,257,258,246,439,246,84,251,253,44,254,255,256,257,258,439,246,84,251,253,44,254,255,256,257,258,253,246,0,0,273,147,273,147,273,273,273,273,147,273,147,273,147,273,147,273,273,273,147,273,147,273,147,273,147,273,147,273,273,273,147,273,147,273,147,147,273,147,0,0,0,440,440,275,274,274,274,274,275,440,274,274,274,274,274,274,440,274,274,440,440,274,274,274,274,274,0,0,0,0,0,278,277,278,278,278,231,276,231,276,278,277,276,276,278,278,231,276,231,231,276,231,231,276,276,276,231,276,231,276,231,276,278,278,278,278,276,231,276,231,276,231,276,231,276,279,0,0,279,0,0,279,0,279,0,0,279,0,0,0,279,0,0,0,279,0,279,280,279,280,282,283,281,284,285,286,287,288,289,290,291,279,280,282,283,281,284,285,286,287,288,289,290,291,279,280,281,279,280,281,282,283,281,284,285,286,287,288,289,290,291,282,283,281,284,285,286,287,288,289,290,291,282,283,281,284,285,286,287,288,289,290,291,282,281,285,286,287,289,290,291,279,279,282,283,281,284,285,286,287,288,289,290,291,279,280,282,283,281,284,285,286,287,288,289,290,291,282,282,283,281,281,284,285,285,286,286,287,287,288,289,289,290,291,291,279,280,281,280,0,280,279,280,282,283,281,284,285,286,287,288,289,290,291,280,279,280,282,283,281,284,285,286,287,288,289,290,291,279,280,280,280,280,280,282,281,285,286,287,289,290,291,280,282,282,283,283,281,281,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,279,280,281,279,279,280,282,283,281,284,285,286,287,288,289,290,291,279,280,282,283,281,284,285,286,287,288,289,290,291,279,280,282,283,281,284,285,286,287,288,289,290,291,279,280,282,283,281,284,285,286,287,288,289,290,291,0,0,0,0,0,293,0,0,0,0,293,0,0,294,297,48,293,294,297,48,293,293,293,47,294,293,47,49,294,295,293,295,294,293,49,49,49,297,297,293,297,297,297,297,297,297,297,297,297,297,293,293,293,293,293,293,297,48,48,293,294,297,297,297,48,293,293,293,293,48,293,48,297,294,297,48,293,297,294,297,48,293,48,48,294,294,293,293,293,293,48,294,297,48,293,294,297,48,293,294,297,48,293,294,297,48,293,294,297,297,297,297,441,441,0,0,233,0,0,233,0,233,0,243,243,243,0,243,243,233,243,0,0,0,0,0,233,0,112,233,311,308,309,310,112,230,243,233,311,308,309,310,112,230,243,311,233,308,309,310,112,230,233,308,309,310,112,230,0,233,308,309,310,112,230,233,308,309,310,112,230,233,308,309,310,112,230,311,309,310,230,311,233,308,309,310,112,230,243,233,233,308,308,309,309,310,310,112,112,230,230,243,243,309,310,233,308,309,310,112,230,243,233,311,308,309,310,112,230,243,243,233,308,309,310,112,230,233,308,309,310,112,230,233,308,309,310,112,230,112,233,311,308,309,310,112,230,243,233,311,308,309,310,112,230,243,230,230,311,112,112,230,309,310,112,233,308,309,310,112,230,233,308,309,310,112,230,311,233,311,308,309,310,112,230,243,233,311,308,309,310,112,230,243,233,311,308,309,310,112,230,243,442,112,112,233,311,308,309,310,112,230,243,0,0,0,0,0,316,313,314,315,312,313,314,315,312,312,0,313,314,314,315,312,313,314,315,312,313,314,315,312,313,314,315,312,0,313,314,313,314,315,312,313,314,315,312,313,314,315,312,313,314,315,312,0,0,0,0,0,0,0,0,0,0,443,443,444,445,427,0,444,0,324,0,446,0,0,0,427,0,0,444,0,0,443,0,0,0,0,0,326,444,444,447,447,446,0,447,0,0,0,447,0,0,0,448,0,324,0,427,223,325,223,195,321,0,427,327,198,197,0,427,143,427,317,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,427,318,191,319,320,195,321,130,223,106,317,198,197,113,318,191,319,320,195,321,130,223,106,317,198,197,113,317,35,318,191,319,318,191,319,318,191,319,427,130,195,321,327,35,35,35,156,443,444,427,444,320,143,198,197,318,191,319,320,195,321,130,143,106,113,327,446,327,446,324,318,191,319,223,106,113,318,318,191,191,319,319,223,223,106,106,113,113,318,191,319,320,195,321,130,143,106,113,323,223,318,191,319,320,195,321,130,325,223,143,106,317,326,326,198,197,113,324,330,35,7,324,323,318,318,191,191,319,320,195,321,130,325,223,143,106,317,326,326,198,198,197,197,113,113,318,191,319,198,321,318,191,319,320,195,321,130,223,106,317,198,197,113,7,327,446,327,446,447,7,35,35,223,113,327,446,198,197,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,324,330,320,448,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,324,446,319,324,317,319,321,156,427,130,35,323,320,143,317,324,330,317,427,143,446,7,323,427,427,427,326,325,0,35,35,323,323,318,191,319,320,195,321,130,143,106,113,317,326,327,446,318,191,319,156,143,318,191,319,320,195,321,130,223,106,317,198,197,113,326,143,327,446,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,320,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,113,113,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,317,327,446,327,0,446,330,35,7,324,323,318,191,319,320,195,321,130,325,223,143,106,317,326,198,197,113,35,35,143,0,0,0,0,25,339,25,337,338,339,25,337,338,337,338,337,338,25,337,338,337,338,337,337,338,338,337,338,339,25,337,338,339,25,337,338,337,337,338,339,25,337,338,339,25,337,338,25,339,339,337,339,25,337,338,337,338,337,338,339,25,339,25,337,338,339,25,337,338,339,25,337,338,339,25,337,338,0,45,0,0,0,45,0,46,46,46,45,46,45,46,45,46,45,46,46,46,45,46,46,45,46,46,45,45,46,46,45,46,46,45,46,46,45,46,46,46,45,46,46,45,46,45,46,46,46,46,46,46,45,46,45,46,45,46,45,46,45,46,0,0,0,0,0,0,0,0,195,321,130,195,321,319,319,321,130,0,0,0,0,0,0,0,340,342,341,340,342,341,340,342,341,340,341,340,342,341,341,341,342,341,340,341,340,342,341,340,342,341,340,341,341,342,340,340,342,340,340,340,340,340,341,341,340,342,341,340,342,341,340,342,341,340,342,341,340,0,0,0,0,0,0,0,0,344,344,344,19,344,346,19,344,346,344,344,344,19,344,346,19,344,346,344,344,344,346,344,344,346,344,19,344,19,344,346,19,344,346,346,344,344,344,344,344,19,344,346,19,344,346,344,344,346,19,344,19,0,344,344,344,19,344,346,344,19,344,346,19,344,346,19,344,346,19,344,346,344,0,0,0,0,0,0,0,0,350,350,353,176,350,353,176,350,353,176,350,176,350,449,353,0,353,176,350,353,176,350,176,350,350,353,176,350,449,353,176,350,449,353,0,353,350,353,353,176,0,350,353,176,353,176,176,350,353,176,350,353,176,350,353,176,350,353,176,350,357,0,357,357,0,356,357,0,0,357,0,0,0,355,362,363,359,358,355,356,357,362,363,359,358,355,356,357,362,359,358,355,356,357,355,356,357,358,359,0,355,355,355,363,362,362,355,356,357,362,363,359,358,355,356,357,355,356,357,363,358,362,362,363,359,358,355,356,357,362,363,359,358,355,356,357,363,358,355,355,362,363,359,355,356,362,362,362,362,362,355,356,362,358,362,363,363,0,355,356,357,362,363,359,358,355,356,357,362,363,359,358,355,356,357,362,363,359,358,355,356,357,362,363,359,358,355,356,357,362,450,450,450,450,450,450,450,450,0,0,0,0,0,0,0,371,370,371,370,371,370,451,370,371,371,370,371,370,371,370,371,451,370,371,370,370,371,377,370,370,370,370,370,370,370,370,370,370,370,371,370,371,370,370,371,370,371,177,0,382,0,0,382,0,0,0,177,177,177,0,0,0,0,0,0,0,0,0,0,0,177,177,177,379,378,175,378,385,388,384,381,386,387,382,175,379,380,177,378,385,388,384,381,386,387,382,175,379,380,177,175,379,380,177,175,379,380,177,388,381,381,387,378,381,175,379,381,381,175,379,386,175,379,177,378,385,388,384,381,386,387,382,175,379,380,177,175,379,380,177,380,175,385,381,381,378,385,388,384,381,386,387,382,175,379,380,177,378,385,388,384,381,386,387,382,175,379,380,177,381,177,177,379,378,385,387,381,385,381,381,381,452,175,378,385,381,381,381,381,386,177,381,381,384,388,385,378,378,385,381,381,381,381,175,379,388,388,381,381,381,175,379,380,177,378,385,388,384,381,386,387,382,175,379,380,177,378,385,388,384,381,386,387,382,175,379,380,177,381,378,385,388,384,381,386,387,382,175,379,380,177,378,385,388,384,381,386,387,382,175,379,380,177,0,0,0,390,390,391,389,390,391,389,390,391,389,390,391,389,391,389,390,391,389,390,391,389,390,390,391,391,389,389,391,389,390,391,389,390,391,389,390,391,389,389,391,390,391,389,390,391,389,390,389,390,391,389,390,390,391,389,390,391,389,390,391,389,390,391,389,390,391,389,390,391,389,345,345,0,0,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,453,453,0,394,0,394,0,0,394,394,0,0,0,0,396,396,395,397,398,400,401,394,396,395,397,398,400,401,394,401,400,395,397,398,394,396,395,397,398,400,401,394,395,401,396,395,397,398,400,401,394,396,395,397,398,400,401,394,396,395,397,398,400,401,400,145,396,395,397,398,400,401,145,401,395,397,398,400,395,395,397,398,396,396,395,397,398,400,401,394,396,395,397,398,400,401,394,396,395,397,398,400,401,394,397,398,396,396,395,397,398,400,401,394,454,454,0,0,0,0,0,0,0,0,0,0,0,402,402,407,412,408,88,245,402,403,404,407,412,408,88,245,402,403,404,402,404,88,245,88,245,407,402,402,403,404,88,402,403,404,404,404,404,407,403,404,408,408,88,245,402,403,403,404,404,407,412,408,88,245,402,402,402,403,404,88,245,402,407,88,245,88,407,412,408,88,245,402,403,404,412,402,404,407,412,408,88,245,402,403,404,407,245,88,88,88,245,88,403,404,403,404,402,407,88,402,404,404,404,412,404,404,408,402,402,402,403,404,402,403,404,88,88,0,0,0,88,88,0,88,245,408,403,404,404,407,412,408,88,245,402,403,404,407,412,408,88,245,402,403,404,403,404,402,402,402,402,407,412,408,88,245,402,403,404,407,412,408,88,245,402,403,404,402,402,402,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,85,85,0,0,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,235,235,0,0,0,235,0,0,146,235,146,235,146,146,146,146,146,146,146,146,146,235,235,146,235,146,146,146,146,146,235,146,235,146,235,146,146,146,235,146,235,146,235,146,146,146,235,146,146,235,455,456,455,456,455,456,456,0,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,0,0,0,457,0,423,423,0,423,423,423,423,423,423,423,457,457,423,423,423,423,423,0,0,0,0,0,0,424,425,424,425,424,424,424,424,424,424,425,424,424,425,425,424,424,425,425,424,425,424,425,425,425,425,425,424,424,424,425,424,425,424,425,425,424,425,424],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],0,[[2,3],[[5,[4]]]],[[]],[[],6],0,[[],[[9,[7,8]]]],0,[[],[[11,[10]]]],[6,12],[[]],[6],[3,[[13,[1,8]]]],[6,[[15,[14]]]],0,[[[20,[[19,[[0,[[18,[[0,[16,17]]]],16,17]]]]]],[9,[[7,[[0,[16,17]]]]]],[22,[21]]]],[[[24,[23]],25],[[28,[[27,[26,8]]]]]],[[[24,[23]]],[[28,[[27,[26,8]]]]]],0,[[],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[15,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[30,31]]]],[[32,33],34],0,[35,36],[[],[[5,[[9,[37,8]]]]]],[[[3,[38]]],[[3,[38]]]],[[[2,[38]]],[[2,[38]]]],[39,39],[6,6],[40,40],[1,1],[41,41],[32,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],42],[[40,40],42],[[1,1],42],[[41,41],42],[[32,32],42],0,0,[[43,[46,[44,45]]],[[5,[[3,[47]],48]]]],[[43,[46,[44,45]]],[[5,[[2,[47]],48]]]],[[43,[46,[44,45]]],[[5,[6,48]]]],[[43,[46,[44,45]]],[[5,[40,48]]]],[[43,[46,[44,45]]],[[5,[1,48]]]],[[43,[46,[44,45]]],[[5,[41,48]]]],[[43,[46,[44,45]]],[[5,[32,48]]]],[[[3,[49]],50],[[5,[29,51]]]],[[[2,[49]],50],[[5,[29,51]]]],[[6,50],[[5,[29,51]]]],[[40,50],[[5,[29,51]]]],[[1,50],[[5,[29,51]]]],[[41,50],[[5,[29,51]]]],[[32,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[[[24,[23]]],[[28,[[27,[26,8]]]]]],[[52,[22,[21]]],[[28,[[27,[26]]]]]],0,[2,29],[39,29],[3,29],[2,29],[39,29],0,0,0,[[],44],[[],3],[[],2],[[],39],[[],29],[6],[53,[[5,[[3,[54]]]]]],[53,[[5,[[2,[54]]]]]],[53,[[5,[39]]]],[53,[[5,[6]]]],[53,[[5,[40]]]],[53,[[5,[1]]]],[53,[[5,[41]]]],[53,[[5,[32]]]],0,[[1,1]],0,0,0,[[],[[56,[55]]]],[[],[[56,[55]]]],0,[[]],[[]],[[[3,[57]],1],[[58,[1,57,8]]]],0,[[[3,[[59,[[59,[[59,[59]]]]]]]],[3,[[59,[[59,[[59,[59]]]]]]]]],60],[[[2,[[59,[[59,[[59,[59]]]]]]]],[2,[[59,[[59,[[59,[59]]]]]]]]],60],[[39,39],60],[[6,6],60],[[40,40],60],[[1,1],60],[[41,41],60],[[32,32],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[2,64]],[[[3,[65]],66],[[5,[67]]]],[[[2,[65]],66],[[5,[67]]]],[[39,66],[[5,[67]]]],[[6,66],[[5,[67]]]],[[6,66],[[5,[67]]]],[[6,66],[[5,[67]]]],[[40,66],[[5,[67]]]],[[40,66],[[5,[67]]]],[[1,66],[[5,[67]]]],[[1,66],[[5,[67]]]],[[41,66],[[5,[67]]]],[[41,66],[[5,[67]]]],[[68,66],[[5,[67]]]],[[68,66],[[5,[67]]]],[[32,66],[[5,[67]]]],[[69,66],[[5,[67]]]],[[69,66],[[5,[67]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,6],[23,40],[[]],[[]],[34,1],[[]],[[]],[70,68],[71,68],[[]],[[]],[[[0,[30,72,73]]],[[5,[74]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[]],[[],6],[12,6],[[]],[[],6],[64,3],[64,2],[64,39],[33,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,1],[[[15,[14]]],[[5,[76]]]],[[[15,[14]]],[[5,[6,76]]]],[[[15,[14]]],[[5,[6,76]]]],[77,[[5,[6]]]],[77,[[5,[1]]]],[[77,78],[[5,[1,68]]]],[1,3],[[3,1],22],[[2,1],[[22,[[9,[8]]]]]],[[3,1],22],[[2,1],[[22,[[9,[8]]]]]],[[[3,[57]],1],57],0,[[[15,[14]]]],[[[3,[79]],80]],[[[2,[79]],80]],[[6,80]],[[40,80]],[[1,80]],[[41,80]],[[32,80]],0,0,0,[[39,1,29]],[[6,[81,[[15,[14]]]]]],[[3,1],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[[]],[[[2,[17]]]],[2,[[0,[30,73]]]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[2,60],[3,30],[2,30],[39,30],[2,[[0,[30,73]]]],[2,30],0,[[2,1],29],0,[[2,83],[[5,[2]]]],[[],29],[3,1],0,0,0,[[],84],0,0,0,0,0,0,[33,1],0,[[1,33]],0,[[]],0,[[[9,[8]]],85],[[[13,[1,[9,[8]],8]]],2],[[[85,[30]]],22],[[],29],0,0,[[[24,[23]],41],[[28,[[27,[26,8]]]]]],[[6,6],[[22,[42]]]],[[40,40],[[22,[42]]]],[[1,1],[[22,[42]]]],[[41,41],[[22,[42]]]],[[32,32],[[22,[42]]]],0,0,[[[24,[23]],40],[[28,[[27,[26,8]]]]]],[[[24,[23]]],[[28,[[27,[26,8]]]]]],[[[24,[23]],41],[[28,[[27,[26,8]]]]]],[86],[86],0,0,0,0,[[1,1]],[[1,1]],[[1,39,3,23],39],[[87,88],89],[[87,88],[[89,[90]]]],0,[33,1],0,[[1,1],1],0,[[[3,[91]],92],5],[[[2,[91]],92],5],[[39,92],5],[[6,92],5],[[40,92],5],[[1,92],5],[[41,92],5],[[32,92],5],0,0,[68,[[22,[93]]]],[[77,94,[20,[19]],95,60],96],[[97,60],96],[96],[[3,3],60],[[2,2],60],[[1,1]],[[1,1]],[30,1],[2,39],0,[[],29],[[3,1],[[5,[4]]]],0,0,[3,73],0,0,[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[99]]],[[3,[100]]]],[[],98],[[],98],[[],98],[[],98],[[],98],[[],98],[40,29],[[],29],[2,1],[39,1],0,[[],[[5,[[11,[10]],101]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,5],0,0,0,0,0,0,[[104,105],26],0,[[104,106],26],[[104,106],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[107,107],[105,105],[108,108],[109,109],[110,110],[[]],[[]],[[]],[[]],[[]],0,[[],110],[53,[[5,[107]]]],[53,[[5,[105]]]],[53,[[5,[108]]]],[53,[[5,[109]]]],[53,[[5,[110]]]],[[105,105],60],[[108,108],60],[[109,109],60],[[110,110],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[104,111,[46,[44,45]]],26],[[107,66],[[5,[67]]]],[[105,66],[[5,[67]]]],[[108,66],[[5,[67]]]],[[109,66],[[5,[67]]]],[[110,66],[[5,[67]]]],[[104,[113,[112]],106],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,26],[104,26],[[104,106],26],[[104,106],26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],0,0,0,0,0,0,[114,104],0,0,0,0,[[104,106],26],[[107,92],5],[[105,92],5],[[108,92],5],[[109,92],5],[[110,92],5],[[104,107,106],26],[[104,110,106],26],[[104,106],26],[[104,106],26],[[104,106],26],[104,26],0,[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[115,[40,8]]]],[[[117,[[0,[116,65]]]]],[[115,[40,8]]]],[118,119],[[41,120,44],[[28,[[27,[26,8]]]]]],[[41,120,44],[[28,[[27,[26,8]]]]]],[6,[[28,[[27,[26,8]]]]]],[6,[[28,[[27,[26,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121,121],[122,122],[118,118],[[[117,[38]]],[[117,[38]]]],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114,[[28,[[27,[26,8]]]]]],0,[[],[[28,[[27,[26,8]]]]]],[[],[[28,[[27,[26,8]]]]]],[[43,[46,[44,45]]],[[5,[121,48]]]],[[43,[46,[44,45]]],[[5,[124,48]]]],[[121,50],[[5,[29,51]]]],[[123,50],[[5,[29,51]]]],[[124,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],0,[[],125],[[],126],[[],127],[[],128],[122],[118],[53,[[5,[121]]]],[53,[[5,[123]]]],[53,[[5,[124]]]],[53,[[5,[125]]]],[53,[[5,[126]]]],[53,[[5,[127]]]],[53,[[5,[128]]]],[53,[[5,[129]]]],[130,[[28,[[27,[26,8]]]]]],[130,[[28,[[27,[26,8]]]]]],[131,[[28,[[27,[26,8]]]]]],[131,[[28,[[27,[26,8]]]]]],[123,[[28,[[27,[26,8]]]]]],[123,[[28,[[27,[26,8]]]]]],0,[[123,123],60],[[124,124],60],[[125,125],60],[[126,126],60],[[127,127],60],[[128,128],60],[[129,129],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],0,[[],[[28,[[27,[26,8]]]]]],[[],[[28,[[27,[26,8]]]]]],[[33,111,[46,[44,45]]],[[28,[[27,[26,8]]]]]],[[33,111,[46,[44,45]]],[[28,[[27,[26,8]]]]]],[[41,44],[[28,[[27,[26,8]]]]]],[[41,44],[[28,[[27,[26,8]]]]]],[6,[[28,[[27,[26,8]]]]]],[6,[[28,[[27,[26,8]]]]]],0,[[132,66],[[5,[67]]]],[[132,66],[[5,[67]]]],[[133,66],[[5,[67]]]],[[133,66],[[5,[67]]]],[[134,66],[[5,[67]]]],[[134,66],[[5,[67]]]],[[121,66],[[5,[67]]]],[[122,66],[[5,[67]]]],[[118,66],[[5,[67]]]],[[[117,[65]],66],[[5,[67]]]],[[123,66],[[5,[67]]]],[[123,66],[[5,[67]]]],[[124,66],[[5,[67]]]],[[[135,[65]],66],[[5,[67]]]],[[125,66],[[5,[67]]]],[[126,66],[[5,[67]]]],[[127,66],[[5,[67]]]],[[128,66],[[5,[67]]]],[[129,66],[[5,[67]]]],[[]],[136,132],[[]],[133,134],[[]],[137,134],[[]],[[[0,[138,31,139]]],122],[[]],[[[0,[119,31,139]]],118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[140,[[117,[141]]]],[[[15,[123]]],[[117,[141]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,[[5,[123]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],60],[132,60],[133,60],0,0,0,[[[9,[8]]],[[117,[141]]]],[[[9,[8]]],117],0,0,[117,[[9,[40,8]]]],0,0,0,0,0,[86],[86],[86],[[16,98,[143,[142]]],[[28,[[27,[26,8]]]]]],[[40,77,[15,[142]]],[[28,[[27,[26,8]]]]]],[[[117,[[0,[116,65]]]],40,77,[15,[142]]],[[28,[[27,[26,8]]]]]],[[16,[0,[[145,[144,65]],31]],98,[143,[142]]],[[28,[[27,[26,8]]]]]],0,[[121,92],5],[[123,92],5],[[124,92],5],[[125,92],5],[[126,92],5],[[127,92],5],[[128,92],5],[[129,92],5],0,0,[132,[[22,[93]]]],[134,[[22,[93]]]],0,[146,[[28,[[27,[26,8]]]]]],[146,[[28,[[27,[26,8]]]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],98],[[],98],[[],98],[[],98],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[147,[[28,[[27,[26,8]]]]]],[147,[[28,[[27,[26,8]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,122],[[[117,[[0,[116,65]]]],23],122],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[148,148],[149,149],[[]],[[]],[[43,[46,[44,45]]],[[5,[148,48]]]],[[43,[46,[44,45]]],[[5,[150,48]]]],[[43,[46,[44,45]]],[[5,[149,48]]]],[[148,50],[[5,[29,51]]]],[[150,50],[[5,[29,51]]]],[[149,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],0,[53,[[5,[149]]]],[[149,149],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[148,66],[[5,[67]]]],[[150,66],[[5,[67]]]],[[149,66],[[5,[67]]]],[[]],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[148,92],5],[[149,92],5],0,[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[151,151],[[]],[[43,[46,[44,45]]],[[5,[151,48]]]],[[151,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[53,[[5,[151]]]],[[151,151],60],[[],60],[[],60],[61,[[5,[62,63]]]],[[151,66],[[5,[67]]]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[],[[5,[151,137]]]],[[]],[[151,80]],[[]],[[],82],0,[[151,92],5],[[],[[9,[14,8]]]],[[]],[[],5],[[],5],[[],102],0,[[]],0,0,[[]],[[]],[[152,66],[[5,[67]]]],[[152,66],[[5,[67]]]],[[]],[[]],[[],82],[86],[[],98],[[],5],[[],5],[[],102],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[90,[13,[21,153]]]],0,0,0,0,0,[154,[[13,[40,155]]]],[[[158,[[157,[156]]]],[0,[[159,[[157,[156]]]],17,16]]]],0,0,[[[158,[[157,[156]]]],30],[[5,[[46,[44,45]],137]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[160,[[5,[137]]]],0,[90,90],[161,161],[162,162],[163,163],[164,164],[155,155],[140,140],[154,154],[165,165],[166,166],[167,167],[[[158,[38]]],[[158,[38]]]],[168,168],[169,169],[170,170],[160,160],[153,153],[171,171],[172,172],[[[174,[[0,[38,173]]]]],[[174,[[0,[38,173]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[167,167],42],0,0,0,[[175,176,177,88],[[179,[[0,[65,38,91,144,178,17,16]]]]]],0,0,0,0,[[43,[46,[44,45]]],[[5,[155,48]]]],[[43,[46,[44,45]]],[[5,[140,48]]]],[[43,[46,[44,45]]],[[5,[167,48]]]],[[43,[46,[44,45]]],[[5,[170,48]]]],[[43,[46,[44,45]]],[[5,[160,48]]]],[[162,50],[[5,[29,51]]]],[[155,50],[[5,[29,51]]]],[[140,50],[[5,[29,51]]]],[[167,50],[[5,[29,51]]]],[[170,50],[[5,[29,51]]]],[[160,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[140,12],0,0,[[[158,[[157,[156]]]],30],[[5,[[46,[44,45]],137]]]],[[[158,[[157,[156]]]],30],[[5,[[46,[44,45]],137]]]],[[],158],[[],168],[[],169],[53,[[5,[90]]]],[53,[[5,[161]]]],[53,[[5,[162]]]],[53,[[5,[163]]]],[53,[[5,[164]]]],[53,[[5,[155]]]],[53,[[5,[140]]]],[53,[[5,[165]]]],[53,[[5,[166]]]],[53,[[5,[167]]]],[53,[[5,[168]]]],[53,[[5,[169]]]],[53,[[5,[170]]]],[53,[[5,[160]]]],[53,[[5,[153]]]],[53,[[5,[171]]]],[53,[[5,[172]]]],[53,[[5,[[174,[173]]]]]],[53,5],[[154,180,177,88],[[181,[90]]]],0,0,0,[[],167],0,0,0,[[163,163],60],[[155,155],60],[[140,140],60],[[165,165],60],[[166,166],60],[[167,167],60],[[168,168],60],[[170,170],60],[[160,160],60],[[153,153],60],[[[174,[[0,[[59,[[0,[[59,[[0,[[59,[[0,[59,173]]]],173]]]],173]]]],173]]]],[174,[[0,[[59,[[0,[[59,[[0,[[59,[[0,[59,173]]]],173]]]],173]]]],173]]]]],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[[182,[40]]],183],0,0,[140,[[22,[77]]]],[[90,66],184],[[161,66],184],[[162,66],184],[[163,66],[[5,[67]]]],[[164,66],184],[[155,66],[[5,[67]]]],[[140,66],[[5,[67]]]],[[154,66],184],[[165,66],[[5,[67]]]],[[166,66],184],[[167,66],[[5,[67]]]],[[167,66],[[5,[67]]]],[[[158,[65]],66],[[5,[67]]]],[[168,66],[[5,[67]]]],[[169,66],[[5,[67]]]],[[170,66],[[5,[67]]]],[[160,66],[[5,[67]]]],[[153,66],[[5,[67]]]],[[171,66],[[5,[67]]]],[[185,66],[[5,[67]]]],[[185,66],[[5,[67]]]],[[172,66],[[5,[67]]]],[[[174,[[0,[65,173]]]],66],[[5,[67]]]],[[]],[[154,40,[13,[40,186]],187,183,183,183,[13,[21,153]]],90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[[157,[156]],8]]],[[158,[[157,[156]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[163,163,170,163],153],[[]],[152,185],[[]],[137,185],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[170,[[5,[137]]]],[64,[[158,[[157,[156]]]]]],[172,[[5,[137]]]],[172,[[5,[[174,[188]],137]]]],[172,[[5,[[174,[189]],137]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,[[5,[167]]]],[190,[[5,[168,137]]]],[[23,84,191,192],[[5,[160,137]]]],[77,[[5,[137]]]],[[158,84],22],[[140,[159,[84]]],[[5,[137]]]],[[140,[159,[84]]],[[5,[137]]]],[90,23],[90,123],[[140,23],[[5,[47,137]]]],[[140,23],[[5,[160,137]]]],[[[13,[21,163]],21],[[89,[163]]]],[[90,21],[[89,[153]]]],[[90,21],[[89,[193]]]],[[90,[159,[84]]],[[89,[21]]]],[[155,80]],[[166,80]],[[167,80]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],0,[[163,84],60],[[160,84],60],[90,30],[162,30],[[],84],[163,84],[160,84],0,0,0,[158,[[115,[84,8]]]],[194,[[5,[144,137]]]],0,0,0,0,[[],95],0,0,0,0,0,0,0,0,0,[90,175],[[84,142],163],[[],158],[[[22,[142]],[22,[142]]],168],0,[154,175],[154,[[13,[40,155]]]],[[167,167],[[22,[42]]]],[154,[[9,[40]]]],0,0,[86],[[140,[46,[44,45]]],[[5,[140,48]]]],[[160,[46,[44,45]]],[[5,[160,48]]]],0,0,0,[[90,92],5],[[161,92],5],[[162,92],5],[[163,92],5],[[164,92],5],[[155,92],5],[[140,92],5],[[165,92],5],[[166,92],5],[[167,92],5],[[168,92],5],[[169,92],5],[[170,92],5],[[160,92],5],[[153,92],5],[[171,92],5],[[172,92],5],[[[174,[173]],92],5],[92,5],0,[185,[[22,[93]]]],[[],195],[[[13,[21,170]],180],130],[154,[[13,[40,196]]]],0,[90,176],[154,176],0,[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[162,[158,[197]]],[[5,[140,137]]]],[[[158,[197]]],[[158,[198]]]],[[],153],[[167,[200,[199]]],[[5,[186,137]]]],[[],172],[[[174,[188]]],172],[[[174,[189]]],172],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],98],[[],98],[168,[[5,[190,137]]]],[153,[[5,[193,137]]]],[[[201,[40,154]],180],[[13,[40,90]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],0,[[90,40,180],89],[163,142],0,[[],191],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,163],0,0,0,0,0,[[202,105],36],0,0,0,0,[203,[[36,[106]]]],0,[77,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[205,205],[203,203],[206,206],[[]],[[]],[[]],[[]],0,0,[[202,52,[22,[21]]],[[28,[[27,[26]]]]]],0,0,0,0,0,[[204,66],184],[[205,66],184],[[203,66],184],[[206,66],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[203,110,108],[[36,[154]]]],[202,[[36,[[9,[105]]]]]],[[202,110],[[36,[109]]]],[202,[[36,[110]]]],[203,[[13,[40,105]]]],[202,[[36,[110]]]],[90,[[13,[40,12]]]],[202,[[36,[[13,[40,12]]]]]],[202,60],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],0,0,[203,[[36,[206]]]],0,0,[[207,205,208,[209,[90]],88],202],[205,203],0,0,[203,[[36,[105]]]],0,0,0,0,0,0,0,[[202,128],[[36,[[210,[203]]]]]],[202,36],[[],[[9,[[7,[202]]]]]],[202,128],[[202,107],36],[[202,110],36],[[202,106],36],[[203,107],36],0,[[202,106],36],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[202,36],[202,36],[[]],[[]],[[]],[[]],[[]],[[202,90,203],36],0,0,0,0,0,0,0,0,[[[212,[[0,[91,144,178,17,38,211,79]]]],[0,[91,144,178,17,38,211,79]],29]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[213,[173]],[174,[173]]],[[214,[173]]]],[[[214,[[0,[38,173]]]]],[[214,[[0,[38,173]]]]]],[[[215,[38]]],[[215,[38]]]],[183,183],[[]],[[]],[[]],0,0,[[98,186],[[28,[[27,[26]]]]]],0,0,[[[214,[[0,[65,173]]]],66],184],[[[215,[65]],66],184],[[183,66],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[213,[173]]],173],[[[213,[173]],[9,[173]]],12],0,[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[[9,[[0,[91,144,178,17,38,211,79]]]],29,40,[15,[40]]],[[212,[[0,[91,144,178,17,38,211,79]]]]]],[[173,40,[9,[40]],29,216]],[[[0,[91,144,178,17,38,211,79]],29,40,[15,[40]]],[[212,[[0,[91,144,178,17,38,211,79]]]]]],0,0,0,0,0,0,0,[[[212,[[0,[91,144,178,17,38,211,79]]]],21,173,[217,[171]]],[[181,[[201,[[0,[91,144,178,17,38,211,79]],[215,[173]]]]]]]],[[[0,[91,144,178,17,38,211,79,16]]],[[28,[[27,[26]]]]]],[[[217,[171]],[213,[173]],[214,[173]]],[[181,[[215,[173]]]]]],[[[9,[[0,[91,144,178,17,38,211,79,16]]]]],[[28,[[27,[26]]]]]],[[[212,[[0,[91,144,178,17,38,211,79]]]],21,[217,[171]]],[[181,[[201,[[0,[91,144,178,17,38,211,79]],[215,[189]]]]]]]],[[[212,[[0,[91,144,178,17,38,211,79]]]],21,[217,[171]]],[[181,[[201,[[0,[91,144,178,17,38,211,79]],[215,[188]]]]]]]],[40,218],0,0,0,[[[213,[173]],40,[174,[173]]],[[89,[[214,[173]]]]]],[[[215,[188]]]],0,[[[215,[189]]],183],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[219,207],[[89,[[0,[91,144]]]]]],[[[0,[91,144]],219,207],89],[[220,194],89],[207,[[89,[[0,[91,144]]]]]],[[[0,[91,144]],207],89],[[77,207],[[89,[90]]]],[[90,207,77,180],89],[53,[[5,[144]]]],[[91,92],5],[53,[[5,[[13,[40,196]]]]]],[[[13,[40,196]],92],5],[53,[[5,[221]]]],[[221,92],5],0,0,0,0,0,0,0,0,0,0,0,0,[[222,223]],[[222,223]],0,0,[224,25],[224],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[224,146],225],0,0,[226,226],[227,227],[228,228],[[]],[[]],[[]],0,0,[224,229],[[],222],0,[[226,226],60],[[228,228],60],[[],60],[[],60],0,[[226,66],184],[[227,66],184],[[228,66],184],[[225,66],184],0,[[]],[[]],[[]],[230,226],[[]],[[]],[[]],[[]],[[]],[[]],[[225,21],231],[224,227],[[228,80]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[224,60],0,0,0,0,[[224,232,233,40],89],[[224,234,[22,[[115,[6]]]]],112],[[224,234,232,[9,[40]],[115,[6]]],112],0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[222,[[5,[235]]]],[[]],[[]],[[]],[[]],[[]],[[]],[234,98],[233,98],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[97,[[89,[236]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[237,237],[[]],0,0,0,[53,[[5,[237]]]],[61,[[5,[62,63]]]],[[237,66],184],[[97,230]],[[]],[[]],[[]],[[]],[97,[[238,[[9,[234]]]]]],[[97,[240,[[9,[239]],40]]],[[238,[[9,[234]]]]]],0,[[]],[[]],[[]],[[],82],[[],82],[[],82],0,0,[[241,229]],[[90,208,180,88],[[89,[97]]]],[[90,208,180,[242,[237]],177,88],[[89,[97]]]],[97,33],0,0,[[97,[22,[227]]],227],[[97,234],[[5,[243]]]],[[97,227,[0,[216,244,38]]],[[238,[[240,[[9,[239]],40]]]]]],[[97,33,40]],0,[[97,33]],[[97,245],89],[[97,[22,[227]],[0,[216,244,38]]],[[89,[[9,[234]]]]]],[[237,92],5],[97],[97,60],0,[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[246,[200,[247]],248],[[5,[246,249]]]],[[],250],[[],250],[[],250],[[],250],[[],250],[251,250],[251,250],[251,250],[251,250],[251,250],[246,252],[246,252],[84,77],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[253,44],[[],253],0,[23,254],[23,255],[23,256],[23,257],[23,258],[246,246],[84,84],[[251,23],257],[251,251],[[251,23],254],[[251,23],255],[[251,23],258],[[251,23],256],[44,44],[254,254],[255,255],[256,256],[257,257],[258,258],[77,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[246,246],42],[[84,84],42],[[43,[46,[44,45]]],[[5,[246,48]]]],[[43,[46,[44,45]]],[[5,[84,48]]]],[[43,[46,[44,45]]],[[5,[251,48]]]],[[43,[46,[44,45]]],[[5,[254,48]]]],[[43,[46,[44,45]]],[[5,[255,48]]]],[[43,[46,[44,45]]],[[5,[256,48]]]],[[43,[46,[44,45]]],[[5,[257,48]]]],[[43,[46,[44,45]]],[[5,[258,48]]]],[[246,50],[[5,[29,51]]]],[[84,50],[[5,[29,51]]]],[[251,50],[[5,[29,51]]]],[[254,50],[[5,[29,51]]]],[[255,50],[[5,[29,51]]]],[[256,50],[[5,[29,51]]]],[[257,50],[[5,[29,51]]]],[[258,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[246,259],[[44,43,23,[46,[44,45]]],[[5,[250,48]]]],0,0,[[],253],[[],44],[254],[255],[256],[257],[258],[254],[255],[256],[257],[258],[53,[[5,[246]]]],[53,[[5,[84]]]],[246,260],[[],33],[[],33],[[],33],[[],33],[[],33],[251,33],[251,33],[251,33],[251,33],[251,33],[[246,246],60],[[84,84],60],[[251,251],60],[[254,254],60],[[255,255],60],[[256,256],60],[[257,257],60],[[258,258],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[254,60],[255,60],[256,60],[257,60],[258,60],[[251,255],60],[[251,254],60],[[251,258],60],[[251,256],60],[[251,257],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[246,66],[[5,[67]]]],[[84,66],[[5,[67]]]],[[84,66],[[5,[67]]]],[[251,66],[[5,[67]]]],[[251,66],[[5,[67]]]],[[44,66],[[5,[67]]]],[[254,66],[[5,[67]]]],[[254,66],[[5,[67]]]],[[255,66],[[5,[67]]]],[[255,66],[[5,[67]]]],[[256,66],[[5,[67]]]],[[256,66],[[5,[67]]]],[[257,66],[[5,[67]]]],[[257,66],[[5,[67]]]],[[258,66],[[5,[67]]]],[[258,66],[[5,[67]]]],[[]],[[]],[259,246],[[]],[77,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[23,[27,[261,8]]],254],[[23,[27,[262,8]]],255],[[23,[27,[263,8]]],256],[[23,[27,[264,8]]],257],[[23,[27,[265,8]]],258],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[200,[266]],[15,[14]]],[[5,[246,249]]]],[[[200,[266]],77],[[5,[246,249]]]],[77,[[5,[246,249]]]],[[[200,[266]],187],246],[77,84],[77,[[5,[246]]]],[[23,[0,[261,31,139]]],254],[[23,[0,[262,31,139]]],255],[[23,[0,[263,31,139]]],256],[[23,[0,[264,31,139]]],257],[[23,[0,[265,31,139]]],258],[[246,80]],[[251,80]],[[254,80]],[[255,80]],[[256,80]],[[257,80]],[[258,80]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[254,23],[255,23],[256,23],[257,23],[258,23],0,0,0,0,0,[[[200,[266]],[0,[267,268]]],246],[[[0,[267,268]]],246],[[246,246],[[22,[42]]]],[[84,84],[[22,[42]]]],[246,186],[246,[[269,[14]]]],[246,187],[[246,92],5],[[84,92],5],0,[[246,270],271],[[246,[200,[247]],[22,[272]]],259],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],98],[[],98],[[],98],[[],98],[[],98],[[],98],[[],98],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[246,[200,[247]],248],[[5,[249]]]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[253],[246],0,0,[[]],[[]],[[]],[[]],[[43,[46,[44,45]]],[[5,[273,48]]]],[[273,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[53,[[5,[273]]]],[53,[[5,[147]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[273,66],[[5,[67]]]],[[147,66],[[5,[67]]]],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],0,[[]],[[]],[[],82],[[],82],0,0,[[273,92],5],[[147,92],5],[[273,246],[[5,[147,137]]]],0,0,[[],[[9,[14,8]]]],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[147,[200,[[0,[266,247]]]]],[[5,[273,249]]]],[[]],[[]],0,0,0,0,0,[[],250],[[]],[[]],[274,274],[[]],[[],44],[[],44],[274],[[274,66],[[5,[67]]]],[[[0,[275,31,139]]],274],[[]],[[]],0,[[],223],[[]],[[],82],[[],84],[[],223],[[]],[[],5],[[],5],[[],102],[[]],0,0,0,0,0,[[],[[9,[[7,[276]],8]]]],[[],250],[[],250],[[[24,[23]],25],[[28,[[27,[26,8]]]]]],[[[24,[23]]],[[28,[[27,[26,8]]]]]],[[]],[[]],[[]],[[]],[[[15,[255]]],231],[[],231],[276,276],[[]],[[[24,[23]],23],[[28,[[27,[26,8]]]]]],[[],44],[231],[276],[231],[[231,66],[[5,[67]]]],[[276,66],[[5,[67]]]],[[[0,[277,31,139]]],231],[[]],[[]],[[[0,[278,31,139]]],276],[[]],0,0,[[]],[[]],[[],82],[[],82],[[[24,[23]],41,23],[[28,[[27,[26,8]]]]]],[[[24,[23]],258,40],[[28,[[27,[26,8]]]]]],[[[24,[23]],255,231],[[28,[[27,[26,8]]]]]],[[[24,[23]],256,41],[[28,[[27,[26,8]]]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[279,279],[280,280],[281,281],[[]],[[]],[[]],[[43,229],[[5,[282,48]]]],[[43,229],[[5,[283,48]]]],[[43,229],[[5,[281,48]]]],[[43,229],[[5,[284,48]]]],[[43,229],[[5,[285,48]]]],[[43,229],[[5,[286,48]]]],[[43,229],[[5,[287,48]]]],[[43,229],[[5,[288,48]]]],[[43,229],[[5,[289,48]]]],[[43,229],[[5,[290,48]]]],[[43,229],[[5,[291,48]]]],[[282,50],[[5,[29,51]]]],[[283,50],[[5,[29,51]]]],[[281,50],[[5,[29,51]]]],[[284,50],[[5,[29,51]]]],[[285,50],[[5,[29,51]]]],[[286,50],[[5,[29,51]]]],[[287,50],[[5,[29,51]]]],[[288,50],[[5,[29,51]]]],[[289,50],[[5,[29,51]]]],[[290,50],[[5,[29,51]]]],[[291,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[279,66],184],[[279,66],184],[[282,66],184],[[283,66],184],[[281,66],184],[[284,66],184],[[285,66],184],[[286,66],184],[[287,66],184],[[288,66],184],[[289,66],184],[[290,66],184],[[291,66],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[]],[[]],[[]],[[280,29],[[22,[279]]]],[[],292],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],280],[280,29],0,[280,22],[280,22],[[280,29],22],[[282,92],5],[[281,92],5],[[285,92],5],[[286,92],5],[[287,92],5],[[289,92],5],[[290,92],5],[[291,92],5],[280],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[]],[[]],[[]],[[],98],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[293,[38]]],[[293,[38]]]],[[]],[[43,[46,[44,45]]],[[5,[48]]]],[[43,[46,[44,45]]],[[5,[294,48]]]],[[43,[46,[44,45]]],[[5,[[293,[47]],48]]]],[[77,[46,[44,45]]],[[5,[48]]]],[50,[[5,[29,51]]]],[[294,50],[[5,[29,51]]]],[[295,50],[[5,[29,51]]]],[[[293,[49]],50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[[],[[5,[98,51]]]],[[],[[5,[[9,[14,8]],51]]]],[[],296],[297,33],0,[53,[[5,[[293,[54]]]]]],[60,[[5,[51]]]],[298,[[5,[51]]]],[299,[[5,[51]]]],[300,[[5,[51]]]],[301,[[5,[51]]]],[[[15,[14]]],[[5,[51]]]],[23,[[5,[51]]]],[95,[[5,[51]]]],[33,[[5,[51]]]],[14,[[5,[51]]]],[[[293,[[59,[[59,[[59,[59]]]]]]]],[293,[[59,[[59,[[59,[59]]]]]]]]],60],[[],60],[[],60],[61,[[5,[62,63]]]],[[[293,[47]]],47],[[[293,[47]]],47],[[[297,[50]]],[[5,[51]]]],[[48,66],[[5,[67]]]],[[48,66],[[5,[67]]]],[[[293,[65]],66],[[5,[67]]]],[[]],[[]],[[],297],[302],[[]],[[],293],[[]],[302],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[0,[93,17,16]]],48],[[]],[77,48],0,[[]],[[]],[[]],[[]],[297],[[],82],[[],82],[[],82],[[],82],[137,48],[86],[43,[[5,[294,303]]]],[43,[[5,[22,303]]]],[[[293,[47]],[46,[44,45]]],[[5,[[293,[47]],48]]]],[[[293,[91]],92],5],[[],[[9,[14,8]]]],[[]],[[],98],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[294,304],[[5,[51]]]],[[[297,[50]],[15,[14]]],[[5,[29,51]]]],[[[15,[14]]],[[5,[51]]]],[305,[[5,[29,51]]]],[306,[[5,[29,51]]]],0,0,[53,[[5,[47]]]],[[49,92],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[112,307,112],[[5,[112,243]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[233,233],[308,308],[309,309],[310,310],[112,112],[230,230],[[]],[[]],[[]],[[]],[[]],[[]],[[307,[13,[40,309,8]],[157,[[15,[14]]]]],[[5,[310,[115,[40,8]]]]]],[[43,[46,[44,45]]],[[5,[233,48]]]],[[43,[46,[44,45]]],[[5,[308,48]]]],[[43,[46,[44,45]]],[[5,[309,48]]]],[[43,[46,[44,45]]],[[5,[310,48]]]],[[43,[46,[44,45]]],[[5,[112,48]]]],[[43,[46,[44,45]]],[[5,[230,48]]]],[[233,50],[[5,[29,51]]]],[[308,50],[[5,[29,51]]]],[[309,50],[[5,[29,51]]]],[[310,50],[[5,[29,51]]]],[[112,50],[[5,[29,51]]]],[[230,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],0,[53,[[5,[309]]]],[53,[[5,[310]]]],0,0,[[233,233],60],[[308,308],60],[[309,309],60],[[310,310],60],[[112,112],60],[[230,230],60],[[243,243],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[233,66],[[5,[67]]]],[[308,66],[[5,[67]]]],[[309,66],[[5,[67]]]],[[310,66],[[5,[67]]]],[[112,66],[[5,[67]]]],[[230,66],[[5,[67]]]],[[243,66],[[5,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[115,[40,8]]],243],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[233,80]],[[308,80]],[[309,80]],[[310,80]],[[112,80]],[[230,80]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],0,0,0,[[33,[13,[40,[9,[233,8]],8]],[115,[6,8]],[22,[112]]],112],0,0,[[309,92],5],[[310,92],5],0,[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],311],[[112,[22,[112]]],[[5,[243]]]],[[112,111],[[5,[243]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[66,[[5,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[312],[[77,29],29],[[[313,[[0,[65,220]]]],66],[[5,[67]]]],[[314,66],[[5,[67]]]],[[314,66],[[5,[67]]]],[[315,66],[[5,[67]]]],[[[312,[316]],66],[[5,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],60],[[],98],[[],98],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],0,[53,[[5,[[9,[14,8]]]]]],[[[15,[14]],92],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[9,[7,8]]]],[[],156],[198,156],[197,156],0,[[[24,[23]],25],[[28,[[27,[26,8]]]]]],0,[[[24,[23]]],[[28,[[27,[26,8]]]]]],[98,317],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[30,31]]]],[318,318],[191,191],[319,319],[320,320],[195,195],[321,321],[130,130],[223,223],[106,106],[317,317],[198,198],[197,197],[[[113,[[0,[38,49,47]]]]],[[113,[[0,[38,49,47]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[35,26],[[43,[46,[44,45]]],[[5,[318,48]]]],[[43,[46,[44,45]]],[[5,[191,48]]]],[[43,[46,[44,45]]],[[5,[319,48]]]],[[318,50],[[5,[29,51]]]],[[191,50],[[5,[29,51]]]],[[319,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[50,[[5,[29,51]]]],[[[24,[23]]],[[28,[[27,[26,8]]]]]],0,0,0,[[],322],0,[35,[[24,[23]]]],0,[[],44],[[],44],[[],44],[[],44],[[],253],[[],320],[[],[[143,[142]]]],[198],[197],[53,[[5,[318]]]],[53,[[5,[191]]]],[53,[[5,[319]]]],[53,[[5,[320]]]],[53,[[5,[195]]]],[53,[[5,[321]]]],[53,[[5,[130]]]],[53,[[5,[[143,[54]]]]]],[53,[[5,[106]]]],[53,[[5,[[113,[[0,[49,47]]]]]]]],[[323,168],[[28,[[27,[26,8]]]]]],[[323,168],[[28,[[27,[26,8]]]]]],[[[24,[23]],[9,[98,8]]],[[28,[[27,[26,8]]]]]],[[[24,[23]],[9,[98,8]]],[[28,[[27,[26,8]]]]]],[[],324],[[318,318],60],[[191,191],60],[[319,319],60],[[223,223],60],[[106,106],60],[[[113,[[0,[[59,[[0,[[59,[[0,[[59,[[0,[59,49,47]]]],49,47]]]],49,47]]]],49,47]]]],[113,[[0,[[59,[[0,[[59,[[0,[[59,[[0,[59,49,47]]]],49,47]]]],49,47]]]],49,47]]]]],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[323,98,186],[[28,[[27,[26]]]]]],0,[[318,66],[[5,[67]]]],[[191,66],[[5,[67]]]],[[319,66],[[5,[67]]]],[[320,66],[[5,[67]]]],[[195,66],[[5,[67]]]],[[321,66],[[5,[67]]]],[[130,66],[[5,[67]]]],[[325,66],[[5,[67]]]],[[223,66],[[5,[67]]]],[[[143,[65]],66],[[5,[67]]]],[[106,66],[[5,[67]]]],[[317,66],[[5,[67]]]],[[326,66],[[5,[67]]]],[[326,66],[[5,[67]]]],[[198,66],[[5,[67]]]],[[197,66],[[5,[67]]]],[[[113,[[0,[65,49,47]]]],66],[[5,[67]]]],[324,60],[[]],[[]],[[]],[[]],[[]],[[]],[95,318],[95,191],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,326],[[]],[[[0,[156,31,139]]],198],[[]],[[[0,[327,31,139]]],197],[[]],[[]],[[[0,[49,47]]],[[113,[[0,[49,47]]]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[[328,[156,8]]],198],[[95,95,15],321],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[23,170],[[5,[160,137]]]],[170,[[5,[137]]]],[[],[[13,[322,8]]]],[[],[[13,[322,8]]]],[35,[[28,[[27,[26,8]]]]]],0,[35,60],0,[[223,80]],[[[113,[[0,[79,49,47]]]],80]],[[153,208,88],[[28,[[27,[26,8]]]]]],[[153,208,88],[[28,[[27,[26,8]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[324,[[9,[8]]]],[[]],[320],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[324,15],[[],84],0,[[324,329],324],0,0,0,[[],84],[[],84],0,[[208,232,60,[22,[106]]],35],[[[217,[171]],23,40,[9,[40,8]]],323],[[],320],[91,[[143,[142]]]],[[299,98],317],[[[9,[8]]],324],[330,22],[98,317],[[[24,[23]],41],[[28,[[27,[26,8]]]]]],0,[168,[[5,[137]]]],0,[323,[[15,[40]]]],[[[24,[23]],40],[[28,[[27,[26,8]]]]]],[[[24,[23]]],[[28,[[27,[26,8]]]]]],[[[24,[23]],41],[[28,[[27,[26,8]]]]]],[86],0,0,[35,[[22,[106]]]],0,[[323,[0,[91,144,178,17,38,211,79,16]]],[[28,[[27,[26]]]]]],[[323,[9,[[0,[91,144,178,17,38,211,79,16]]]]],[[28,[[27,[26]]]]]],[[318,92],5],[[191,92],5],[[319,92],5],[[320,92],5],[[195,92],5],[[321,92],5],[[130,92],5],[[[143,[91]],92],5],[[106,92],5],[[[113,[[0,[49,47]]]],92],5],[98,317],[326,[[22,[93]]]],[[],321],[[],321],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],[[9,[14,8]]]],[[],198],[[[143,[142]]],142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],98],[[[143,[142]]],[[5,[[143,[144]],331]]]],[[[15,[40]],168],[[13,[40,153,8]]]],[[[15,[40]],168],[[13,[40,153,8]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[64,[[5,[320,319]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[113,[[0,[49,47]]]],[46,[44,45]]],[[5,[[0,[49,47]],48]]]],[[[113,[[0,[49,47]]]],44],[[5,[[0,[49,47]],48]]]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],317],[[40,153],[[5,[137]]]],[[40,153],[[5,[137]]]],[168,[[5,[137]]]],0,[318,[[15,[191]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,[0,[332,333,334]]],26],[[35,[0,[332,333,334]],[0,[83,335]]],26],[[[143,[142]],106],[[143,[142]]]],0,0,0,0,[[25,[24,[23]],77,336,83],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[337,337],[338,338],[[]],[[]],[[],25],[53,[[5,[337]]]],[53,[[5,[338]]]],[[337,337],60],[[338,338],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[339,66],[[5,[67]]]],[[25,66],[[5,[67]]]],[[337,66],[[5,[67]]]],[[338,66],[[5,[67]]]],[[]],[[]],[[]],[[]],[25,337],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],0,0,0,0,0,[25,339],0,0,[[337,92],5],[[338,92],5],[[]],[[]],[[],98],[[],98],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[46,[44,45]]]],[[[46,[168]],23,84,190],[[46,[168]]]],[[]],[[]],[[]],[[]],[[[46,[38,38]]],[[46,[38,38]]]],[45,45],[[]],[[]],[[[46,[276]]],[[46,[44,45]]]],[[[46,[44,45]]],45],[[],[[46,[57]]]],[[],45],[53,[[5,[[46,[168]]]]]],[[[46,[168]],[46,[168]]],60],[[45,45],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[[[46,[65,65]],66],[[5,[67]]]],[[45,66],[[5,[67]]]],[[[13,[23,8]]],[[46,[57]]]],[[]],[[]],[64,[[46,[57]]]],[[]],[[]],[[46,23],22],[[[46,[65]],23],65],[[46,23],22],[[45,80]],0,[[]],[[]],[[],82],[[],82],[46,30],[64,[[46,[57]]]],[[[46,[65]],23,84,65]],[[[46,[168]],92],5],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[]],[[]],[[[46,[44,45]]],[[46,[44,45]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[340,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]],40],[[28,[[27,[26]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[341,[38,38]]],[[341,[38,38]]]],[[[340,[38,38]]],[[340,[38,38]]]],[[]],[[]],[[],342],[53,[[5,[[341,[54,54]]]]]],[61,[[5,[62,63]]]],[[[341,[65,65]],66],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],0,0,0,[[[179,[[341,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]]]]],[[340,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]]]],0,0,[[[340,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]],[0,[91,144,178,17,65,211,79,38]]],[[28,[[27,[26]]]]]],0,[[[179,[[341,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]]]],[342,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]],343,343,[343,[40]]],238],[[[340,[[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]]],[15,[40]],[0,[91,144,178,17,65,211,79,38]],[0,[91,144,178,17,65]]],[[28,[[27,[26]]]]]],0,[[[341,[91,91]],92],5],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[344,6,[9,[21]],232],345],0,[344,130],[[]],[[]],[[]],[[]],[[]],[[]],[[344,146],225],0,0,[[[19,[38]]],[[19,[38]]]],[344,344],[[[346,[38]]],[[346,[38]]]],[[]],[[]],[[]],0,[[344,52,[22,[21]]],[[28,[[27,[26]]]]]],[[344,52,[22,[21]]],[[28,[[27,[26]]]]]],0,0,[[344,123,24],[[36,[140]]]],0,[[344,33],[[22,[112]]]],[[[19,[65]],66],184],[[344,347],36],[[]],[[]],[[]],[[]],[[]],[[]],[[[346,[38]],348],38],[344,33],[344,[[36,[337]]]],[344,[[36,[125]]]],[[344,24,147],[[5,[317]]]],[[344,24,131],[[22,[149]]]],[[]],[[]],[[]],[[],82],[[],82],[[],82],0,0,[120,[[346,[38]]]],[[],[[20,[19]]]],0,0,[[],[[9,[[7,[344]]]]]],[344,[[5,[[349,[228]]]]]],[[344,146],89],0,[[]],[[]],[[]],[[344,6],[[22,[345]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[344,6],345],0,0,0,0,0,0,0,0,[[350,351,352],[[5,[137]]]],[[350,[22,[[15,[196]]]]],[[5,[40,137]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[176,176],[350,350],[[]],[[]],[[114,40],[[28,[[27,[26]]]]]],[[353,114,40],[[28,[[27,[26]]]]]],[77,98],[[353,66],184],[[176,66],184],[[350,66],184],[[]],[[]],[[]],[[]],[[]],[[350,196],[[22,[40]]]],[[]],[[]],[[]],[[[0,[268,17,16,178]]],354],[[],82],[[],82],[[],82],[94,[[28,[[27,[26]]]]]],[[353,94],[[28,[[27,[26]]]]]],0,[[176,40],353],[64,350],0,0,0,[114,[[89,[98]]]],0,0,0,0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[355,355],[356,356],[357,357],[[]],[[]],[[]],[[358,114,40],[[28,[[27,[26]]]]]],[[359,40,357],358],[[40,[0,[360,361,178]]],[[5,[40,137]]]],[[355,355],60],[[],60],[[],60],0,0,[[362,66],184],[[355,66],184],[[356,66],184],[[357,66],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[363,364],[[366,[365]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],0,[[358,94],[[28,[[27,[26]]]]]],0,0,[[367,357],362],[[355,356],363],[[],359],[[120,120],355],[368,356],[[362,364],60],[[[28,[362]],364],[[366,[[5,[51]]]]]],[[[28,[362]],364,369],[[366,[365]]]],[[[28,[362]],364],[[366,[[5,[51]]]]]],[[[28,[362]],364,[15,[14]]],[[366,[[5,[29,51]]]]]],[355,120],[356,60],0,0,0,0,0,[26,22],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[370,[[0,[91,144]],361,360]]]],[[]],[[[370,[[0,[65,91,144,17]],[0,[361,17,178]],[0,[360,17,178]]]]]],[[[371,[144]],372],[[5,[22]]]],[[[371,[[0,[91,65]]]],[0,[91,65]],372],5],[[[370,[65,65,65]],66],184],[[[371,[65]],66],184],[[]],[[]],[[]],[[]],[[[0,[268,17,178]]],373],[[],82],[[],82],[[],82],[[[0,[360,361]]],[[370,[[0,[91,144]],[374,[[0,[360,361]]]],[375,[[0,[360,361]]]]]]]],[[],371],[376,[[377,[[0,[91,144]]]]]],[376,[[377,[[0,[91,144]]]]]],[[],[[28,[[27,[26,8]]]]]],[[],[[28,[[27,[26,8]]]]]],[[[28,[[370,[[0,[65,91]],[0,[361,178]],178]]]],364],[[366,[5]]]],[[[28,[[370,[[0,[65,91]],[0,[361,178]],178]]]],364],[[366,[5]]]],[[[28,[[370,[144,178,[0,[360,178]]]]]],364],[[366,[22]]]],[[[28,[[370,[[0,[65,91]],[0,[361,178]],178]]]],364],[[366,[5]]]],0,[[[28,[[370,[[0,[65,91]],[0,[361,178]],178]]]],[0,[65,91]]],5],0,[[],5],[[],5],[[],5],[[],5],[[28,364],[[366,[[22,[5]]]]]],[[],102],[[],102],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[378,[[0,[65,91,144,38,178,17,16]]]],40],[[28,[[27,[26]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175,175],[[[379,[38]]],[[379,[38]]]],[380,380],[177,177],[[]],[[]],[[]],[[]],0,[[[381,[[0,[65,38]]]],[373,[[379,[[0,[65,38]]]]]],33],[[382,[[0,[65,38]]]]]],0,0,0,0,[53,[[5,[175]]]],[53,[[5,[[379,[54]]]]]],[[[381,[[0,[65,38]]]],33],[[382,[[0,[65,38]]]]]],[[[381,[[0,[65,38]]]],137,33],[[382,[[0,[65,38]]]]]],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],0,[[175,66],184],[[[379,[65]],66],184],[[177,66],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[380,[[201,[40,[89,[127]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],0,0,0,0,[[175,177,[242,[[0,[65,38,91,144,178,17,16]]]],88]],[[40,40,114,177,[383,[[379,[[0,[65,38,17,16]]]]]],[343,[[373,[[379,[[0,[65,38,17,16]]]]]]]],[343,[384]],88],[[385,[[0,[65,38,17,16]]]]]],0,0,0,0,0,0,[[[115,[40]]],[[9,[40]]]],0,[[[378,[[0,[65,91,144,38,178,17,16]]]]],[[28,[[27,[26]]]]]],[[[385,[[0,[65,38,17,16]]]]],[[238,[[0,[65,38,17,16]]]]]],[[[381,[[0,[65,38]]]],386,[373,[[379,[[0,[65,38]]]]]]],[[382,[[0,[65,38]]]]]],[[[381,[[0,[65,38]]]],[387,[[0,[65,38]]]],[5,[[379,[[0,[65,38]]]],137]]],[[382,[[0,[65,38]]]]]],[[[381,[[0,[65,38]]]],[5,[[379,[[0,[65,38]]]],137]]],[[5,[137]]]],[[[381,[[0,[65,38]]]],386],[[382,[[0,[65,38]]]]]],0,[[177,33],120],[[[381,[[0,[65,38]]]],[373,[[379,[[0,[65,38]]]]]]],[[5,[137]]]],0,0,[[[388,[[0,[65,38]]]],245]],[[[209,[[0,[65,38,17,16]]]],[343,[[0,[65,38,17,16]]]],40,40,114,177,[383,[[379,[[0,[65,38,17,16]]]]]],[343,[[373,[[379,[[0,[65,38,17,16]]]]]]]],[343,[384]],245]],[[175,[383,[[379,[[0,[65,38,91,144,178,17,16]]]]]],[201,[40,[209,[[373,[[379,[[0,[65,38,91,144,178,17,16]]]]]]]]]],245]],[[[378,[[0,[65,91,144,38,178,17,16]]]],[15,[40]],[0,[65,91,144,38,178,17,16]]],[[28,[[27,[26]]]]]],[[[385,[[0,[65,38,17,16]]]],[0,[65,38,17,16]]],238],[[[381,[[0,[65,38]]]],386,[0,[65,38]]],[[382,[[0,[65,38]]]]]],[[[381,[[0,[65,38]]]],[387,[[0,[65,38]]]],[0,[65,38]]],[[382,[[0,[65,38]]]]]],[[[381,[[0,[65,38]]]],[387,[[0,[65,38]]]],[22,[[389,[[0,[65,38]]]]]]],[[382,[[0,[65,38]]]]]],[[[381,[[0,[65,38]]]],[387,[[0,[65,38]]]]],[[382,[[0,[65,38]]]]]],[[175,92],5],[[[379,[91]],92],5],0,[[[388,[[0,[65,38]]]],245],[[22,[[388,[[0,[65,38]]]]]]]],[[[381,[[0,[65,38]]]],[387,[[0,[65,38]]]],245],[[22,[[382,[[0,[65,38]]]]]]]],[[[381,[[0,[65,38]]]],386,245],[[22,[[382,[[0,[65,38]]]]]]]],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[381,[[0,[65,38]]]]],[[5,[[373,[[379,[[0,[65,38]]]]]],137]]]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[390,[38]],391]],[[]],[[]],[[]],[[]],[[]],[[]],[[[390,[38]]],[[390,[38]]]],[391,391],[[[389,[38]]],[[389,[38]]]],[[]],[[]],[[]],[[391,391],42],[[[389,[392]],[389,[392]]],42],[[],390],[53,[[5,[391]]]],[53,[[5,[[389,[54]]]]]],[[[390,[59]],[390,[59]]],60],[[391,391],60],[[[389,[59]],[389,[59]]],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[61,[[5,[62,63]]]],[61,[[5,[62,63]]]],[[[390,[65]],66],184],[[391,66],184],[[[389,[65]],66],184],[[]],[[]],[[]],[[]],[[]],[[]],0,[391,391],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[[390,[38]]],30],0,0,[[391,391],[[22,[42]]]],[[[389,[393]],[389,[393]]],[[22,[42]]]],[[[390,[38]],38],[[389,[38]]]],0,[[391,92],5],[[[389,[91]],92],5],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[345,345],[[]],[53,[[5,[345]]]],[[345,345],60],[[],60],[[],60],[61,[[5,[62,63]]]],[[345,66],[[5,[67]]]],[[]],[[]],[[345,80]],[[]],[[],82],[[345,92],5],[[]],[[],5],[[],5],[[],102],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[394,[65]],66],[[5,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,395],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[[0,[83,31,139]],60,29],396],[29,395],[29,397],[29,398],[[29,399],400],[[29,399,130],401],0,[[40,[5,[132]]],394],[[[396,[[0,[65,211,38]]]],40,[5,[[0,[65,211,38]],132]]],[[394,[[0,[65,211,38]]]]]],[[[395,[[0,[211,38,65]]]],40,[5,[[0,[211,38,65]],132]]],[[394,[[0,[211,38,65]]]]]],[[[397,[[0,[65,211,38]]]],40,[5,[[9,[[0,[65,211,38]],8]],132]]],[[394,[[9,[[0,[65,211,38]],8]]]]]],[[[398,[[0,[65,211,38]]]],40,[5,[[0,[65,211,38]],132]]],[[394,[[9,[[0,[65,211,38]],8]]]]]],[[400,40,[5,[132]]],[[394,[[13,[40,8]]]]]],[[401,40,[5,[130,132]]],[[394,[121]]]],[[],[[22,[120]]]],[401,[[22,[120]]]],0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[348],[[[402,[268]]],[[403,[268]]]],[[[402,[268]]],[[404,[268]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[33,405,405,406],33],[88,88],[245,245],[[]],[[]],0,[268,[[402,[268]]]],[[268,95],[[402,[268]]]],0,0,[[],88],[[],[[402,[[0,[57,268]]]]]],[[[403,[268]]],268],[[[404,[268]]],268],[[[404,[268]]],268],[[[404,[268]]],[[403,[268]]]],[[[404,[268]],348],[[403,[268]]]],[407],[[[403,[268]]]],[[[404,[268]]]],[[408,66],[[5,[67]]]],[[408,66],[[5,[67]]]],[[88,66],[[5,[67]]]],[[245,66],[[5,[67]]]],[[[402,[[0,[65,268]]]],66],[[5,[67]]]],[[[403,[[0,[220,268]]]],66],[[5,[67]]]],[[[403,[[0,[65,268]]]],66],[[5,[67]]]],[[[404,[[0,[220,268]]]],66],[[5,[67]]]],[[[404,[[0,[65,268]]]],66],[[5,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[302],[[],402],[[]],[[]],[[]],[[]],[[[402,[268]]],268],0,0,0,[88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[402,[268]]],268],[[[404,[268]]],[[409,[268]]]],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[[],82],[407,60],[245,60],[[88,[22,[120]]],26],[[88,[22,[399]],[9,[410,8]]],[[28,[[27,[26,8]]]]]],[88,245],[245,26],[88,26],[[[403,[268]],348],[[403,[268]]]],[[[404,[268]],348],[[409,[268]]]],0,0,0,0,[[],88],[268,[[402,[268]]]],[[[15,[411]],33]],[[[15,[411]]]],0,[[[28,[412]],364],366],[[[15,[411]],33]],[[[15,[411]]]],[86],[[[402,[268]]],26],[[[328,[[402,[268]],8]]],26],0,0,0,0,0,0,[88],[[88,[22,[120]]],26],[120,26],[413,26],[[[0,[26,17]]],[[22,[414]]]],[[88,[159,[98]],[0,[348,17]]],26],[[88,[159,[98]],348],26],[[120,26],26],[[]],[[]],[[],98],[[],98],[[],98],[[[404,[268]],348],[[5,[[403,[268]],[404,[268]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[403,[268]],348],[[5,[[403,[268]],[403,[268]]]]]],[[[404,[268]],348],[[5,[[409,[268]],[404,[268]]]]]],[[[402,[268]]],[[5,[[403,[268]],415]]]],[[[328,[[402,[268]],8]]],[[5,[[416,[268,268]],415]]]],[[[402,[268]]],[[5,[[404,[268]],415]]]],[[[328,[[402,[268]],8]]],[[5,[[417,[268]],415]]]],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[268,95],[[402,[268]]]],[[[402,[268]]],26],[[[328,[[402,[268]],8]]],26],0,0,[[]],[[]],[4,4],[[]],[[4,4],42],[53,[[5,[4]]]],[[4,4],60],[[],60],[[],60],[61,[[5,[62,63]]]],[[4,66],[[5,[67]]]],[[4,66],[[5,[67]]]],[[]],[[]],[[4,80]],[[]],[[],82],[[4,4],[[22,[42]]]],[[4,92],5],[[]],[[],98],[[],5],[[],5],[[],102],[[]],0,0,0,0,0,[[],399],0,[[]],[[]],[418],[418],[418],[[]],[418,418],0,[[]],[[],82],[[418,419],418],[77,418],[[418,120],418],[[418,33],418],[[],5],[[],5],[[],102],[[]],0,0,0,0,0,0,[[[15,[131]]],131],[[[15,[246]],[159,[270]],[200,[[0,[266,247]]]],[0,[216,244]]],271],[[]],[[]],[[]],[[]],[146,146],[[]],[[43,[46,[44,45]]],[[5,[146,48]]]],[[146,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[[146,146],60],[[],60],[[],60],[[146,66],[[5,[67]]]],[[235,66],[[5,[67]]]],[[235,66],[[5,[67]]]],[[]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[]],[[146,80]],0,[[]],[[]],[[],82],[[],82],0,[86],0,[[],[[9,[14,8]]]],[[]],[[],98],[[],5],[[],5],[[],5],[[],5],[146,6],[[[15,[255]],[15,[256]]],6],[[],102],[[],102],[[146,30],[[5,[235]]]],[[]],[[]],0,0,0,0,0,0,0,0,[420,421],0,[[]],[[]],[420,420],[[]],[[43,[46,[44,45]]],[[5,[420,48]]]],[[420,50],[[5,[29,51]]]],[50,[[5,[29,51]]]],[[420,422],60],[53,[[5,[420]]]],[[420,420],60],[[],60],[[],60],[61,[[5,[62,63]]]],[[420,66],[[5,[67]]]],[[]],[[[15,[14]],[46,[44,45]]],[[5,[75]]]],[[]],[[420,80]],[[]],[[],82],0,[[420,92],5],[[],[[9,[14,8]]]],[[]],[[],5],[[],5],[[],102],[[]],0,0,0,0,0,[[]],[[]],0,[[423,66],[[5,[67]]]],[[423,66],[[5,[67]]]],[[]],[[]],[[],82],[114,423],[114,423],[[],[[28,[[27,[26,8]]]]]],[[],[[28,[[27,[26,8]]]]]],[[],98],[[],5],[[],5],[[],102],[[]],[[[157,[194]],[157,[[15,[14]]]]],[[5,[51]]]],[[[157,[194]],[157,[[15,[14]]]]],26],[[[157,[194]],[157,[[15,[14]]]]],[[5,[51]]]],[[[157,[194]],[157,[[15,[14]]]]],26],0,0,0,[[]],[[]],[[]],[[]],[424,424],[[]],[[424,424],60],[[],60],[[],60],[[425,66],[[5,[67]]]],[[424,66],[[5,[67]]]],[[424,66],[[5,[67]]]],[[]],[[[426,[[0,[38,31]]]]],[[425,[[0,[38,31]]]]]],[[]],[[]],0,[[]],[[]],[[],82],[[],82],[[],82],[[[426,[[0,[38,31]]]]],[[425,[[0,[38,31]]]]]],[[],[[28,[[27,[26,8]]]]]],[[],[[28,[[27,[26,8]]]]]],[[[28,[[425,[[0,[38,31]]]]]],364],[[366,[22]]]],[86],[[]],[[],98],[[],5],[[],5],[[],5],[[],5],[[28,364],[[366,[[22,[5]]]]]],[[],102],[[],102],[[]],[[]]],"c":[1330,2572],"p":[[3,"Amount"],[3,"TieredMulti"],[3,"Tiered"],[3,"InvalidAmountTierError"],[4,"Result"],[3,"TransactionId"],[3,"ApiEndpoint"],[3,"Global"],[3,"Vec"],[8,"BitOrder"],[3,"BitSlice"],[3,"Hash"],[3,"BTreeMap"],[15,"u8"],[15,"slice"],[8,"Sync"],[8,"Send"],[8,"HasApiContext"],[3,"RpcHandlerCtx"],[3,"RpcModule"],[6,"ModuleInstanceId"],[4,"Option"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"usize"],[8,"Iterator"],[8,"MaybeSend"],[3,"Feerate"],[15,"u64"],[3,"Amount"],[3,"ApiEndpointContext"],[6,"ApiResult"],[3,"u5"],[8,"Clone"],[3,"TieredSummary"],[3,"PeerId"],[3,"OutPoint"],[4,"Ordering"],[8,"Read"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[8,"Decodable"],[3,"DecodeError"],[8,"Encodable"],[8,"Write"],[3,"Error"],[6,"ApiRequestErased"],[8,"Deserializer"],[8,"Deserialize"],[15,"char"],[8,"FromIterator"],[8,"Default"],[4,"Entry"],[8,"PartialEq"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"IntoIterator"],[8,"Debug"],[3,"Formatter"],[3,"Error"],[4,"ParseAmountError"],[4,"CoreError"],[3,"ParseIntError"],[4,"ParseAmountError"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[4,"DecodingError"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"Hash"],[8,"Hasher"],[8,"SliceIndex"],[3,"Request"],[8,"Fn"],[3,"ModuleKind"],[3,"TieredMultiZip"],[3,"Demand"],[3,"FedimintServer"],[3,"TaskGroup"],[6,"Result"],[3,"ServerConfig"],[8,"Serialize"],[8,"Serializer"],[8,"Error"],[4,"SocketAddr"],[15,"u32"],[3,"FedimintApiHandler"],[3,"ConsensusServer"],[3,"String"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[4,"BitSpanError"],[3,"TypeId"],[8,"WriteBase32"],[3,"WsAdminClient"],[3,"PeerServerParams"],[3,"ApiAuth"],[3,"ConfigGenConnectionsRequest"],[3,"ConfigGenParamsConsensus"],[3,"ConfigGenParamsResponse"],[3,"ConfigGenParamsRequest"],[3,"PublicKey"],[3,"SignedEpochOutcome"],[3,"SerdeModuleEncoding"],[3,"Url"],[3,"BTreeSet"],[8,"JsonRpcClient"],[3,"WsFederationApi"],[3,"DynGlobalApi"],[8,"IGlobalFederationApi"],[3,"Duration"],[3,"ApiVersionSet"],[3,"DynModuleApi"],[3,"InviteCode"],[3,"ClientConfigDownloadToken"],[3,"FederationStatus"],[3,"PeerStatus"],[4,"PeerConnectionStatus"],[4,"ServerStatus"],[3,"StatusResponse"],[3,"SupportedApiVersionsSummary"],[3,"XOnlyPublicKey"],[4,"PeerError"],[3,"FederationError"],[4,"OutputOutcomeError"],[3,"PeerResponse"],[4,"Error"],[3,"Error"],[8,"IModuleFederationApi"],[8,"MaybeSync"],[3,"ClientConfig"],[3,"Client"],[4,"Value"],[3,"ApiRequest"],[8,"DeserializeOwned"],[8,"QueryStrategy"],[3,"Transaction"],[3,"SignedBackupRequest"],[3,"ClientBackupKey"],[3,"ClientBackupSnapshot"],[3,"ClientBackupKeyPrefix"],[3,"BitcoinRpcConfig"],[3,"Cancelled"],[3,"ServerModuleConfig"],[3,"ConfigGenParams"],[3,"PeerUrl"],[8,"IDynCommonModuleInit"],[8,"AsRef"],[3,"ModuleInitRegistry"],[8,"Into"],[3,"ClientModuleConfig"],[3,"ServerConfigPrivate"],[3,"ServerConfigConsensus"],[3,"JsonWithKind"],[3,"ServerConfigLocal"],[3,"ClientConfigResponse"],[4,"KeyType"],[3,"FederationId"],[3,"ConfigGenModuleParams"],[3,"EmptyGenParams"],[3,"ServerModuleConsensusConfig"],[4,"DkgPeerMsg"],[4,"SupportedDkgMessage"],[8,"DkgGroup"],[4,"DkgMessage"],[3,"NetworkConfig"],[3,"TlsConfig"],[3,"DelayCalculator"],[8,"Unpin"],[3,"PeerConnections"],[6,"ServerModuleInitRegistry"],[6,"DkgResult"],[3,"NetworkInfo"],[3,"ThresholdKeys"],[6,"Result"],[4,"DkgError"],[3,"PublicKey"],[3,"SecretKey"],[3,"G2Projective"],[3,"G1Projective"],[8,"ModuleInitParams"],[3,"ModuleConsensusVersion"],[8,"ClientConfig"],[8,"TypedServerModuleConfig"],[3,"Path"],[3,"SupportedCoreApiVersions"],[3,"Certificate"],[3,"DynServerModuleInit"],[3,"DynCommonModuleInit"],[4,"All"],[3,"Secp256k1"],[3,"HashMap"],[3,"ConfigGenApi"],[3,"ConfigGenState"],[3,"ConfigGenParamsLocal"],[3,"ConfigGenSettings"],[3,"ConfigGenLocalConnection"],[3,"PathBuf"],[3,"Database"],[3,"Sender"],[3,"MutexGuard"],[8,"Eq"],[3,"DkgRunner"],[3,"Dkg"],[4,"DkgStep"],[3,"DkgKeys"],[8,"RngCore"],[3,"MuxPeerConnections"],[3,"Scalar"],[3,"LessSafeKey"],[8,"Display"],[3,"PrivateKey"],[3,"FundingVerifier"],[3,"TransactionItemAmount"],[3,"FedimintConsensus"],[3,"VerificationCaches"],[3,"ConsensusOutcomeConversion"],[3,"ConsensusProposal"],[4,"ApiEvent"],[6,"ModuleDecoderRegistry"],[3,"EpochOutcome"],[3,"DynVerificationCache"],[3,"DatabaseTransaction"],[4,"ConsensusItem"],[6,"HbbftConsensusOutcome"],[4,"TransactionError"],[4,"EpochTriggerEvent"],[4,"EpochMessage"],[6,"Cancellable"],[6,"SerdeConsensusItem"],[6,"Step"],[6,"HbbftSerdeConsensusOutcome"],[6,"PeerConnector"],[4,"EpochVerifyError"],[8,"CryptoRng"],[3,"TaskHandle"],[3,"KeyPair"],[8,"Verification"],[3,"Scalar"],[4,"Error"],[8,"Any"],[3,"DynUnknown"],[3,"KeyPair"],[3,"DecoderBuilder"],[3,"DynClientConfig"],[3,"DynInput"],[3,"DynOutput"],[3,"DynOutputOutcome"],[3,"DynModuleConsensusItem"],[3,"TweakedKeyPair"],[3,"DisplaySecret"],[8,"IClientConfig"],[8,"IInput"],[8,"IOutput"],[8,"IOutputOutcome"],[8,"IModuleConsensusItem"],[8,"Signing"],[8,"Rng"],[8,"Sized"],[15,"array"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[3,"BackupRequest"],[3,"DynClientModule"],[8,"IClientModule"],[3,"DynServerModule"],[8,"IVerificationCache"],[8,"IServerModule"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"EpochHistoryKey"],[3,"AcceptedTransactionKey"],[3,"AcceptedTransactionKeyPrefix"],[3,"EpochHistoryKeyPrefix"],[3,"LastEpochKey"],[3,"ClientConfigSignatureKey"],[3,"ClientConfigSignatureShareKey"],[3,"ClientConfigSignatureSharePrefix"],[3,"ConsensusUpgradeKey"],[3,"ClientConfigDownloadKeyPrefix"],[3,"ClientConfigDownloadKey"],[6,"MigrationMap"],[4,"DynRawFallback"],[3,"BigSize"],[8,"DynEncodable"],[8,"BitcoinHash"],[3,"CountWrite"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"never"],[4,"DecodeError"],[8,"Writer"],[8,"FixedInt"],[8,"VarInt"],[3,"PublicKeySet"],[3,"ConsensusUpgrade"],[3,"SerdeSignatureShare"],[3,"SerdeSignature"],[3,"UnzipConsensusItem"],[3,"AbbreviateDebug"],[3,"OptStracktrace"],[3,"AbbreviateHexBytes"],[3,"AbbreviateJson"],[8,"AbbreviatedDebug"],[3,"ApiError"],[3,"CoreConsensusVersion"],[3,"ApiVersion"],[3,"MultiApiVersion"],[3,"SupportedModuleApiVersions"],[3,"DatabaseVersion"],[3,"PeerHandle"],[4,"ConsensusProposal"],[3,"InputMeta"],[4,"ModuleError"],[8,"IServerModuleInit"],[3,"Arc"],[8,"FnMut"],[3,"MultiApiVersionIter"],[3,"Error"],[8,"DatabaseKey"],[8,"DatabaseRecord"],[8,"DatabaseKeyWithNotify"],[8,"Copy"],[8,"DatabaseLookup"],[3,"AuditSummary"],[3,"ModuleSummary"],[3,"AuditItem"],[3,"PeerConnectionMultiplexer"],[3,"ModuleMultiplexed"],[3,"ModuleMultiplexerOutOfOrder"],[3,"Receiver"],[3,"ConsensusApi"],[4,"TransactionStatus"],[3,"ExpiringCache"],[6,"SerdeEpochHistory"],[8,"FnOnce"],[3,"SendError"],[3,"PeerCertStore"],[3,"TcpListener"],[3,"TlsAcceptor"],[3,"TlsTcpConnector"],[6,"AnyConnector"],[3,"LatencyInterval"],[3,"FailureRate"],[4,"StreamReliability"],[3,"MockConnector"],[3,"MockNetwork"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"UnreliableDuplexStream"],[3,"UnreliabilityGenerator"],[3,"Context"],[6,"Result"],[4,"Poll"],[3,"DuplexStream"],[15,"f64"],[3,"ReadBuf"],[3,"BidiFramed"],[3,"BincodeCodec"],[3,"BytesMut"],[6,"AnyFramedTransport"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"TcpStream"],[6,"TcpBidiFramed"],[3,"ReconnectPeerConnections"],[3,"PeerMessage"],[3,"PeerStatusChannels"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[6,"SharedAnyConnector"],[3,"PeerStatusQuery"],[3,"PeerConnection"],[3,"DisconnectedPeerConnectionState"],[3,"ConnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"UniqueMessage"],[3,"MessageQueue"],[3,"MessageId"],[8,"Ord"],[8,"PartialOrd"],[4,"QueryStep"],[3,"ThresholdConsensus"],[3,"VerifiableResponse"],[3,"UnionResponses"],[3,"UnionResponsesSingle"],[3,"SystemTime"],[3,"AllOrDeadline"],[3,"DiscoverApiVersionSet"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"NodeId"],[3,"ChannelUsage"],[3,"TaskPanicGuard"],[3,"Elapsed"],[3,"RwLockMappedWriteGuard"],[3,"JoinError"],[3,"RouteHop"],[3,"TaskShutdownToken"],[3,"Instant"],[3,"JoinHandle"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"TimeReporter"],[3,"Level"],[3,"TxOutProof"],[3,"BlockHash"],[3,"Txid"],[3,"SanitizedUrl"],[4,"BroadcastStreamRecvError"],[3,"BroadcastStream"],[3,"Receiver"],[8,"ServerModule"],[8,"NumPeers"],[8,"IFederationApi"],[8,"GlobalFederationApi"],[8,"FederationApiExt"],[13,"InvalidVout"],[13,"InvalidPeerId"],[8,"SGroup"],[8,"TypedServerModuleConsensusConfig"],[8,"ISupportedDkgMessage"],[8,"PeerHandleOps"],[8,"IntoDynInstance"],[4,"FinalizationError"],[8,"ClientModule"],[13,"Raw"],[8,"IterUnzipConsensusItem"],[8,"CommonModuleInit"],[8,"ModuleCommon"],[8,"ExtendsCommonModuleInit"],[8,"ServerModuleInit"],[8,"TypedApiEndpoint"],[8,"IntoModuleError"],[8,"Connector"],[13,"RandomlyUnreliable"],[8,"FramedTransport"],[8,"PeerSlice"],[13,"Accepted"],[13,"Failure"],[13,"UnbalancedTransaction"],[13,"InvalidSignature"],[8,"NextOrPending"]]},\
"fedimint_testing":{"doc":"","t":"AAAAAAIKKKKKAKAKDDMMMLLLLLLLLMLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFMLLMLMLLLLLLLLLLLLLSSDDDDMMLLLLLLLLMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLRRRRFFFFFDMLLMMLLLLLLFLLLMMLLLLLHDRLMLMLLLMLLMLLLLLLLLLMMMMLFLLLLLNDENMMLLLLLLLLLMLLLLLLLLMLMMLLLLLLLLLLLIKKKAALDRMLLLLLLLLLMMLLLLLLLLLMLLLLLLLDRNNDEDNNNNNNNNMLLLLLLLLLLLLLLFLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLMMMLLLMMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMM","n":["btc","db","federation","fixtures","gateway","ln","BitcoinTest","get_mempool_tx_fee","get_new_address","lock_exclusive","mine_block_and_get_received","mine_blocks","mock","prepare_funding_wallet","real","send_and_mine_block","FakeBitcoinFactory","FakeBitcoinTest","addresses","bitcoin","blocks","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","create_connection","default","fmt","fmt","from","from","from_ref","from_ref","get_block_count","get_block_hash","get_fee_rate","get_mempool_tx_fee","get_network","get_new_address","get_tx_block_height","get_txout_proof","inputs","into","into","into_request","into_request","into_request","into_request","lock_exclusive","mine_block","mine_block_and_get_received","mine_blocks","new","new_transaction","output_sum","pending","pending_merkle_tree","prepare_funding_wallet","proofs","register_new","scripts","send_and_mine_block","submit_transaction","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_script_history","ERROR","ERROR","REAL_BITCOIN_LOCK","RealBitcoinTest","RealBitcoinTestLocked","RealBitcoinTestNoLock","__private_field","_guard","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","deref","from","from","from","from","from_ref","get_mempool_tx_fee","get_mempool_tx_fee","get_mempool_tx_fee","get_new_address","get_new_address","get_new_address","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lock_exclusive","lock_exclusive","lock_exclusive","mine_block_and_get_received","mine_block_and_get_received","mine_block_and_get_received","mine_blocks","mine_blocks","mine_blocks","new","prepare_funding_wallet","prepare_funding_wallet","prepare_funding_wallet","rpc","send_and_mine_block","send_and_mine_block","send_and_mine_block","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BYTE_20","BYTE_32","BYTE_8","STRING_64","copy_directory","get_project_root","open_temp_db_and_copy","prepare_db_migration_snapshot","validate_migrations","FederationTest","_task","borrow","borrow_mut","client_init","configs","from","id","into","into_request","into_request","invite_code","local_config_gen_params","new","new_client","new_client_with_config","primary_client","server_init","try_from","try_into","two_clients","type_id","vzip","BASE_PORT","Fixtures","TIMEOUT","bitcoin","bitcoin","bitcoin_client","bitcoin_rpc","bitcoin_server","borrow","borrow_mut","clients","cln","from","id","into","into_request","into_request","is_real_test","lnd","new_fed","new_fed_with_peers","new_gateway","new_primary","num_peers","params","primary_client","servers","spawn_ldk","test_dir","try_from","try_into","type_id","vzip","with_module","Cln","GatewayTest","LightningNodeName","Lnd","_config_dir","api","borrow","borrow","borrow_mut","borrow_mut","connect_fed","fmt","fmt","from","from","gateway","get_gateway_id","get_rpc","into","into","into_request","into_request","into_request","into_request","listening_addr","new","node_pub_key","password","remove_client","select_client","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","LightningTest","invoice","is_shared","listening_address","mock","real","unpayable_invoice","FakeLightningTest","INVALID_INVOICE_DESCRIPTION","amount_sent","borrow","borrow_mut","clone","clone_into","complete_htlc","default","fmt","from","from_ref","gateway_node_pub_key","gateway_node_sec_key","info","into","into_request","into_request","invoice","is_shared","listening_address","new","pay","preimage","route_htlcs","routehints","to_owned","try_from","try_into","type_id","vzip","ClnLightningTest","DEFAULT_ESPLORA_SERVER","InvoiceRequest","InvoiceResponse","LdkLightningTest","LdkMessage","LndLightningTest","MineBlocksResponse","OpenChannelRequest","OpenChannelResponse","PayInvoiceFailureResponse","PayInvoiceRequest","PayInvoiceSuccessResponse","StopRequest","StopResponse","alias","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_balance","channel_balance","complete_htlc","complete_htlc","complete_htlc","drop","find_unused_port","fmt","fmt","fmt","fmt","from","from","from","from","info","info","info","initial_balance","initial_balance","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","invoice","invoice","is_shared","is_shared","is_shared","ldk_node_sender","listening_address","listening_address","listening_address","listening_address","lnrpc","lnrpc","new","new","new","node_pub_key","node_pub_key","node_pub_key","open_channel","pay","pay","pay","pubkey","pubkey","route_htlcs","route_htlcs","route_htlcs","routehints","routehints","routehints","rpc_cln","rpc_lnd","spawn_ldk_event_loop","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","amount","amount_msat","connect_address","description","expiry_secs","invoice","invoice","node_id","preimage","response_sender","response_sender","response_sender","response_sender"],"q":[[0,"fedimint_testing"],[6,"fedimint_testing::btc"],[16,"fedimint_testing::btc::mock"],[79,"fedimint_testing::btc::real"],[158,"fedimint_testing::db"],[167,"fedimint_testing::federation"],[190,"fedimint_testing::fixtures"],[224,"fedimint_testing::gateway"],[263,"fedimint_testing::ln"],[270,"fedimint_testing::ln::mock"],[301,"fedimint_testing::ln::real"],[407,"fedimint_testing::ln::real::LdkMessage"]],"d":["","","","","","","","Waits till tx is found in mempool and returns the fees","Returns a new address.","Make the underlying instance act as if it was exclusively …","Mine a block to include any pending transactions then get …","Mines a given number of blocks","","Prepare funding wallet","","Send some bitcoin to an address then mine a block to …","","","Tracks how much bitcoin was sent to an address (doesn’t …","","Simulates mined bitcoin blocks","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Simulates pending transactions in the mempool","","","Simulates the merkle tree proofs","Registers a fake bitcoin rpc factory for testing","Simulates the script history","","","","","","","","","","","","","","","","Global lock we use to isolate tests that need exclusive …","Fixture implementing bitcoin node under test by talking to …","Fixture implementing bitcoin node under test by talking to …","Fixture implementing bitcoin node under test by talking to …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","RPC used to connect to bitcoind, used for waiting for the …","","","","","","","","","","","","","","","","","","","","","","","","","Helper function that recursively copies all of the …","Get the project root (relative to closest Cargo.lock file)","Open a temporary database located at <code>temp_path</code> and copy …","Creates the database backup directory by appending the …","Iterates over all of the databases supplied in the …","Test fixture for a running fedimint federation","","","","","","Returns the argument unchanged.","Return first id for gateways","Calls <code>U::from(self)</code>.","","","Return first invite code for gateways","Creates the config gen params for each peer","","Create a client connected to this fed","","","","","","Create two clients, useful for send/receive tests","","","","A tool for easily writing fedimint integration tests","A default timeout for things happening in tests","Get a test bitcoin fixture","","Get a client bitcoin RPC config","","Get a server bitcoin RPC config","","","","Returns the CLN lightning node","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Returns the LND lightning node","Starts a new federation with default number of peers for …","Starts a new federation with number of peers","Starts a new gateway with a given lightning node","","","","","","Spawns and returns a newly created LDK Node","If <code>FM_TEST_DIR</code> is set, use it as a base, otherwise use a …","","","","","Add a module to the fed","","Fixture for creating a gateway","","","Temporary dir that stores the gateway config","URL for the RPC","","","","","Connects to a new federation and stores the info","","","Returns the argument unchanged.","Returns the argument unchanged.","Handle of the running gateway","","RPC client for communicating with the gateway admin API","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Password for the RPC","Removes a client from the gateway","","","","","","","","","","","","Creates invoice from the lightning implementation","Is this a LN instance shared with other tests","","","","Creates an invoice that is not payable","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,55,55,55,55,55,0,55,0,55,0,0,9,8,9,8,9,8,9,8,9,8,9,8,8,9,8,9,8,9,8,9,9,9,9,9,9,9,9,9,0,8,9,8,8,9,9,9,9,9,9,9,9,0,9,9,9,9,8,9,9,9,8,9,8,9,8,9,8,9,8,9,9,32,29,0,0,0,0,30,33,32,33,30,29,32,33,30,29,29,29,29,30,32,33,30,29,29,32,33,29,32,33,29,32,33,32,33,30,29,32,32,33,33,30,30,29,29,32,33,29,32,33,29,32,33,29,32,32,33,29,29,32,33,29,29,32,33,30,29,32,33,30,29,32,33,30,29,32,33,30,29,0,0,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,69,0,0,69,61,61,61,69,61,69,61,69,69,61,69,61,61,61,61,69,61,61,69,69,61,61,61,61,61,61,69,61,69,61,69,61,69,61,69,0,58,58,58,0,0,58,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,85,85,0,0,0,85,85,85,85,85,85,85,85,67,83,84,67,85,83,84,67,85,83,84,83,84,67,67,0,83,84,67,85,83,84,67,85,83,84,67,83,84,83,84,67,85,83,83,84,84,67,67,85,85,83,84,67,83,84,67,67,83,84,67,67,83,84,83,84,67,83,84,67,67,83,84,67,83,84,83,84,67,83,84,67,83,84,67,83,84,67,85,83,84,67,85,83,84,67,85,83,84,67,85,90,91,90,91,91,92,93,90,94,91,90,95,93],"f":[0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],0,[[],[[4,[[3,[2]]]]]],0,[[5,7],[[4,[[3,[2]]]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[9,9],[[]],[[]],0,[[8,10,11],[[13,[12]]]],[[],9],[[8,14],15],[[9,14],15],[[]],[[]],[[]],[[]],[9,[[4,[[3,[2]]]]]],[[9,6],[[4,[[3,[2]]]]]],[[9,16],[[4,[[3,[2]]]]]],[[9,1],[[4,[[3,[2]]]]]],[9,[[4,[[3,[2]]]]]],[9,[[4,[[3,[2]]]]]],[[9,1],[[4,[[3,[2]]]]]],[[9,1],[[4,[[3,[2]]]]]],[17,[[19,[18]]]],[[]],[[]],[[],20],[[],21],[[],20],[[],21],[9,[[4,[[3,[2]]]]]],[[[19,[22]],[19,[17]]]],[[9,5],[[4,[[3,[2]]]]]],[[9,6],[[4,[[3,[2]]]]]],[[],9],[[[19,[23]]],17],[17,6],0,[[[24,[17]]],25],[9,[[4,[[3,[2]]]]]],0,[[],8],0,[[9,5,7],[[4,[[3,[2]]]]]],[[9,17],[[4,[[3,[2]]]]]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],[[9,28],[[4,[[3,[2]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[29,29],[[]],[30,31],[[]],[[]],[[]],[[]],[[]],[[32,1],[[4,[[3,[2]]]]]],[[33,1],[[4,[[3,[2]]]]]],[[29,1],[[4,[[3,[2]]]]]],[32,[[4,[[3,[2]]]]]],[33,[[4,[[3,[2]]]]]],[29,[[4,[[3,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[[],20],[[],21],[[],21],[[],20],[[],20],[[],21],[[],20],[[],21],[32,[[4,[[3,[2]]]]]],[33,[[4,[[3,[2]]]]]],[29,[[4,[[3,[2]]]]]],[[32,5],[[4,[[3,[2]]]]]],[[33,5],[[4,[[3,[2]]]]]],[[29,5],[[4,[[3,[2]]]]]],[[32,6],[[4,[[3,[2]]]]]],[[33,6],[[4,[[3,[2]]]]]],[[29,6],[[4,[[3,[2]]]]]],[[10,12],32],[32,[[4,[[3,[2]]]]]],[33,[[4,[[3,[2]]]]]],[29,[[4,[[3,[2]]]]]],0,[[32,5,7],[[4,[[3,[2]]]]]],[[33,5,7],[[4,[[3,[2]]]]]],[[29,5,7],[[4,[[3,[2]]]]]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],0,0,0,0,[[34,34],35],[[],[[35,[36]]]],[[37,34,38],[[13,[39]]]],[[40,41,38],13],[[40,41,38],13],0,0,[[]],[[]],0,0,[[]],[42,43],[[]],[[],21],[[],20],[42,44],[[[24,[45]],16,46],[[13,[[48,[45,47]]]]]],[[16,16,46,49,50,51],42],[42,52],[[42,53],52],0,0,[[],26],[[],26],[42],[[],27],[[]],0,0,0,[54,[[56,[55]]]],0,[54,57],0,[54,57],[[]],[[]],0,[54,[[3,[58]]]],[[]],0,[[]],[[],20],[[],21],[[],59],[54,[[3,[58]]]],[54,42],[[54,16],42],[[54,[3,[58]],60],61],[[[0,[62,63,64]],[0,[65,63,64]],66],54],0,0,0,0,[[[56,[55]]],67],[40],[[],26],[[],26],[[],27],[[]],[[54,[0,[62,63,64]],[0,[65,63,64]],66],54],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[61,42],68],[[69,14],15],[[69,14],[[26,[70]]]],[[]],[[]],0,[61,71],[61,72],[[]],[[]],[[],21],[[],20],[[],21],[[],20],0,[[16,37,[3,[58]],38,50,60],61],0,0,[[61,42],52],[[61,43],52],[[],37],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],0,[[73,[74,[6]]],[[4,[[3,[2]]]]]],[[],59],[[],37],0,0,[[73,[74,[6]]],[[76,[75]]]],0,0,0,[[]],[[]],[77,77],[[]],[[77,78],[[4,[[3,[2]]]]]],[[],77],[[77,14],15],[[]],[[]],0,0,[77,[[4,[[3,[2]]]]]],[[]],[[],21],[[],20],[[77,73,[74,[6]]],[[4,[[3,[2]]]]]],[77,59],[77,37],[[],77],[[77,79],[[4,[[3,[2]]]]]],0,[[[3,[77]],80],[[4,[[3,[2]]]]]],[[77,60],[[4,[[3,[2]]]]]],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[[31,[81]]]]],73],[[[56,[[31,[82]]]]],73],[[83,78],[[4,[[3,[2]]]]]],[[84,78],[[4,[[3,[2]]]]]],[[67,78],[[4,[[3,[2]]]]]],[67],[[],[[74,[16]]]],[[83,14],15],[[84,14],15],[[67,14],15],[[85,14],15],[[]],[[]],[[]],[[]],[83,[[4,[[3,[2]]]]]],[84,[[4,[[3,[2]]]]]],[67,[[4,[[3,[2]]]]]],0,0,[[]],[[]],[[]],[[]],[[],21],[[],20],[[],20],[[],21],[[],21],[[],20],[[],21],[[],20],[[83,73,[74,[6]]],[[4,[[3,[2]]]]]],[[84,73,[74,[6]]],[[4,[[3,[2]]]]]],[[67,73,[74,[6]]],[[4,[[3,[2]]]]]],[83,59],[84,59],[67,59],0,[83,37],[84,37],[67,37],0,0,0,[40,83],[[],84],[[36,[56,[55]]],[[26,[67,86]]]],0,0,0,[[67,73,71,37,[3,[55]]],13],[[83,79],[[4,[[3,[2]]]]]],[[84,79],[[4,[[3,[2]]]]]],[[67,79],[[4,[[3,[2]]]]]],[[[56,[[31,[81]]]]],71],[[[56,[[31,[82]]]]],71],[[[3,[83]],80],[[4,[[3,[2]]]]]],[[[3,[84]],80],[[4,[[3,[2]]]]]],[[[3,[67]],80],[[4,[[3,[2]]]]]],[[83,60],[[4,[[3,[2]]]]]],[[84,60],[[4,[[3,[2]]]]]],[[67,60],[[4,[[3,[2]]]]]],0,0,[[[88,[87]],[89,[85]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Txid"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Address"],[15,"u64"],[3,"Amount"],[3,"FakeBitcoinFactory"],[3,"FakeBitcoinTest"],[3,"Url"],[3,"TaskHandle"],[3,"DynBitcoindRpc"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"u16"],[3,"Transaction"],[3,"OutPoint"],[3,"Vec"],[3,"Request"],[3,"Request"],[3,"Block"],[3,"TxOut"],[15,"slice"],[3,"PartialMerkleTree"],[4,"Result"],[3,"TypeId"],[3,"Script"],[3,"RealBitcoinTestNoLock"],[3,"REAL_BITCOIN_LOCK"],[3,"Mutex"],[3,"RealBitcoinTest"],[3,"RealBitcoinTestLocked"],[3,"Path"],[6,"Result"],[3,"PathBuf"],[3,"String"],[6,"ModuleDecoderRegistry"],[3,"Database"],[15,"str"],[8,"Fn"],[3,"FederationTest"],[3,"FederationId"],[3,"InviteCode"],[3,"PeerId"],[6,"ServerModuleConfigGenParamsRegistry"],[3,"ConfigGenParams"],[3,"HashMap"],[6,"ServerModuleInitRegistry"],[6,"ClientModuleInitRegistry"],[6,"ModuleInstanceId"],[3,"Client"],[3,"ClientConfig"],[3,"Fixtures"],[8,"BitcoinTest"],[3,"Arc"],[3,"BitcoinRpcConfig"],[8,"LightningTest"],[15,"bool"],[15,"usize"],[3,"GatewayTest"],[8,"IClientModuleInit"],[8,"MaybeSend"],[8,"MaybeSync"],[8,"IServerModuleInit"],[8,"ModuleInitParams"],[3,"LdkLightningTest"],[3,"FederationInfo"],[4,"LightningNodeName"],[3,"Error"],[3,"PublicKey"],[3,"GatewayRpcClient"],[3,"Amount"],[4,"Option"],[3,"Invoice"],[6,"Result"],[3,"FakeLightningTest"],[3,"InterceptHtlcResponse"],[3,"PayInvoiceRequest"],[3,"TaskGroup"],[3,"ClnRpc"],[3,"LndClient"],[3,"ClnLightningTest"],[3,"LndLightningTest"],[4,"LdkMessage"],[4,"LightningRpcError"],[3,"SqliteStore"],[3,"Node"],[3,"Receiver"],[13,"OpenChannelRequest"],[13,"InvoiceRequest"],[13,"InvoiceResponse"],[13,"PayInvoiceRequest"],[13,"PayInvoiceSuccessResponse"],[13,"StopRequest"]]},\
"fedimint_wallet_client":{"doc":"","t":"NNRNNNNNENNNNNNIRNNNGNGNDNNDNDNDEDNNNNNDNNNNNDDRNNDIDDEDEEDDEEDNNENNLLMMALLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLALLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLMLLFFMLLLLMMMFLLMMMKMLMMMMMMLLLLLLLLLLLLLLMMLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMMMALLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMMLAKMMMMMMMMIKKDDDDDDDDDLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDDERNDNDLFFFLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLMFFFLLLLLLLLLLLLLLMMLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIIKKNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLMLMLLLLLLLNDNDNDDELFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLL","n":["BelowMinRelayFee","BlockCount","CONFIRMATION_TARGET","Claimed","Confirmed","Created","Deposit","Deposit","DepositState","DuplicateSignature","ErrorFinalizingPsbt","Failed","Failed","Feerate","InvalidSignature","IterUnzipWalletConsensusItem","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOut","PegOutFeeBelowConsensus","PegOutFees","PegOutSignature","PegOutSignatureItem","PegOutUnderDustLimit","PendingTransaction","ProcessPegOutSigError","Rbf","Rbf","RbfTransactionIdNotFound","RbfWithdraw","RpcError","SighashError","SpendableUTXO","Succeeded","TxWeightIncorrect","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","WALLET_TWEAK_CHILD_ID","WaitingForConfirmation","WaitingForTransaction","WalletClientContext","WalletClientExt","WalletClientGen","WalletClientModule","WalletClientStates","WalletCommonGen","WalletConsensusItem","WalletError","WalletInput","WalletModuleTypes","WalletOperationMeta","WalletOutput","WalletOutputOutcome","Withdraw","Withdraw","WithdrawState","WrongNetwork","WrongSignatureCount","amount","amount","amount","amount","api","as_any","as_any","as_any","as_any","as_any","as_any","as_common","await_primary_module_output","backup","block_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","change","change","check_address","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_rbf_withdraw_output","create_sufficient_input","create_withdraw_output","db","decoder","decoder","decoder","decoder","default","deposit","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination","destination","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_rate","feerate","fees","fees","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_balance","get_deposit_address","get_deposit_address","get_network","get_next_peg_in_tweak_child_id","get_withdraw_fee","get_withdraw_fees","handle_cli_command","hash","hash","hash","hash","hash","hash","hash","hash","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","module_api","module_kind","module_kind","module_root_secret","new","new","next_deposit_state","next_withdraw_state","notifier","operation_id","operation_id","output_amount","output_amount","peg_out_amount","peg_out_amount","peg_out_signature","proprietary_tweak_key","provide","provide","psbt","rbf","rbf","rbf_withdraw","recipient","restore","rpc","rpc","secp","secp","selected_utxos","selected_utxos","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","subscribe_balance_changes","subscribe_deposit_updates","subscribe_withdraw_updates","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_dyn_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_decoder","wallet_descriptor","wipe","withdraw","withdraw","address","address","amount","change","change","expires_at","fee","rbf","WalletFederationApi","fetch_consensus_block_count","fetch_peg_out_fees","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","WalletGenParams","WalletGenParamsConsensus","WalletGenParamsLocal","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_default_bitcoin_rpc","client_default_bitcoin_rpc","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_bitcoin_rpc","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","finality_delay","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","network","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DbKeyPrefix","NextPegInTweakIndex","NextPegInTweakIndexKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","erased_serialize","fmt","from","from","from_bytes","from_bytes","from_ref","into","into","into_request","into_request","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Claiming","ClaimingDepositState","Created","CreatedDepositState","DepositStateMachine","DepositStates","TRANSACTION_STATUS_FETCH_INTERVAL","TimedOut","TimedOutDepositState","WaitingForConfirmations","WaitingForConfirmationsDepositState","as_any","await_btc_transaction_confirmed","await_created_btc_transaction_submitted","await_deposit_address_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_transaction","change","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","out_idx","state","timeout_at","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_id","transition_btc_tx_confirmed","transition_deposit_timeout","transition_tx_seen","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tweak_key","tweak_key","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_bytes","from_ref","from_str","hash","into","into_request","is_uncompressed","key","new","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_ref","hash","identity","into","into","into_request","into_request","new","outpoint","output_idx","proof_block","provide","serialize","to_bytes","to_owned","to_string","transaction","try_from","try_from","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","validate","validate_args","verify","vzip","vzip","Aborted","AbortedWithdrawState","Created","CreatedWithdrawState","Success","SuccessWithdrawState","WithdrawStateMachine","WithdrawStates","as_any","await_withdraw_processed","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","error","fm_outpoint","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transition_withdraw_processed","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_wallet_client"],[661,"fedimint_wallet_client::WalletOperationMeta"],[669,"fedimint_wallet_client::api"],[672,"fedimint_wallet_client::config"],[904,"fedimint_wallet_client::db"],[939,"fedimint_wallet_client::deposit"],[1104,"fedimint_wallet_client::keys"],[1145,"fedimint_wallet_client::tweakable"],[1149,"fedimint_wallet_client::txoproof"],[1207,"fedimint_wallet_client::withdraw"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","Allows a user to bump the fees of a <code>PendingTransaction</code>","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …ees expressed as an increase over existing peg-out fees","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the child index to derive the next peg-in tweak …","Fetches the fees that would need to be paid to make the …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to increase the fee of a onchain withdraw …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bitcoin tx id to bump the fees for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to withdraw a given <code>amount</code> of Bitcoin to a …","","","","","","","","","","","","","","","","","","","","","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","See <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.","Points to a Bitcoin API that the client can use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Points to a Bitcoin API that the client can use to …","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The state machine driving forward a deposit (aka peg-in).","","","","","","","","","","","","","","","","","","","","","","","The bitcoin transaction is saved as soon as we see it so …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Index of the deposit output","","","","","","","","","","","","","","","Fedimint transaction id in which the deposit is being …","","","","","","","","","","","","","","","","","","","Key pair of which the public was used to tweak the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An object that can be used as a Ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifiable …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","graph LR Created –&gt; Success Created –&gt; Aborted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[58,28,0,20,20,21,23,26,0,66,66,20,21,28,66,0,0,66,66,58,0,58,0,58,0,3,58,0,28,0,58,0,0,0,3,58,23,58,66,0,21,58,58,58,66,0,0,0,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,23,26,0,58,66,1,3,30,33,0,50,26,28,34,36,3,22,50,50,106,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,50,31,32,0,20,21,22,23,24,26,26,28,28,29,30,31,32,1,33,34,34,36,36,3,3,39,20,21,22,23,24,26,28,29,30,31,32,1,33,34,36,3,39,0,26,28,29,30,31,32,1,33,34,36,3,39,26,28,29,30,31,32,1,33,34,36,3,39,26,28,29,30,31,32,1,33,34,36,3,39,50,50,50,50,50,50,0,22,22,50,65,22,0,36,36,20,21,23,28,29,30,1,33,34,36,3,39,31,32,28,34,36,3,20,21,26,28,29,30,32,1,33,34,36,3,39,58,20,20,21,21,26,26,28,28,29,29,30,30,32,32,1,1,33,33,34,34,36,36,3,3,39,39,58,58,26,28,34,36,3,20,21,23,28,29,30,31,32,1,33,34,36,3,39,1,106,31,32,33,39,20,21,22,23,50,24,26,28,28,29,30,31,32,1,33,34,34,65,36,36,3,3,39,58,58,66,66,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,58,58,66,26,28,29,30,31,32,1,33,34,36,3,39,20,21,22,23,24,26,28,29,30,31,32,1,33,34,36,3,39,50,157,50,50,0,157,50,50,28,29,1,33,34,36,3,39,22,22,50,50,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,26,28,34,36,3,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,0,50,22,22,50,22,1,0,0,50,26,26,50,50,31,32,106,0,58,66,32,31,32,157,33,50,50,24,50,24,31,32,20,21,23,28,29,30,31,32,1,33,34,36,3,39,29,32,58,50,157,157,22,22,50,50,26,28,29,30,31,32,1,33,34,36,3,39,22,20,21,22,23,24,26,28,29,30,31,32,1,33,34,36,3,39,28,34,36,3,58,66,1,26,26,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,30,31,0,31,29,39,0,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,158,156,20,21,22,23,50,24,26,28,106,29,30,31,32,1,33,34,65,36,3,39,58,66,24,24,50,0,157,159,160,160,160,161,159,160,161,0,162,162,0,0,0,0,0,0,0,0,0,83,108,111,107,108,109,110,111,112,113,83,115,107,108,109,110,111,112,113,83,115,109,113,107,108,109,110,111,112,113,83,83,115,107,108,109,110,111,112,113,83,115,107,110,111,113,83,115,111,113,83,115,111,113,83,115,115,83,113,107,108,109,110,111,112,113,83,115,83,83,115,83,83,115,115,83,107,108,109,110,111,112,113,83,115,113,83,109,113,83,107,108,109,110,111,112,113,83,83,115,107,108,109,110,111,112,113,83,115,111,113,83,115,107,110,107,108,109,110,111,112,113,83,115,83,115,107,108,109,110,111,112,113,83,115,83,107,108,109,110,111,112,113,83,115,113,107,110,109,113,83,110,83,113,115,113,83,112,115,110,107,107,108,109,110,111,112,113,83,115,111,113,83,115,107,108,109,110,111,112,113,83,115,107,110,83,107,108,109,110,111,112,113,83,115,107,108,109,110,111,112,113,83,115,107,108,109,110,111,112,113,83,115,113,107,108,109,110,111,112,113,83,115,0,163,0,163,123,163,123,123,123,123,123,123,123,123,163,123,123,123,123,163,123,163,123,123,123,123,123,163,123,163,123,163,123,163,123,93,0,93,0,0,0,0,93,0,93,0,127,0,0,0,127,93,128,124,129,130,127,93,128,124,129,130,124,129,127,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,127,93,93,128,128,124,124,129,129,130,130,127,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,93,128,124,129,130,127,127,127,124,127,128,127,93,128,124,129,130,127,93,128,124,129,130,129,0,0,0,127,127,127,93,128,124,129,130,127,93,128,124,129,130,128,124,127,93,128,124,129,130,127,93,128,124,129,130,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,141,164,68,0,0,68,68,68,145,68,145,68,145,145,145,145,145,145,145,145,145,145,145,68,68,145,68,145,145,145,145,145,68,145,68,145,145,145,145,68,145,145,145,68,145,145,68,145,68,145,145,145,145,145,68,145,145,145,145,68,95,0,95,0,95,0,0,0,153,0,153,95,151,154,155,153,95,151,154,155,153,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,153,95,95,151,151,154,154,155,155,153,155,151,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,95,151,154,155,153,153,153,153,153,95,151,154,155,153,95,151,154,155,0,153,153,153,95,151,154,155,153,95,151,154,155,154,153,95,151,154,155,153,95,151,154,155],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[6,7],[[11,[[10,[8,9]]]]]],[[[13,[12]],[15,[14]],16,12],[[11,[[10,[8,9]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[17,18],19],[20,20],[21,21],[22,22],[23,23],[24,24],[12,25],[26,26],[12,27],[28,28],[29,29],[30,30],[31,31],[32,32],[1,1],[33,33],[34,34],[12,35],[36,36],[12,37],[3,3],[12,38],[39,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[40,41],[[43,[26,42]]]],[[40,[46,[44,45]]],[[43,[28,42]]]],[[40,[46,[44,45]]],[[43,[29,42]]]],[[40,[46,[44,45]]],[[43,[30,42]]]],[[40,[46,[44,45]]],[[43,[31,42]]]],[[40,[46,[44,45]]],[[43,[32,42]]]],[[40,[46,[44,45]]],[[43,[1,42]]]],[[40,[46,[44,45]]],[[43,[33,42]]]],[[40,[46,[44,45]]],[[43,[34,42]]]],[[40,[46,[44,45]]],[[43,[36,42]]]],[[40,[46,[44,45]]],[[43,[3,42]]]],[[40,[46,[44,45]]],[[43,[39,42]]]],[[26,47],[[43,[48,49]]]],[[28,47],[[43,[48,49]]]],[[29,47],[[43,[48,49]]]],[[30,47],[[43,[48,49]]]],[[31,47],[[43,[48,49]]]],[[32,47],[[43,[48,49]]]],[[1,47],[[43,[48,49]]]],[[33,47],[[43,[48,49]]]],[[34,47],[[43,[48,49]]]],[[36,47],[[43,[48,49]]]],[[3,47],[[43,[48,49]]]],[[39,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[50],[12,51],[[12,52,6,53],[[11,[[10,[8,9]]]]]],[[50,6,39],[[19,[[54,[3,26]]]]]],[[12,52,6,53],[[11,[[10,[8,9]]]]]],[[50,6,17,2,1],[[19,[[54,[3,26]]]]]],0,[[],44],[[],44],[[],44],[[],44],[[],22],0,[36],[36],[55,[[43,[20]]]],[55,[[43,[21]]]],[55,[[43,[23]]]],[55,[[43,[28]]]],[55,[[43,[29]]]],[55,[[43,[30]]]],[55,[[43,[1]]]],[55,[[43,[33]]]],[55,[[43,[34]]]],[55,[[43,[36]]]],[55,[[43,[3]]]],[55,[[43,[39]]]],0,0,[[],56],[[],56],[[],56],[[],56],[[20,20],57],[[21,21],57],[[26,26],57],[[28,28],57],[[29,29],57],[[30,30],57],[[32,32],57],[[1,1],57],[[33,33],57],[[34,34],57],[[36,36],57],[[3,3],57],[[39,39],57],[[58,58],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],[27,57],[35,57],[37,57],[38,57],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],0,0,0,0,0,0,[[20,62],63],[[21,62],63],[[22,62],63],[[23,62],63],[[50,62],63],[[24,62],63],[[26,62],63],[[28,62],[[43,[64]]]],[[28,62],[[43,[64]]]],[[29,62],[[43,[64]]]],[[30,62],[[43,[64]]]],[[31,62],[[43,[64]]]],[[32,62],[[43,[64]]]],[[1,62],[[43,[64]]]],[[33,62],[[43,[64]]]],[[34,62],[[43,[64]]]],[[34,62],[[43,[64]]]],[[65,62],[[43,[64]]]],[[36,62],[[43,[64]]]],[[36,62],[[43,[64]]]],[[3,62],[[43,[64]]]],[[3,62],[[43,[64]]]],[[39,62],[[43,[64]]]],[[58,62],[[43,[64]]]],[[58,62],[[43,[64]]]],[[66,62],[[43,[64]]]],[[66,62],[[43,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,58],[68,58],[[]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,52],[[11,[[10,[8,9]]]]]],[72,[[11,[[10,[8]]]]]],[[50,72,13]],[50,18],[13,73],[[17,2],[[11,[[10,[8]]]]]],[[50,17,2],[[19,[1]]]],[[74,[70,[75]]],[[11,[[10,[8,9]]]]]],[[28,76]],[[29,76]],[[1,76]],[[33,76]],[[34,76]],[[36,76]],[[3,76]],[[39,76]],[[77,78,79,12,80,81,[82,[14]],16],[[11,[[10,[8,9]]]]]],[[22,77,83,79,80,81,[84,[14]],16,85],[[11,[[10,[8]]]]]],[37,86],[50,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,87]],[[28,12]],[[34,12]],[[36,12]],[[3,12]],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],0,0,[[],89],[[],89],0,[90,22],[[56,56],1],[[[0,[91,92]]],[[94,[93]]]],[[[0,[91,92]]],[[94,[95]]]],0,[[],6],[26,6],[50,86],[38,86],0,0,0,[[],[[96,[69]]]],[97],[97],0,0,0,[39,[[11,[[10,[8]]]]]],0,[[52,12,[15,[14]],16,[94,[[70,[69]]]]],[[11,[[10,[8,9]]]]]],0,0,0,0,0,0,[[20,98],43],[[21,98],43],[[23,98],43],[[28,98],43],[[29,98],43],[[30,98],43],[[31,98],43],[[32,98],43],[[1,98],43],[[33,98],43],[[34,98],43],[[36,98],43],[[3,98],43],[[39,98],43],0,0,[58,[[94,[99]]]],[[],[[11,[[10,[8,9]]]]]],[6,[[11,[[10,[8]]]]]],[6,[[11,[[10,[8]]]]]],[22,100],[[],100],[[],57],[[],57],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],0,[[26,14],[[101,[[104,[26]]]]]],[51,[[101,[[104,[25]],9]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,0,0,0,0,0,0,[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[13,[12]],12,[15,[14]]],[[11,[[10,[8,9]]]]]],0,[[17,2,1],[[11,[[10,[8]]]]]],0,0,0,0,0,0,0,0,0,[[],[[11,[[10,[8]]]]]],[[17,2],[[11,[[10,[8]]]]]],0,0,0,0,0,0,0,0,0,[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[12,114],[83,83],[115,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[40,[46,[44,45]]],[[43,[111,42]]]],[[40,[46,[44,45]]],[[43,[113,42]]]],[[40,[46,[44,45]]],[[43,[83,42]]]],[[40,[46,[44,45]]],[[43,[115,42]]]],[[111,47],[[43,[48,49]]]],[[113,47],[[43,[48,49]]]],[[83,47],[[43,[48,49]]]],[[115,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[[],115],0,0,[55,[[43,[107]]]],[55,[[43,[108]]]],[55,[[43,[109]]]],[55,[[43,[110]]]],[55,[[43,[111]]]],[55,[[43,[112]]]],[55,[[43,[113]]]],[55,[[43,[83]]]],[55,[[43,[115]]]],[[],56],[[83,83],57],[[115,115],57],[[],57],[[],57],[[],57],[[],57],[114,57],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],[59,[[43,[60,61]]]],0,0,0,0,0,[[107,62],[[43,[64]]]],[[108,62],[[43,[64]]]],[[109,62],[[43,[64]]]],[[110,62],[[43,[64]]]],[[111,62],[[43,[64]]]],[[112,62],[[43,[64]]]],[[113,62],[[43,[64]]]],[[83,62],[[43,[64]]]],[[83,62],[[43,[64]]]],[[115,62],[[43,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[],107],[[],110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,76]],[[115,76]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,12]],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[113,89],0,0,0,0,0,[[[118,[116,117,9]],119,48,18,120,90,90],110],[[[121,[117]],18,120,90],83],0,0,0,0,0,0,0,[90,107],[[107,98],43],[[108,98],43],[[109,98],43],[[110,98],43],[[111,98],43],[[112,98],43],[[113,98],43],[[83,98],43],[[115,98],43],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107],[110],[[],103],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[113,122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[123,123],[[]],[[40,41],[[43,[123,42]]]],[[123,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[59,[[43,[60,61]]]],[[123,62],63],[[]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[]],[[]],[[]],[[],88],[[],88],[[123,98],43],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[]],[[],43],[[],43],[[],43],[[],43],[[],105],[[],105],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],4],[[24,14,124],125],[[24,126]],[72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[12,25],[127,127],[93,93],[128,128],[124,124],[129,129],[130,130],[[]],[[]],[[]],[[]],[[]],[[]],[[40,41],[[43,[127,42]]]],[[40,41],[[43,[93,42]]]],[[40,41],[[43,[128,42]]]],[[40,41],[[43,[124,42]]]],[[40,41],[[43,[129,42]]]],[[40,41],[[43,[130,42]]]],[[127,47],[[43,[48,49]]]],[[93,47],[[43,[48,49]]]],[[128,47],[[43,[48,49]]]],[[124,47],[[43,[48,49]]]],[[129,47],[[43,[48,49]]]],[[130,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[[127,127],57],[[93,93],57],[[128,128],57],[[124,124],57],[[129,129],57],[[130,130],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],[[127,62],63],[[93,62],63],[[128,62],63],[[124,62],63],[[129,62],63],[[130,62],63],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],88],[[],88],[[],88],[[],88],[[],88],[[],88],[127,6],[[],6],0,0,0,0,[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[131,14,127,125],127],[127,127],[[127,132,120],127],[127,[[101,[[104,[127]]]]]],[51,[[101,[[104,[25]],9]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,0,[[],105],[[],105],[[],105],[[],105],[[],105],[[],105],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[117,117],[[]],[[117,117],133],[[40,[46,[44,45]]],[[43,[117,42]]]],[[117,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[55,[[43,[117]]]],[[117,117],57],[[],57],[[],57],[59,[[43,[60,61]]]],[[117,62],[[43,[64]]]],[[117,62],[[43,[64]]]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[]],[134,[[43,[117]]]],[[117,76]],[[]],[[],88],[117,57],0,[135,117],[[117,117],[[94,[133]]]],[[117,98],43],[[],[[101,[69,9]]]],[[],136],[[],137],[[]],[117,138],[[],139],[[],140],[[],103],[[],43],[[],43],[[117,141,[144,[[0,[142,143]]]]],117],[[],105],[[]],0,0,[47,[[43,[49]]]],[[141,[144,[[0,[142,143]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[145,145],[[]],[[40,[46,[44,45]]],[[43,[145,42]]]],[[145,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[55,[[43,[145]]]],[[145,145],57],[[],57],[[],57],[59,[[43,[60,61]]]],[[145,62],[[43,[64]]]],[[68,62],[[43,[64]]]],[[68,62],[[43,[64]]]],[[]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[]],[[145,76]],[145],[[]],[[]],[[],88],[[],88],[[125,132,120,146],[[43,[145,68]]]],[145,147],0,[145,148],[97],[[145,98],43],[[],[[101,[69,9]]]],[[]],[[],103],0,[[],43],[[],43],[[],43],[[],43],[145,146],0,[145,149],0,[[],105],[[],105],[145,[[43,[150]]]],[145,[[43,[150]]]],[[145,[144,[[0,[142,143]]]],[121,[117]]],[[43,[68]]]],[[]],[[]],0,0,0,0,0,0,0,0,[[],4],[[14,24,151],[[43,[152,103]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,153],[12,25],[95,95],[151,151],[154,154],[155,155],[[]],[[]],[[]],[[]],[[]],[[40,41],[[43,[153,42]]]],[[40,41],[[43,[95,42]]]],[[40,41],[[43,[151,42]]]],[[40,41],[[43,[154,42]]]],[[40,41],[[43,[155,42]]]],[[153,47],[[43,[48,49]]]],[[95,47],[[43,[48,49]]]],[[151,47],[[43,[48,49]]]],[[154,47],[[43,[48,49]]]],[[155,47],[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[47,[[43,[48,49]]]],[[153,153],57],[[95,95],57],[[151,151],57],[[154,154],57],[[155,155],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[25,57],0,0,[[153,62],63],[[95,62],63],[[151,62],63],[[154,62],63],[[155,62],63],[[]],[[]],[[]],[[]],[[]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[[70,[69]],[46,[44,45]]],[[43,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],88],[[],88],[[],88],[[],88],[[],88],[153,6],[[],6],0,0,[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[],[[101,[69,9]]]],[[]],[[]],[[]],[[]],[[]],[[[43,[152,103]],153],153],[51,[[101,[[104,[25]],9]]]],[153,[[101,[[104,[153]]]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,[[],105],[[],105],[[],105],[[],105],[[],105],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"PegOutFees"],[3,"Amount"],[4,"WalletOutput"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"OperationId"],[3,"OutPoint"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"DynGlobalClientContext"],[3,"Executor"],[3,"DynGlobalApi"],[3,"Address"],[4,"Network"],[6,"Result"],[4,"DepositState"],[4,"WithdrawState"],[3,"WalletClientGen"],[4,"WalletOperationMeta"],[3,"WalletClientContext"],[3,"DynState"],[4,"WalletClientStates"],[3,"DynModuleConsensusItem"],[4,"WalletConsensusItem"],[3,"PegOutSignatureItem"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"WalletOutputOutcome"],[3,"DynOutputOutcome"],[3,"WalletInput"],[3,"DynInput"],[3,"DynOutput"],[3,"Rbf"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"WalletClientModule"],[3,"DynContext"],[3,"DatabaseTransaction"],[3,"Amount"],[3,"ClientOutput"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[4,"WalletError"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"WalletCommonGen"],[4,"ProcessPegOutSigError"],[3,"Error"],[4,"PegInProofError"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[3,"SystemTime"],[3,"ChildId"],[3,"Client"],[3,"OsString"],[8,"Hasher"],[3,"FederationId"],[3,"ClientModuleConfig"],[3,"Database"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"Notifier"],[3,"WalletClientConfig"],[3,"ModuleNotifier"],[3,"DynModuleApi"],[3,"TransactionItemAmount"],[6,"ModuleInstanceId"],[3,"Request"],[3,"ModuleKind"],[3,"BitcoinRpcConfig"],[8,"Stream"],[8,"Unpin"],[4,"DepositStates"],[4,"Option"],[4,"WithdrawStates"],[3,"ProprietaryKey"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[3,"MultiApiVersion"],[3,"Vec"],[3,"DynCommonModuleInit"],[3,"String"],[3,"StateTransition"],[3,"TypeId"],[3,"UnzipWalletConsensusItem"],[3,"WalletGenParams"],[3,"WalletGenParamsLocal"],[3,"WalletGenParamsConsensus"],[3,"WalletConfig"],[3,"WalletConfigLocal"],[3,"WalletConfigPrivate"],[3,"WalletConfigConsensus"],[3,"DynClientConfig"],[3,"FeeConsensus"],[3,"PeerId"],[3,"CompressedPublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[15,"u32"],[4,"Descriptor"],[3,"ModuleConsensusVersion"],[3,"NextPegInTweakIndexKey"],[3,"WaitingForConfirmationsDepositState"],[3,"TxOutProof"],[3,"KeyPair"],[3,"DepositStateMachine"],[3,"CreatedDepositState"],[3,"ClaimingDepositState"],[3,"TimedOutDepositState"],[3,"ClientSMDatabaseTransaction"],[3,"Transaction"],[4,"Ordering"],[15,"str"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[8,"Contract"],[8,"Verification"],[8,"Signing"],[3,"Secp256k1"],[3,"PegInProof"],[3,"XOnlyPublicKey"],[3,"OutPoint"],[3,"BlockHash"],[3,"TxOut"],[3,"ValidationErrors"],[3,"CreatedWithdrawState"],[3,"Txid"],[3,"WithdrawStateMachine"],[3,"SuccessWithdrawState"],[3,"AbortedWithdrawState"],[3,"WalletModuleTypes"],[8,"WalletClientExt"],[8,"IterUnzipWalletConsensusItem"],[13,"Deposit"],[13,"Withdraw"],[13,"RbfWithdraw"],[8,"WalletFederationApi"],[4,"DbKeyPrefix"],[8,"Tweakable"]]},\
"fedimint_wallet_common":{"doc":"","t":"NNRRNNNNIRNNNGNGNDNNDNDNDEDNNNNDNNNNDDDEEDDEDNNLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMMFLLMMMMMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMMMALLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLDDDDDDDDDLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDEDNDDNDDNDNDDNDDDDNDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIIKKNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLMLMLLLLFLLL","n":["BelowMinRelayFee","BlockCount","CONFIRMATION_TARGET","CONSENSUS_VERSION","DuplicateSignature","ErrorFinalizingPsbt","Feerate","InvalidSignature","IterUnzipWalletConsensusItem","KIND","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOut","PegOutFeeBelowConsensus","PegOutFees","PegOutSignature","PegOutSignatureItem","PegOutUnderDustLimit","PendingTransaction","ProcessPegOutSigError","Rbf","Rbf","RbfTransactionIdNotFound","RpcError","SighashError","SpendableUTXO","TxWeightIncorrect","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","WalletCommonGen","WalletConsensusItem","WalletError","WalletInput","WalletModuleTypes","WalletOutput","WalletOutputOutcome","WrongNetwork","WrongSignatureCount","amount","amount","amount","amount","as_any","as_any","as_any","as_any","block_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","db","decoder","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","destination","destination","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_rate","feerate","fees","fees","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dyn","into_dyn","into_dyn","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","new","peg_out_amount","peg_out_amount","peg_out_signature","proprietary_tweak_key","provide","provide","psbt","rbf","rbf","recipient","selected_utxos","selected_utxos","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FeeConsensus","WalletClientConfig","WalletConfig","WalletConfigConsensus","WalletConfigLocal","WalletConfigPrivate","WalletGenParams","WalletGenParamsConsensus","WalletGenParamsLocal","as_any","bitcoin_rpc","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_default_bitcoin_rpc","client_default_bitcoin_rpc","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","default","default_bitcoin_rpc","default_fee","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dyn_hash","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fee_consensus","fee_consensus","finality_delay","finality_delay","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_parts","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","local","local","network","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","private","regtest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_parts","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockCountVote","BlockCountVoteKey","BlockCountVotePrefix","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","FeeRateVote","FeeRateVoteKey","FeeRateVotePrefix","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutNonce","PegOutNonceKey","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","fmt","from","from_bytes","from_ref","from_str","hash","into","into_request","is_uncompressed","key","new","partial_cmp","serialize","to_bytes","to_hash160","to_hash256","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_ref","hash","identity","into","into","into_request","into_request","new","outpoint","output_idx","proof_block","provide","serialize","to_bytes","to_owned","to_string","transaction","try_from","try_from","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","validate","validate_args","validate_peg_in_proof","verify","vzip","vzip"],"q":[[0,"fedimint_wallet_common"],[456,"fedimint_wallet_common::config"],[688,"fedimint_wallet_common::db"],[1124,"fedimint_wallet_common::keys"],[1165,"fedimint_wallet_common::tweakable"],[1169,"fedimint_wallet_common::txoproof"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","Allows a user to bump the fees of a <code>PendingTransaction</code>","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","Contains the Bitcoin transaction id of the transaction …ees expressed as an increase over existing peg-out fees","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bitcoin tx id to bump the fees for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures which bitcoin RPC to use","","","","","","","","","","","","","","","","","","","See <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.","Points to a Bitcoin API that the client can use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Points to a Bitcoin API that the client can use to …","If we cannot determine the feerate from our bitcoin node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","Fees for bitcoin transactions","","","How many bitcoin blocks to wait before considering a …","Confirmations required for a peg in to be accepted by …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Bitcoin network (e.g. testnet, bitcoin)","The bitcoin network the client will use","","","The public keys for the bitcoin multisig","","The federations public peg-in-descriptor","The federations public peg-in-descriptor","Secret key for signing bitcoin multisig transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Selfeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An object that can be used as a Ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifiable …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[30,5,0,0,37,37,5,37,0,0,37,37,30,0,30,0,30,0,3,30,0,5,0,30,0,0,0,3,30,30,37,0,30,30,30,37,0,0,0,0,0,0,0,0,0,30,37,1,3,9,12,5,14,16,3,57,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,10,11,5,5,8,9,10,11,1,12,14,14,16,16,3,3,18,5,8,9,10,11,1,12,14,16,3,18,0,5,8,9,10,11,1,12,14,16,3,18,5,8,9,10,11,1,12,14,16,3,18,5,8,9,10,11,1,12,14,16,3,18,0,36,16,16,5,8,9,1,12,14,16,3,18,10,11,5,14,16,3,5,8,9,11,1,12,14,16,3,18,30,5,5,8,8,9,9,11,11,1,1,12,12,14,14,16,16,3,3,18,18,30,30,5,14,16,3,5,8,9,10,11,1,12,14,16,3,18,1,57,10,11,12,18,5,5,8,9,10,11,1,12,14,14,36,16,16,3,3,18,30,30,37,37,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,30,30,37,5,8,9,10,11,1,12,14,16,3,18,5,8,9,10,11,1,12,14,16,3,18,5,8,1,12,14,16,3,18,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,5,14,16,3,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,0,1,10,11,57,0,30,37,11,10,11,12,10,11,5,8,9,10,11,1,12,14,16,3,18,8,11,30,5,8,9,10,11,1,12,14,16,3,18,5,8,9,10,11,1,12,14,16,3,18,5,14,16,3,30,37,1,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,9,10,0,10,8,18,0,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,121,120,5,57,8,9,10,11,1,12,14,36,16,3,18,30,37,0,0,0,0,0,0,0,0,0,65,59,62,58,59,60,61,62,63,64,65,67,58,59,60,61,62,63,64,65,67,60,64,58,59,60,61,62,63,64,65,65,67,58,59,60,61,62,63,64,65,67,58,61,62,64,65,67,62,64,65,67,62,64,65,67,67,65,64,58,59,60,61,62,63,64,65,67,65,65,67,65,65,67,67,65,58,59,60,61,62,63,64,65,67,64,65,60,64,65,58,59,60,61,62,63,64,65,65,67,58,59,60,61,62,63,64,65,67,62,64,65,67,58,61,58,59,60,61,62,63,64,65,67,65,67,58,59,60,61,62,63,64,65,67,65,58,59,60,61,62,63,64,65,67,64,58,61,60,64,65,61,65,64,67,64,65,63,67,61,58,58,59,60,61,62,63,64,65,67,62,64,65,67,58,59,60,61,62,63,64,65,67,58,61,65,58,59,60,61,62,63,64,65,67,58,59,60,61,62,63,64,65,67,58,59,60,61,62,63,64,65,67,64,58,59,60,61,62,63,64,65,67,78,0,0,78,0,0,0,0,78,0,0,78,0,0,78,0,78,0,0,78,0,0,0,0,78,0,0,78,79,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,82,82,82,80,82,84,86,88,90,92,94,78,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,80,81,82,82,83,84,84,85,86,86,87,88,88,89,90,90,91,92,92,93,94,94,95,96,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,79,79,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,79,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,79,79,79,79,80,82,84,86,88,90,92,94,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,105,122,39,0,0,39,39,39,110,39,110,39,110,110,110,110,110,110,110,110,110,110,110,39,39,110,39,110,110,110,110,110,39,110,39,110,110,110,110,39,110,110,110,39,110,110,39,110,39,110,110,110,110,110,39,110,110,0,110,110,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],0,0,[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5,5],[6,7],[8,8],[9,9],[10,10],[11,11],[1,1],[12,12],[6,13],[14,14],[6,15],[16,16],[6,17],[3,3],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[19,20],[[22,[5,21]]]],[[19,20],[[22,[8,21]]]],[[19,20],[[22,[9,21]]]],[[19,20],[[22,[10,21]]]],[[19,20],[[22,[11,21]]]],[[19,20],[[22,[1,21]]]],[[19,20],[[22,[12,21]]]],[[19,20],[[22,[14,21]]]],[[19,20],[[22,[16,21]]]],[[19,20],[[22,[3,21]]]],[[19,20],[[22,[18,21]]]],[[5,23],[[22,[24,25]]]],[[8,23],[[22,[24,25]]]],[[9,23],[[22,[24,25]]]],[[10,23],[[22,[24,25]]]],[[11,23],[[22,[24,25]]]],[[1,23],[[22,[24,25]]]],[[12,23],[[22,[24,25]]]],[[14,23],[[22,[24,25]]]],[[16,23],[[22,[24,25]]]],[[3,23],[[22,[24,25]]]],[[18,23],[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],0,[[],26],[16],[16],[27,[[22,[5]]]],[27,[[22,[8]]]],[27,[[22,[9]]]],[27,[[22,[1]]]],[27,[[22,[12]]]],[27,[[22,[14]]]],[27,[[22,[16]]]],[27,[[22,[3]]]],[27,[[22,[18]]]],0,0,[[],28],[[],28],[[],28],[[],28],[[5,5],29],[[8,8],29],[[9,9],29],[[11,11],29],[[1,1],29],[[12,12],29],[[14,14],29],[[16,16],29],[[3,3],29],[[18,18],29],[[30,30],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[7,29],[13,29],[15,29],[17,29],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],0,0,0,0,0,0,[[5,34],35],[[5,34],35],[[8,34],35],[[9,34],35],[[10,34],35],[[11,34],35],[[1,34],35],[[12,34],35],[[14,34],35],[[14,34],35],[[36,34],35],[[16,34],35],[[16,34],35],[[3,34],35],[[3,34],35],[[18,34],35],[[30,34],35],[[30,34],35],[[37,34],35],[[37,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,30],[39,30],[[]],[[]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,45]],[[8,45]],[[1,45]],[[12,45]],[[14,45]],[[16,45]],[[3,45]],[[18,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,46]],[[14,46]],[[16,46]],[[3,46]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],0,[[28,28],1],0,0,0,[[],48],[49],[49],0,0,0,0,0,0,[[5,50],22],[[8,50],22],[[9,50],22],[[10,50],22],[[11,50],22],[[1,50],22],[[12,50],22],[[14,50],22],[[16,50],22],[[3,50],22],[[18,50],22],0,0,[30,[[52,[51]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[6,66],[67,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[19,20],[[22,[62,21]]]],[[19,20],[[22,[64,21]]]],[[19,20],[[22,[65,21]]]],[[19,20],[[22,[67,21]]]],[[62,23],[[22,[24,25]]]],[[64,23],[[22,[24,25]]]],[[65,23],[[22,[24,25]]]],[[67,23],[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[[],67],0,0,[27,[[22,[58]]]],[27,[[22,[59]]]],[27,[[22,[60]]]],[27,[[22,[61]]]],[27,[[22,[62]]]],[27,[[22,[63]]]],[27,[[22,[64]]]],[27,[[22,[65]]]],[27,[[22,[67]]]],[[],28],[[65,65],29],[[67,67],29],[[],29],[[],29],[[],29],[[],29],[66,29],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],0,0,0,0,0,[[58,34],35],[[59,34],35],[[60,34],35],[[61,34],35],[[62,34],35],[[63,34],35],[[64,34],35],[[65,34],35],[[65,34],35],[[67,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[],58],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,45]],[[67,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,46]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[64,68],0,0,0,0,0,[[[71,[69,70]],72,24,73,74,75,75],61],[[76,73,74,75],65],0,0,0,0,0,0,0,[75,58],[[58,50],22],[[59,50],22],[[60,50],22],[[61,50],22],[[62,50],22],[[63,50],22],[[64,50],22],[[65,50],22],[[67,50],22],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58],[61],[[],55],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[64,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,20],[[22,[80,21]]]],[[19,20],[[22,[81,21]]]],[[19,20],[[22,[82,21]]]],[[19,20],[[22,[83,21]]]],[[19,20],[[22,[84,21]]]],[[19,20],[[22,[85,21]]]],[[19,20],[[22,[86,21]]]],[[19,20],[[22,[87,21]]]],[[19,20],[[22,[88,21]]]],[[19,20],[[22,[89,21]]]],[[19,20],[[22,[90,21]]]],[[19,20],[[22,[91,21]]]],[[19,20],[[22,[92,21]]]],[[19,20],[[22,[93,21]]]],[[19,20],[[22,[94,21]]]],[[19,20],[[22,[95,21]]]],[[19,20],[[22,[96,21]]]],[[80,23],[[22,[24,25]]]],[[81,23],[[22,[24,25]]]],[[82,23],[[22,[24,25]]]],[[83,23],[[22,[24,25]]]],[[84,23],[[22,[24,25]]]],[[85,23],[[22,[24,25]]]],[[86,23],[[22,[24,25]]]],[[87,23],[[22,[24,25]]]],[[88,23],[[22,[24,25]]]],[[89,23],[[22,[24,25]]]],[[90,23],[[22,[24,25]]]],[[91,23],[[22,[24,25]]]],[[92,23],[[22,[24,25]]]],[[93,23],[[22,[24,25]]]],[[94,23],[[22,[24,25]]]],[[95,23],[[22,[24,25]]]],[[96,23],[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[23,[[22,[24,25]]]],[[82,82],29],[[],29],[[],29],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[31,[[22,[32,33]]]],[[78,34],35],[[78,34],35],[[80,34],35],[[81,34],35],[[82,34],35],[[83,34],35],[[84,34],35],[[85,34],35],[[86,34],35],[[87,34],35],[[88,34],35],[[89,34],35],[[90,34],35],[[91,34],35],[[92,34],35],[[93,34],35],[[94,34],35],[[95,34],35],[[96,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,24],[[52,[78]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],79],[79,24],0,[79,52],[79,52],[[79,24],52],[[80,50],22],[[82,50],22],[[84,50],22],[[86,50],22],[[88,50],22],[[90,50],22],[[92,50],22],[[94,50],22],[79],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[],[[54,[40,53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[70,70],[[]],[[70,70],97],[[19,20],[[22,[70,21]]]],[[70,23],[[22,[24,25]]]],[23,[[22,[24,25]]]],[27,[[22,[70]]]],[[70,70],29],[[],29],[[],29],[31,[[22,[32,33]]]],[[70,34],35],[[70,34],35],[[]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[]],[98,[[22,[70]]]],[[70,45]],[[]],[[],47],[70,29],0,[99,70],[[70,70],[[52,[97]]]],[[70,50],22],[[],[[54,[40,53]]]],[[],100],[[],101],[[]],[70,102],[[],103],[[],104],[[],55],[[],22],[[],22],[[70,105,[108,[[0,[106,107]]]]],70],[[],56],[[]],0,0,[23,109],[[105,[108,[[0,[106,107]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[110,110],[[]],[[19,20],[[22,[110,21]]]],[[110,23],[[22,[24,25]]]],[23,[[22,[24,25]]]],[27,[[22,[110]]]],[[110,110],29],[[],29],[[],29],[31,[[22,[32,33]]]],[[110,34],35],[[39,34],35],[[39,34],35],[[]],[[]],[[[41,[40]],[43,[26,42]]],[[22,[44]]]],[[]],[[110,45]],[110],[[]],[[]],[[],47],[[],47],[[111,112,74,113],[[22,[110,39]]]],[110,114],0,[110,115],[49],[[110,50],22],[[],[[54,[40,53]]]],[[]],[[],55],0,[[],22],[[],22],[[],22],[[],22],[110,113],0,[110,116],0,[[],56],[[],56],[110,[[22,[117]]]],[110,[[22,[117]]]],[110,[[22,[118]]]],[[110,[108,[[0,[106,107]]]],[119,[70]]],[[22,[39]]]],[[]],[[]]],"c":[],"p":[[3,"PegOutFees"],[3,"Amount"],[4,"WalletOutput"],[8,"Any"],[4,"WalletConsensusItem"],[15,"u16"],[3,"DynModuleConsensusItem"],[3,"PegOutSignatureItem"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"DynOutputOutcome"],[3,"WalletOutputOutcome"],[3,"DynInput"],[3,"WalletInput"],[3,"DynOutput"],[3,"Rbf"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Decoder"],[8,"Deserializer"],[15,"u64"],[15,"bool"],[4,"WalletError"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[3,"WalletCommonGen"],[4,"ProcessPegOutSigError"],[3,"Error"],[4,"PegInProofError"],[15,"u8"],[15,"slice"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[6,"ModuleInstanceId"],[3,"Request"],[3,"ProprietaryKey"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[4,"Option"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"UnzipWalletConsensusItem"],[3,"WalletGenParams"],[3,"WalletGenParamsLocal"],[3,"WalletGenParamsConsensus"],[3,"WalletConfig"],[3,"WalletConfigLocal"],[3,"WalletConfigPrivate"],[3,"WalletConfigConsensus"],[3,"WalletClientConfig"],[3,"DynClientConfig"],[3,"FeeConsensus"],[3,"ModuleKind"],[3,"PeerId"],[3,"CompressedPublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[4,"Network"],[15,"u32"],[3,"BitcoinRpcConfig"],[6,"PegInDescriptor"],[3,"ModuleConsensusVersion"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[3,"BlockCountVoteKey"],[3,"BlockCountVotePrefix"],[3,"FeeRateVoteKey"],[3,"FeeRateVotePrefix"],[3,"PegOutNonceKey"],[4,"Ordering"],[15,"str"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[8,"Contract"],[8,"Verification"],[8,"Signing"],[3,"Secp256k1"],[6,"Result"],[3,"PegInProof"],[3,"TxOutProof"],[3,"Transaction"],[3,"XOnlyPublicKey"],[3,"OutPoint"],[3,"BlockHash"],[3,"TxOut"],[3,"ValidationErrors"],[3,"ValidationError"],[4,"Descriptor"],[3,"WalletModuleTypes"],[8,"IterUnzipWalletConsensusItem"],[8,"Tweakable"]]},\
"fedimint_wallet_server":{"doc":"","t":"DDDDLLLLLLLLLLLLLLLLLLLLFMLLMLLLLLCLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["StatelessWallet","Wallet","WalletGen","WalletVerificationCache","api_endpoints","api_endpoints","as_any","as_any","as_common","audit","audit","available_utxos","await_consensus_proposal","await_consensus_proposal","block_count","block_is_known","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone_into","clone_into","common","consensus_block_count","consensus_decode","consensus_encode","consensus_encode_dyn","consensus_fee_rate","consensus_nonce","consensus_proposal","consensus_proposal","create_peg_out_tx","create_tx","database_version","decoder","decoder","derive_script","descriptor","deserialize","distributed_gen","distributed_gen","dump_database","dump_database","eq","equivalent","equivalent","erased_serialize","fee_rate","finalize_peg_out_psbt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_ref","from_ref","get_client_config","get_client_config","get_database_migrations","get_wallet_value","hash","init","init","into","into","into","into","into_request","into_request","into_request","into_request","module_kind","new","new_with_bitcoind","offline_wallet","output_status","output_status","process_consensus_item","process_consensus_item","process_input","process_input","process_output","process_output","recognize_change_utxo","remove_rbf_transactions","run_broadcast_pending_tx","secp","secp","secret_key","serialize","sign_peg_out_psbt","sign_psbt","supported_api_versions","supported_api_versions","sync_up_to_consensus_height","to_bytes","to_dyn_common","to_owned","to_owned","trusted_dealer_gen","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_config","validate_config","validate_params","validate_tx","versions","vzip","vzip","vzip","vzip"],"q":[[0,"fedimint_wallet_server"]],"d":["","","","","","","","","","Queries the database and returns all assets and …","","","Blocks until a new <code>consensus_proposal</code> is available.","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Retrieve the current status of the output. Depending on …","","This function is called once for every consensus item. The …","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue notes, peg-out BTC, …","Add a change UTXO to our spendable UTXO database after it …","Removes the <code>PendingTransaction</code> and any transactions tied …","","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","","","","","","Given a tx created from an <code>WalletOutput</code>, validate there …","","","","",""],"i":[0,0,0,0,1,1,1,24,23,1,1,1,1,1,1,1,39,23,1,24,39,23,1,24,0,1,1,1,1,23,24,24,23,24,0,1,24,24,24,1,1,1,1,1,39,23,23,1,39,39,24,23,23,23,23,24,24,24,24,1,1,23,1,24,39,23,1,24,24,23,24,23,23,23,1,24,23,23,39,23,1,24,39,23,1,24,23,1,1,1,1,1,1,1,1,1,1,1,1,1,0,39,1,39,24,1,39,23,23,1,24,23,23,24,23,23,39,23,1,24,39,23,1,24,39,23,1,24,23,23,23,39,23,39,23,1,24],"f":[0,0,0,0,[1,[[3,[[2,[1]]]]]],[[],[[3,[[2,[4]],5]]]],[[],6],[[],6],[[],7],[[[9,[8]],10],[[13,[[12,[11,5]]]]]],[[1,9,10],[[13,[[12,[11]]]]]],[[1,9],3],[[[9,[8]]],[[13,[[12,[11,5]]]]]],[[1,9],[[13,[[12,[11]]]]]],[1,14],[[1,9,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,18]],0,[[[20,[19]]],21],[[1,22]],0,[23,23],[24,24],[[],21],[[]],[[]],0,[[1,9],[[25,[14]]]],[[26,27],[[29,[24,28]]]],[[24,30],[[29,[31,32]]]],[30,[[29,[31,32]]]],[[1,9],33],[[1,9],[[35,[34]]]],[[[9,[8]],8],[[13,[[12,[11,5]]]]]],[[1,9],[[13,[[12,[11]]]]]],[[1,9,36,[35,[34]]],[[29,[37,38]]]],[[39,40,41,3,3,33,[20,[34]],[25,[42]]],[[29,[37,38]]]],[[],43],[[],44],[[],44],[[39,[20,[34]]],41],0,[45,[[29,[24]]]],[[23,46,47],[[13,[[12,[11]]]]]],[[46,47],[[13,[[12,[11,5]]]]]],[[[9,[8]],[3,[48,5]]],[[13,[[12,[11,5]]]]]],[[23,9,[3,[48]]],[[13,[[12,[11]]]]]],[[24,24],16],[[],16],[[],16],[49,[[29,[50,51]]]],[1,33],[[1,37],[[29,[52,53]]]],[[23,54],55],[[1,54],55],[[24,54],55],[[]],[[]],[[]],[[]],[[[20,[34]],[57,[44,56]]],[[29,[58]]]],[[]],[[]],[[8,59],[[29,[60,61]]]],[[23,59],[[63,[62]]]],[[],[[64,[43,5]]]],[[1,9],40],[[24,65]],[[23,66,67,68],[[13,[[12,[11]]]]]],[[66,67,68],[[13,[[12,[11,5]]]]]],[[]],[[]],[[]],[[]],[[],69],[[],69],[[],69],[[],69],[[],70],[[71,67,68],[[63,[1]]]],[[71,67,18,68],[[29,[1,38]]]],[1,39],[[[9,[8]],72,8],[[13,[[12,[11,5]]]]]],[[1,9,72],[[13,[[12,[11]]]]]],[[[9,[8]],73,74],[[13,[[12,[11,5]]]]]],[[1,9,75,74],[[13,[[12,[11]]]]]],[[1,9,76],[[13,[[12,[11]]]]]],[[[9,[8]],19,21],[[13,[[12,[11,5]]]]]],[[1,9,36,72],[[13,[[12,[11]]]]]],[[[9,[8]],77,72],[[13,[[12,[11,5]]]]]],[[1,9,52]],[[1,9,52]],[[67,18,78]],0,0,0,[[24,79],29],[[1,80,74,81],[[29,[53]]]],[[39,80]],[[],82],[23,82],[[1,9,14,14]],[[],[[3,[34,5]]]],[[],83],[[]],[[]],[[[20,[74]],47],[[64,[74,66,5]]]],[[23,[20,[74]],47],[[64,[74,66]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],84],[[],84],[[],84],[[],84],[[23,74,66],63],[[74,66],[[29,[61]]]],[47,[[29,[61]]]],[[39,37,36,33,85],[[29,[38]]]],[[23,86],[[20,[87]]]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Wallet"],[3,"ApiEndpoint"],[3,"Vec"],[3,"DynServerModule"],[3,"Global"],[8,"Any"],[8,"IDynCommonModuleInit"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u32"],[3,"BlockHash"],[15,"bool"],[3,"DatabaseTransaction"],[3,"DynBitcoindRpc"],[3,"DynInput"],[15,"slice"],[3,"DynVerificationCache"],[8,"Iterator"],[3,"WalletGen"],[3,"WalletVerificationCache"],[4,"Option"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[8,"Write"],[15,"usize"],[3,"Error"],[3,"Feerate"],[15,"u8"],[15,"array"],[4,"WalletOutput"],[3,"UnsignedTransaction"],[4,"WalletError"],[3,"StatelessWallet"],[3,"Amount"],[3,"Script"],[3,"Rbf"],[3,"DatabaseVersion"],[3,"Decoder"],[8,"Deserializer"],[3,"PeerHandle"],[3,"ConfigGenModuleParams"],[3,"String"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"PendingTransaction"],[4,"ProcessPegOutSigError"],[3,"Formatter"],[6,"Result"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[3,"ServerModuleConsensusConfig"],[3,"ClientModuleConfig"],[3,"Error"],[3,"WalletClientConfig"],[6,"Result"],[3,"BTreeMap"],[8,"Hasher"],[3,"ServerModuleConfig"],[3,"Database"],[3,"TaskGroup"],[3,"Request"],[3,"ModuleKind"],[3,"WalletConfig"],[3,"OutPoint"],[3,"DynModuleConsensusItem"],[3,"PeerId"],[4,"WalletConsensusItem"],[3,"WalletInput"],[3,"DynOutput"],[3,"TaskHandle"],[8,"Serializer"],[3,"PartiallySignedTransaction"],[3,"PegOutSignatureItem"],[3,"SupportedModuleApiVersions"],[3,"DynCommonModuleInit"],[3,"TypeId"],[4,"Network"],[3,"CoreConsensusVersion"],[3,"ModuleConsensusVersion"]]},\
"fedimint_wasm_tests":{"doc":"","t":"FAAFFFFFFFFFFF","n":["client","faucet","tests","generate_invoice","invite_code","pay_invoice","__wbgt_build_client_0","__wbgt_derive_chacha_key_2","__wbgt_receive_1","__wbgt_receive_and_pay_3","build_client","derive_chacha_key","receive","receive_and_pay"],"q":[[0,"fedimint_wasm_tests"],[3,"fedimint_wasm_tests::faucet"],[6,"fedimint_wasm_tests::tests"]],"d":["","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[1,[[3,[2]]]],0,0,[4,[[3,[5]]]],[[],[[3,[5]]]],[6,3],[7],[7],[7],[7],[[],3],[[]],[[],3],[[],3]],"c":[],"p":[[3,"InviteCode"],[3,"Client"],[6,"Result"],[15,"u64"],[3,"String"],[15,"str"],[3,"Context"]]},\
"fedimintd":{"doc":"","t":"FFADRDMLLMMMLLLLLLMLLLLLLMLLLLLLLLLLLMMLMMFLMMFMLLLLLLLLLLLLLM","n":["attach_default_module_init_params","default_esplora_server","fedimintd","Fedimintd","SHUTDOWN_TIMEOUT","ServerOpts","api_url","augment_args","augment_args_for_update","bind_api","bind_metrics_api","bind_p2p","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","data_dir","deref","deref","deref_mut","deref_mut","drop","drop","finality_delay","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","into_request","into_request","max_denomination","network","new","p2p_url","password","run","run","server_gen_params","server_gens","spawn_metrics_server","tokio_console_bind","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","with_default_modules","with_extra_module_inits_params","with_module","with_telemetry"],"q":[[0,"fedimintd"],[3,"fedimintd::fedimintd"]],"d":["Generates the configuration for the modules configured in …","","Module for creating <code>fedimintd</code> binary with custom modules","<code>fedimintd</code> builder","Time we will wait before forcefully shutting down tasks","","Our API address for clients to connect to us","","","Address we bind to for exposing the API","","Address we bind to for federation communication","","","","","","","Path to folder containing federation config files","","","","","","","The bitcoin network that fedimint will be running on","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Max denomination of notes issued by the federation (in …","The bitcoin network that fedimint will be running on","","Our external address for communicating with our peers","Password to encrypt sensitive config files","","","","","","Enable tokio console logging","","","","","","","","","","","","","","Enable telemetry logging"],"i":[0,0,0,0,0,0,9,9,9,9,9,9,15,9,15,9,9,9,9,15,9,15,9,15,9,9,15,9,9,9,9,15,9,15,9,15,9,9,9,15,9,9,0,15,15,15,0,9,15,9,15,9,15,9,9,9,15,9,15,15,15,9],"f":[[[1,2,3,4,5]],[4,1],0,0,0,0,0,[6,6],[6,6],0,0,0,[[]],[[]],[[]],[[]],[[],6],[[],6],0,[7],[7],[7],[7],[7],[7],0,[[]],[[]],[8,[[11,[9,10]]]],[8,[[11,[9,10]]]],[[],[[13,[12]]]],[[],7],[[],7],[[]],[[]],[[],14],[[],14],0,0,[[],[[16,[15]]]],0,0,[[9,17,18,2],16],[15,19],0,0,[[20,17],16],0,[[],11],[[],11],[[],11],[[],11],[[],21],[[],21],[[9,8],[[11,[10]]]],[[9,8],[[11,[10]]]],[[]],[[]],[15,15],[[15,22,23,24],15],[[15,[0,[25,26,27]]],15],0],"c":[],"p":[[3,"BitcoinRpcConfig"],[6,"ServerModuleConfigGenParamsRegistry"],[3,"Amount"],[4,"Network"],[15,"u32"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"ServerOpts"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Request"],[3,"Fedimintd"],[6,"Result"],[3,"TaskGroup"],[6,"ServerModuleInitRegistry"],[15,"never"],[4,"SocketAddr"],[3,"TypeId"],[6,"ModuleInstanceId"],[3,"ModuleKind"],[8,"ModuleInitParams"],[8,"ServerModuleInit"],[8,"Send"],[8,"Sync"]]},\
"gateway_cli":{"doc":"","t":"NNNDENNNNNNMLLLLLLLLLMLLLLLLLLLLLLLLLFFMFLLLLLLLLLLLLMMMMMMMMM","n":["Address","Backup","Balance","Cli","Commands","Completion","ConnectFed","Info","Restore","VersionHash","Withdraw","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","into_request","into_request","into_request","into_request","main","print_response","rpcpassword","source_password","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","amount","federation_id","federation_id","federation_id","federation_id","federation_id","invite_code","shell"],"q":[[0,"gateway_cli"],[53,"gateway_cli::Commands"]],"d":["Generate a new peg-in address, funds sent to it can later …","Make a backup of snapshot of all ecash","Check gateway balance","","","","Register federation with the gateway","Display high-level information about the Gateway","Restore ecash from last available snapshot or from scratch","Display CLI version hash","Claim funds from a gateway federation","The address of the gateway webserver","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","WARNING: Passing in a password from the command line may …","","","","","","","","","","","","","","The address to send the funds to","The amount to withdraw","","","","","","InviteCode code to connect to the federation",""],"i":[6,6,6,0,0,6,6,6,6,6,6,3,3,3,6,6,3,6,3,6,3,3,3,3,6,3,6,3,6,3,6,3,6,3,3,6,6,0,0,3,0,3,6,3,6,3,6,3,6,3,6,3,6,17,17,18,19,17,20,21,22,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[[]],[[]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[2,[[5,[3,4]]]],[2,[[5,[6,4]]]],[[],[[8,[7]]]],[9,10],[[]],[[]],[[],11],[[],12],[[],11],[[],12],[[],13],[14],0,[[[8,[15]]],15],[[],5],[[],5],[[],5],[[],5],[[],16],[[],16],[[3,2],[[5,[4]]]],[[6,2],[[5,[4]]]],[[3,2],[[5,[4]]]],[[6,2],[[5,[4]]]],[[]],[[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Command"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Request"],[6,"Result"],[8,"Serialize"],[3,"String"],[3,"TypeId"],[13,"Withdraw"],[13,"Balance"],[13,"Address"],[13,"Backup"],[13,"Restore"],[13,"ConnectFed"],[13,"Completion"]]},\
"gateway_cln_extension":{"doc":"","t":"EDDDDNDDGGDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLMFMLLMLLLLLLLLLLLLLLLLLLLLLLLLFLLMMLMLLLFMLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ClnExtensionError","ClnExtensionOpts","ClnHtlcInterceptor","ClnRpcClient","ClnRpcService","Error","Htlc","HtlcAccepted","HtlcInterceptionSender","HtlcOutcomeSender","Onion","RpcError","RpcWrongResponse","amount_msat","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","command","command_for_update","complete_htlc","convert_short_channel_id","deserialize","deserialize","deserialize","erased_serialize","erased_serialize","erased_serialize","fm_gateway_listen","fmt","fmt","fmt","fmt","fmt","forward_msat","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","get_node_info","get_route_hints","group_id","htlc","htlc_processing_failure","id","info","intercept_htlc","interceptor","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","main","new","new","onion","outcomes","pay_invoice","payment_hash","provide","route_htlcs","rpc_client","scid_to_u64","sender","serialize","serialize","serialize","short_channel_id","short_channel_id","socket","source","task_group","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"gateway_cln_extension"]],"d":["","","Functional structure to filter intercepted HTLCs into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gateway CLN extension service listen address","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new RPC client for a request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,22,0,0,0,0,0,22,22,2,25,25,41,6,25,2,3,4,22,5,41,6,25,2,3,4,22,5,2,3,4,5,2,3,4,5,2,2,25,25,6,5,2,3,4,2,3,4,25,2,3,4,22,22,3,41,6,25,2,3,4,22,22,22,5,25,25,2,3,4,5,6,6,25,4,0,2,6,5,6,41,6,25,2,3,4,22,5,41,41,6,6,25,25,2,2,3,3,4,4,22,22,5,5,0,6,5,4,5,6,2,22,6,6,0,5,2,3,4,2,3,6,22,6,2,3,4,5,22,41,6,25,2,3,4,22,5,41,6,25,2,3,4,22,5,41,6,25,2,3,4,22,5,25,25,41,6,25,2,3,4,22,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[6,[8,[7]]],[[11,[[10,[9]]]]]],[12,[[15,[13,14]]]],[16,[[15,[2]]]],[16,[[15,[3]]]],[16,[[15,[4]]]],[17,[[15,[18,19]]]],[17,[[15,[18,19]]]],[17,[[15,[18,19]]]],0,[[2,20],21],[[3,20],21],[[4,20],21],[[22,20],21],[[22,20],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[14,22],[[]],[23,22],[[]],[24,[[15,[25,26]]]],[24,[[15,[25,26]]]],[[]],[[]],[[]],[[]],[[6,[8,[27]]],[[11,[[10,[9]]]]]],[[6,[8,[28]]],[[11,[[10,[9]]]]]],[[],[[30,[29]]]],0,[[],31],0,[6,[[15,[22]]]],[[5,4],31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],32],[[],32],[[],8],[[],32],[[],8],[[],32],[[],8],[[],32],[[],8],[[],32],[[],8],[[],32],[[],8],[[],8],[[],32],[[],[[15,[14]]]],[[],[[15,[22]]]],[[],5],0,0,[[6,[8,[33]]],[[11,[[10,[9]]]]]],0,[34],[[6,[8,[27]]],[[11,[[10,[9]]]]]],[6,[[15,[35,22]]]],[36,13],0,[[2,37],15],[[3,37],15],[[4,37],15],0,0,0,[22,[[30,[38]]]],0,[[]],[[]],[[]],[[]],[[],39],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[25,24],[[15,[26]]]],[[25,24],[[15,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Command"],[3,"Htlc"],[3,"Onion"],[3,"HtlcAccepted"],[3,"ClnHtlcInterceptor"],[3,"ClnRpcService"],[3,"InterceptHtlcResponse"],[3,"Request"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"str"],[15,"u64"],[3,"Error"],[4,"Result"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[4,"ClnExtensionError"],[3,"RpcError"],[3,"ArgMatches"],[3,"ClnExtensionOpts"],[6,"Error"],[3,"EmptyRequest"],[3,"GetRouteHintsRequest"],[3,"Id"],[4,"Option"],[4,"Value"],[3,"Request"],[3,"PayInvoiceRequest"],[3,"Demand"],[3,"ClnRpc"],[3,"ShortChannelId"],[8,"Serializer"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"ClnRpcClient"]]},\
"gatewayd":{"doc":"","t":"F","n":["main"],"q":[[0,"gatewayd"]],"d":["Fedimint Gateway Binary"],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[3,"Error"],[4,"Result"]]},\
"hkdf":{"doc":"This crate implements the RFC5869 hash based key …","t":"ISQDQSKKCLLLLLLLLKKLKLALKLMLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitcoinHash","DISPLAY_BACKWARD","Engine","Hkdf","Inner","LEN","all_zeros","as_inner","bitcoin_hashes","borrow","borrow_mut","clone","clone_into","derive","derive_hmac","engine","from","from_engine","from_inner","from_prk","from_slice","hash","hashes","into","into_inner","new","prk","to_owned","try_from","try_into","type_id","Hash160","Ripemd160","Sha1","Sha256","Sha256d","Sha512","Siphash24","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","engine","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine_to_u64","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u64","hash","hash","hash","hash","hash","hash","hash","hash_to_u64_with_keys","hash_with_keys","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"hkdf"],[31,"hkdf::hashes"]],"d":["Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","Implements the RFC5869 hash based key derivation function …","The byte array that represents the hash internally.","Length of the hash, in bytes.","Returns an all zero hash.","Unwraps the hash and returns a reference to the underlying …","","","","","","Run HKDF-expand to generate new key material","Run HKDF-expand to generate new key material with …","Constructs a new engine.","Returns the argument unchanged.","Produces a hash from the current state of a given engine.","Constructs a hash from the underlying byte array.","Construct the HKDF from a pseudo random key that has the …","Copies a byte slice into a hash object.","Hashes some bytes.","","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","Run HKDF-extract and keep the resulting pseudo random key …","","","","","","Output of the Bitcoin HASH160 hash function.","Output of the RIPEMD160 hash function.","Output of the SHA1 hash function.","Output of the SHA256 hash function.","Output of the SHA256d hash function.","Output of the SHA256 hash function.","Output of the SipHash24 hash function.","","","","","","","","","","","","","","","","","","","","","","Returns the (little endian) 64-bit integer representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Produces a hash as <code>u64</code> from the current state of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a hash from its (little endian) 64-bit integer …","","","","","","","","Hashes the given data directly to u64 with an engine with …","Hashes the given data with an engine with the provided …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,0,2,2,2,2,0,3,3,3,3,3,3,2,3,2,2,3,2,2,0,3,2,3,3,3,3,3,3,0,0,0,0,0,0,0,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,12,12,13,13,14,14,15,15,16,16,17,17,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,12,13,14,15,16,17,18,12,13,14,15,16,17,18,13,17,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,12,13,14,15,16,17,18,18,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[2]],[5,[4]]],[[6,[4]]]],[[[3,[2]],[5,[4]]],[[7,[2]]]],[[]],[[]],[[]],[[]],[[[7,[2]]],[[3,[2]]]],[[[5,[4]]],[[9,[8]]]],[[[5,[4]]]],0,[[]],[[]],[[[5,[4]],[10,[[5,[4]]]]],[[3,[2]]]],0,[[]],[[],9],[[],9],[[],11],0,0,0,0,0,0,0,[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[12],[13],[14],[15],[16],[17],[18],[12,[[5,[4]]]],[13,[[5,[4]]]],[14,[[5,[4]]]],[15,[[5,[4]]]],[16,[[5,[4]]]],[17,[[5,[4]]]],[18,[[5,[4]]]],[18,19],[12,[[5,[4]]]],[[]],[13,[[5,[4]]]],[[]],[[]],[14,[[5,[4]]]],[15,[[5,[4]]]],[[]],[16,[[5,[4]]]],[[]],[17,[[5,[4]]]],[[]],[18,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],20],[[13,13],20],[[14,14],20],[[15,15],20],[[16,16],20],[[17,17],20],[[18,18],20],[[],12],[12],[13],[14],[15],[16],[17],[18],[21,[[9,[12]]]],[21,[[9,[13]]]],[21,[[9,[14]]]],[21,[[9,[15]]]],[21,[[9,[16]]]],[21,[[9,[17]]]],[21,[[9,[18]]]],[[],22],[[],22],[[12,12],23],[[13,13],23],[[14,14],23],[[15,15],23],[[16,16],23],[[17,17],23],[[18,18],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[12,24],[[9,[25]]]],[[12,24],[[9,[25]]]],[[12,24],[[9,[25]]]],[[13,24],[[9,[25]]]],[[13,24],[[9,[25]]]],[[13,24],[[9,[25]]]],[[14,24],[[9,[25]]]],[[14,24],[[9,[25]]]],[[14,24],[[9,[25]]]],[[15,24],[[9,[25]]]],[[15,24],[[9,[25]]]],[[15,24],[[9,[25]]]],[[16,24],[[9,[25]]]],[[16,24],[[9,[25]]]],[[16,24],[[9,[25]]]],[[17,24],[[9,[25]]]],[[17,24],[[9,[25]]]],[[17,24],[[9,[25]]]],[[18,24],[[9,[25]]]],[[18,24],[[9,[25]]]],[[18,24],[[9,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[[[0,[26,27,28]]],[[9,[29]]]],[30,12],[22,13],[31,14],[32,15],[22,16],[22,17],[33,18],[33,19],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[[5,[4]]],[[9,[12,8]]]],[[[5,[4]]],[[9,[13,8]]]],[[[5,[4]]],[[9,[14,8]]]],[[[5,[4]]],[[9,[15,8]]]],[[[5,[4]]],[[9,[16,8]]]],[[[5,[4]]],[[9,[17,8]]]],[[[5,[4]]],[[9,[18,8]]]],[[[5,[4]]],[[9,[12,8]]]],[[[5,[4]]],[[9,[13,8]]]],[[[5,[4]]],[[9,[14,8]]]],[[[5,[4]]],[[9,[15,8]]]],[[[5,[4]]],[[9,[16,8]]]],[[[5,[4]]],[[9,[17,8]]]],[[[5,[4]]],[[9,[18,8]]]],[34,[[9,[12]]]],[34,[[9,[13]]]],[34,[[9,[14]]]],[34,[[9,[15]]]],[34,[[9,[16]]]],[34,[[9,[17]]]],[34,[[9,[18]]]],[19,18],[[12,35]],[[13,35]],[[14,35]],[[15,35]],[[16,35]],[[17,35]],[[18,35]],[[19,19,[5,[4]]],19],[[19,19,[5,[4]]],18],[[12,[36,[[5,[4]]]]]],[[13,[36,[[5,[4]]]]]],[[14,[36,[[5,[4]]]]]],[[15,[36,[[5,[4]]]]]],[[16,[36,[[5,[4]]]]]],[[17,[36,[[5,[4]]]]]],[[18,[36,[[5,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[13],[14],[15],[16],[17],[18],[[12,12],[[10,[20]]]],[[13,13],[[10,[20]]]],[[14,14],[[10,[20]]]],[[15,15],[[10,[20]]]],[[16,16],[[10,[20]]]],[[17,17],[[10,[20]]]],[[18,18],[[10,[20]]]],[[12,37],9],[[13,37],9],[[14,37],9],[[15,37],9],[[16,37],9],[[17,37],9],[[18,37],9],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11]],"c":[],"p":[[8,"Clone"],[8,"BitcoinHash"],[3,"Hkdf"],[15,"u8"],[15,"slice"],[15,"array"],[3,"Hmac"],[4,"Error"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Sha512"],[3,"Hash160"],[3,"Ripemd160"],[3,"Sha1"],[3,"Sha256"],[3,"Sha256d"],[3,"Siphash24"],[15,"u64"],[4,"Ordering"],[8,"Deserializer"],[3,"HashEngine"],[15,"bool"],[3,"Formatter"],[3,"Error"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[4,"Error"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[15,"str"],[8,"Hasher"],[8,"SliceIndex"],[8,"Serializer"],[3,"String"]]},\
"ln_gateway":{"doc":"","t":"NNRRRNNRDEDDRNENNNRRGNMMMLLLLLLLLLLLLLLMAMMLLLLLLLMMALLMMMLLLLLLLLLLLLLLLLLLLLLMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMAMALMLLAMMMMMLLLMLALMLLLLMLLLLLLLLLLLLLLLLLLALLLLALLLLLLLMMMMDLLLLLLLLLLLLLLMMLLLLLLMEDNDDNDDNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAMMMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIDQDLMLLLLLLLLLLLKLLLLLLLKKMLLLLLLLLLMLMLKLLLKLMLLLLLLLLLLLDDMLLLLLLLLLLMLLLLLLLLLLLLMLMLMLLLLLLMMMLLLLLLLLLLEDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLDGRMLLLLLLLLLLLMLMLLLLLLMLLLLNNNNNNNNIERDGLLLLLLKLLMLLLLLLLLLLLLLLLKLLLLLLLLKLLKLKLLLLLLLLLLLLLMMMMMMMNNNNNNRDIDDEEEEDRNNNNNNNENNNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLMMMMLLMLLAMLMMKLLMLLLLMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMNEDNNNDDENENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNDDDDDENNNNNNNNNEENDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMNDNDDNNDDDEDINDNQNDNNDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMAAMFFLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLNDDEGNDLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLFFFFFFFFFF","n":["ClientStateMachineError","Cln","DB_FILE","DEFAULT_FEES","DEFAULT_MODULE_KINDS","DatabaseError","FederationError","GW_ANNOUNCEMENT_TTL","Gateway","GatewayError","GatewayOpts","Gatewayd","INITIAL_SCID","InvalidMetadata","LightningMode","LightningRpcError","Lnd","OutgoingPaymentError","ROUTE_HINT_RETRIES","ROUTE_HINT_RETRY_SLEEP","Result","UnexpectedState","api","api_addr","api_addr","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id_generator","client","client_builder","clients","clone","clone","clone_into","clone_into","command","command_for_update","create_boxed_lightning_client","data_dir","data_dir","db","deserialize","erased_serialize","fees","fees","fees","fetch_lightning_node_info","fetch_lightning_route_hints","fetch_lightning_route_hints_try","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","gateway_id","gateway_lnrpc","gatewayd_db","get_gateway_id","group_id","handle_address_msg","handle_backup_msg","handle_balance_msg","handle_connect_federation","handle_get_info","handle_htlc_stream","handle_pay_invoice_msg","handle_restore_msg","handle_withdraw_msg","has_subcommand","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","lightning_alias","lightning_mode","lightning_public_key","listen","listen","lnd","lnrpc","lnrpc_client","load_clients","mode","new","new","ng","num_route_hints","num_route_hints","num_route_hints","password","password","provide","register_client","register_clients_timer","registry","remove_client","rpc","run","scid_to_federation","select_client","serialize","source","start_gateway","task_group","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","utils","vzip","vzip","vzip","vzip","vzip","with_default_modules","with_module","cln_extension_addr","lnd_macaroon","lnd_rpc_addr","lnd_tls_cert","StandardGatewayClientBuilder","borrow","borrow_mut","build","clone","clone_into","create_config","fmt","from","from_ref","into","into_request","into_request","load_configs","new","primary_module","registry","save_config","to_owned","try_from","try_into","type_id","vzip","work_dir","DbKeyPrefix","FederationConfig","FederationConfig","FederationIdKey","FederationIdKeyPrefix","FederationRegistration","FederationRegistrationKey","GatewayPublicKey","GatewayPublicKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fees","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","hash","hash","id","id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mint_channel_id","partial_cmp","timelock_delta","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","EmptyRequest","EmptyResponse","GetNodeInfoResponse","GetRouteHintsRequest","GetRouteHintsResponse","InterceptHtlcRequest","InterceptHtlcResponse","PayInvoiceRequest","PayInvoiceResponse","action","alias","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_lightning_client","gateway_lightning_server","get_route_hints_response","htlc_id","htlc_id","incoming_amount_msat","incoming_chan_id","incoming_chan_id","incoming_expiry","intercept_htlc_response","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","max_delay","max_fee_msat","num_route_hints","outgoing_amount_msat","payment_hash","payment_hash","preimage","pub_key","route_hints","short_channel_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GatewayLightningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","complete_htlc","connect","fmt","from","from_ref","get_node_info","get_route_hints","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","pay_invoice","route_htlcs","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GatewayLightning","GatewayLightningServer","RouteHtlcsStream","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","call","clone","clone","clone_into","clone_into","complete_htlc","fmt","fmt","from","from","from_arc","from_ref","from_ref","get_node_info","get_route_hints","inner","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","pay_invoice","poll_ready","poll_ready","poll_ready","route_htlcs","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","RouteHint","RouteHintHop","base_msat","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","cltv_expiry_delta","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","hops","htlc_maximum_msat","htlc_maximum_msat","htlc_minimum_msat","htlc_minimum_msat","into","into","into_request","into_request","into_request","into_request","proportional_millionths","short_channel_id","src_node_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Action","Cancel","Cancel","Forward","Forward","Settle","Settle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","merge","preimage","reason","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","GatewayLndClient","HtlcSubscriptionSender","LND_PAYMENT_TIMEOUT_SECONDS","address","borrow","borrow_mut","cancel_htlc","complete_htlc","connect","fmt","from","info","into","into_request","into_request","lnd_sender","lookup_payment","macaroon","new","pay","route_htlcs","routehints","send_lnd_response","spawn_interceptor","tls_cert","try_from","try_into","type_id","vzip","FailedPayment","FailedToCompleteHtlc","FailedToConnect","FailedToGetInvoice","FailedToGetNodeInfo","FailedToGetRouteHints","FailedToOpenChannel","FailedToRouteHtlcs","ILnRpcClient","LightningRpcError","MAX_LIGHTNING_RETRIES","NetworkLnRpcClient","RouteHtlcStream","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","complete_htlc","complete_htlc","connect","connection_url","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","eq","equivalent","equivalent","erased_serialize","fmt","fmt","fmt","from","from","from_bytes","from_ref","info","info","into","into","into_request","into_request","into_request","into_request","new","pay","pay","provide","route_htlcs","route_htlcs","routehints","routehints","serialize","to_bytes","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","failure_reason","Canceled","Complete","Created","Fail","Funding","FundingFailed","GW_ANNOUNCEMENT_TTL","GatewayClientContext","GatewayClientExt","GatewayClientGen","GatewayClientModule","GatewayClientStateMachines","GatewayExtPayStates","GatewayExtReceiveStates","GatewayMeta","Htlc","INITIAL_REGISTER_BACKOFF_DURATION","OfferDoesNotExist","Pay","Pay","Preimage","Preimage","Receive","Receive","ReceiveError","RefundError","RefundSuccess","RouteHtlcError","Success","as_any","as_any","as_common","await_primary_module_output","backup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complete","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","context","create_exact_output","create_funding_incoming_contract_output","create_sufficient_input","decoder","decoder","decoder","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_handle_intercepted_htlc","gateway_pay_bolt11_invoice","gateway_subscribe_ln_pay","gateway_subscribe_ln_receive","get_balance","handle_cli_command","htlc_id","incoming_amount_msat","incoming_chan_id","incoming_expiry","init","init","input_amount","input_amount","into","into","into","into","into","into","into","into","into","into_dyn","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ln_decoder","lnrpc","lnrpc","lnrpc","mint_channel_id","mint_channel_id","module_api","module_kind","module_kind","node_pub_key","node_pub_key","notifier","notifier","operation_id","operation_id","outgoing_amount_msat","output_amount","output_amount","pay","payment_hash","provide","redeem_key","redeem_key","register_with_federation","register_with_federation","restore","secp","serialize","serialize","serialize","serialize","short_channel_id","subscribe_balance_changes","supported_api_versions","supported_api_versions","supports_backup","supports_being_primary","timelock_delta","timelock_delta","timelock_delta","to_bytes","to_bytes","to_bytes","to_dyn_common","to_gateway_registration_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","contract_id","error","error","error_message","outpoint","preimage","preimage","error","error","error","error_message","outpoint","CompleteHtlc","CompleteHtlcError","CompleteHtlcState","FailedToCompleteHtlc","Failure","Failure","GatewayCompleteCommon","GatewayCompleteStateMachine","GatewayCompleteStates","HtlcFinished","HtlcOutcome","IncomingContractNotFunded","Success","WaitForPreimage","WaitForPreimageState","as_any","await_complete_htlc","await_preimage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","htlc_id","incoming_chan_id","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","operation_id","operation_id","operation_id","outcome","provide","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_complete_htlc","transition_success","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CancelContract","Canceled","CancelledContract","ClaimOutgoingContract","Failed","GatewayPayCancelContract","GatewayPayClaimOutgoingContract","GatewayPayCommon","GatewayPayInvoice","GatewayPayStateMachine","GatewayPayStates","InvalidOutgoingContract","InvalidOutgoingContract","InvoiceExpired","InvoiceMissingAmount","LightningPayError","MissingContractData","NotOurKey","OfferDoesNotExist","OutgoingContractDoesNotExist","OutgoingContractError","OutgoingPaymentError","PayInvoice","PaymentParameters","Preimage","TimeoutTooClose","Underfunded","as_any","await_get_payment_parameters","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_over_lightning","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract","contract_id","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq_no_instance_id","erased_serialize","erased_serialize","erased_serialize","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invoice","max_delay","max_send_amount","operation_id","operation_id","operation_id","preimage","provide","provide","serialize","serialize","serialize","state","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transition_buy_preimage","transition_canceled","transition_claim_outgoing_contract","transitions","transitions","transitions","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_outgoing_account","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","contract_id","error","error","error_message","txid","contract_id","contract","contract","contract_id","error","lightning_error","Backup","BackupPayload","Balance","BalancePayload","ConnectFedPayload","ConnectFederation","DepositAddress","DepositAddressPayload","FederationInfo","GatewayInfo","GatewayRequest","GatewayRequestInner","GatewayRequestTrait","Info","InfoPayload","PayInvoice","Response","Restore","RestorePayload","Shutdown","Withdraw","WithdrawPayload","address","amount","balance_msat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","federation_id","federation_id","federation_id","federation_id","federation_id","federation_id","federations","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","gateway_id","handle","impl_gateway_request_trait","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invite_code","lightning_alias","lightning_pub_key","request","route_hints","rpc_client","rpc_server","sender","serde_hex_deserialize","serde_hex_serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadStatus","Error","GatewayRpcClient","GatewayRpcError","GatewayRpcResult","RequestError","Response","backup","base_url","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","call","chunk","client","connect_federation","content_length","error_for_status","error_for_status_ref","extensions","extensions_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_balance","get_deposit_address","get_info","headers","headers_mut","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_body","is_builder","is_connect","is_decode","is_redirect","is_request","is_status","is_timeout","json","new","password","provide","provide","remote_addr","res","restore","source","source","status","status","text","text_with_charset","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upgrade","url","url","url","url_mut","version","vzip","vzip","vzip","vzip","with_password","with_url","withdraw","without_url","address","backup","balance","connect_fed","info","pay_invoice","restore","run_webserver","withdraw","retry"],"q":[[0,"ln_gateway"],[172,"ln_gateway::LightningMode"],[176,"ln_gateway::client"],[200,"ln_gateway::db"],[349,"ln_gateway::gateway_lnrpc"],[552,"ln_gateway::gateway_lnrpc::gateway_lightning_client"],[582,"ln_gateway::gateway_lnrpc::gateway_lightning_server"],[641,"ln_gateway::gateway_lnrpc::get_route_hints_response"],[691,"ln_gateway::gateway_lnrpc::intercept_htlc_response"],[776,"ln_gateway::lnd"],[805,"ln_gateway::lnrpc_client"],[871,"ln_gateway::lnrpc_client::LightningRpcError"],[878,"ln_gateway::ng"],[1158,"ln_gateway::ng::GatewayExtPayStates"],[1165,"ln_gateway::ng::GatewayExtReceiveStates"],[1170,"ln_gateway::ng::complete"],[1371,"ln_gateway::ng::pay"],[1647,"ln_gateway::ng::pay::GatewayPayStates"],[1652,"ln_gateway::ng::pay::OutgoingContractError"],[1653,"ln_gateway::ng::pay::OutgoingPaymentError"],[1658,"ln_gateway::rpc"],[1881,"ln_gateway::rpc::rpc_client"],[1987,"ln_gateway::rpc::rpc_server"],[1996,"ln_gateway::utils"]],"d":["","","","","","","","How long a gateway announcement stays valid","","","","","LND HTLC interceptor can’t handle SCID of 0, so start …","","","","","","","","","","","","Public URL from which the webserver API is reachable","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to folder containing gateway config and data files","","","","","Configured gateway routing fees Format: &lt;base_msat&gt;,&lt;…","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Gateway webserver listen address","","","","","","","","","","Number of route hints to return in invoices","","","Gateway webserver authentication password","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map <code>gateway_lnrpc</code> protobuf types to rust types","","","","","","","","","","","","","","LND macaroon file path","LND RPC address","LND TLS cert file path","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The alias of the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>GetRouteHintsResponse</code>.","The index of the incoming htlc in the incoming channel","The index of the incoming htlc in the incoming channel","The incoming HTLC amount in millisatoshi. This amount …","The id of the incoming channel","The id of the incoming channel","The incoming HTLC expiry Determines block height when the …","Nested message and enum types in <code>InterceptHtlcResponse</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The outgoing HTLC amount in millisatoshi This is the …","","The HTLC payment hash. Value is not guaranteed to be …","The preimage of the invoice","The public key of the associated lightning node","The route hints to the associated lightning node","The short channel id of the HTLC. Use this value to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GatewayLightning is a service that provides limited access …","Enable decompressing responses.","","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","GetNodeInfo returns the public key and alias of the …","GetRouteHints returns the route hints to the associated …","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","PayInvoice attempts to pay an invoice using the associated …","RouteHtlcs opens a bi-directional stream for the client to …","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","GatewayLightning is a service that provides limited access …","Server streaming response type for the RouteHtlcs method.","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","GetNodeInfo returns the public key and alias of the …","GetRouteHints returns the route hints to the associated …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","PayInvoice attempts to pay an invoice using the associated …","","","","RouteHtlcs opens a bi-directional stream for the client to …","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Flat routing fee in millisatoshis.","","","","","","","","","","","The difference in CLTV values between this node and the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Hops that make up a route hint to the associated lightning …","Returns the value of <code>htlc_maximum_msat</code>, or the default …","The maximum value in msat available for routing with a …","Returns the value of <code>htlc_minimum_msat</code>, or the default …","The minimum value, in msat, which must be relayed to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Liquidity-based routing fee in millionths of a routed …","The short_channel_id of this channel.","The node_id of the non-target end of the route.","","","","","","","","","","","","","Request to complete an intercepted HTLC with failure …","","Request to just forward the HTLC without failing or …","","Request to complete an intercepted HTLC with success …","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","","","","Returns the encoded length of the message without a length …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Decodes an instance of the message from a buffer, and …","The preimage for settling an intercepted HTLC","The reason for the cancellation of an intercepted HTLC","","","","","","","","","","","","","","","","","","","","","","","","LND client","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An <code>ILnRpcClient</code> that wraps around <code>GatewayLightningClient</code> …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the public key and alias of the lightning node","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Attempt to pay an invoice using the lightning node","","","","","Get route hints to the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The high-level state of a reissue operation started with …","The high-level state of an intercepted HTLC operation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Attempt fulfill HTLC by buying preimage from the federation","Pay lightning invoice on behalf of federation user","Subscribe to update to lightning payment","Subscribe to updates when the gateway is handling an …","","","The index of the incoming htlc in the incoming channel","The incoming HTLC amount in millisatoshi.","The id of the incoming channel","The incoming HTLC expiry","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The outgoing HTLC amount in millisatoshi","","","","The HTLC payment hash.","","","","Register gateway with federation","","","","","","","","The short channel id of the HTLC.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that completes the incoming payment by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","State machine that executes the Lightning payment on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about one of the feds we are connected to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unique identifier of the fed","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Errors that may occur when processing a <code>Request</code>.","","","","","A Response to a submitted <code>Request</code>.","","","","","","","","","","","Get the full response body as <code>Bytes</code>.","","Stream a chunk of the response body.","","","Get the content-length of this response, if known.","Turn a response into an error if the server returned an …","Turn a reference to a response into an error if the server …","Returns a reference to the associated extensions.","Returns a mutable reference to the associated extensions.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Get the <code>Headers</code> of this <code>Response</code>.","Get a mutable reference to the <code>Headers</code> of this <code>Response</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the error is related to the request or …","Returns true if the error is from a type Builder.","Returns true if the error is related to connect","Returns true if the error is related to decoding the …","Returns true if the error is from a <code>RedirectPolicy</code>.","Returns true if the error is related to the request","Returns true if the error is from …","Returns true if the error is related to a timeout.","Try to deserialize the response body as JSON.","","","","","Get the remote address used to get this <code>Response</code>.","","","","","Returns the status code, if the error was generated from a …","Get the <code>StatusCode</code> of this <code>Response</code>.","Get the full response text.","Get the full response text given a specific encoding.","","","","","","","","","","","","","","","Consumes the response and returns a future for a possible …","Returns a possible URL related to this error.","Get the final <code>Url</code> of this <code>Response</code>.","","Returns a mutable reference to the URL related to this …","Get the HTTP <code>Version</code> of this <code>Response</code>.","","","","","","Add a url related to this error (overwriting any existing)","","Strip the related url from this error (if, for example, it …","Generate deposit address","Backup a gateway actor state","Display gateway ecash note balance","Connect a new federation","Display high-level information about the Gateway","","","","Withdraw from a gateway federation.","Run the supplied closure <code>op_fn</code> up to <code>max_attempts</code> times. …"],"i":[18,2,0,0,0,18,18,0,0,0,0,0,0,18,0,18,2,18,0,0,0,18,3,56,24,24,24,2,2,56,24,2,18,3,56,24,2,18,3,3,0,3,3,2,3,2,3,24,24,56,56,24,0,2,2,56,24,3,3,3,3,2,18,18,56,24,2,18,18,18,18,18,3,24,2,24,2,2,3,3,0,3,3,24,3,3,3,3,3,3,3,3,3,2,56,24,2,18,3,56,56,24,24,2,2,18,18,3,3,18,3,56,3,56,24,0,3,0,3,24,56,3,0,56,24,3,56,24,18,3,3,56,3,0,56,3,3,2,18,56,3,2,3,18,56,24,2,18,3,56,24,2,18,3,56,24,2,18,3,0,24,2,24,2,0,56,24,2,18,3,56,56,239,240,240,240,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,77,0,0,77,0,0,77,77,78,85,71,79,80,77,78,85,71,79,80,77,78,71,79,80,77,78,71,79,80,78,71,78,85,71,79,80,78,85,71,79,80,78,85,71,79,80,78,71,79,80,78,78,71,71,79,79,80,80,71,77,78,85,71,79,80,77,78,85,71,79,80,78,78,85,71,79,79,80,80,77,78,71,79,80,78,79,78,79,77,78,85,71,79,80,77,77,78,78,85,85,71,71,79,79,80,80,71,78,71,78,78,85,85,71,79,79,80,80,77,78,71,79,80,77,78,85,71,79,80,77,78,85,71,79,80,77,78,85,71,79,80,77,78,85,71,79,80,0,0,0,0,0,0,0,0,0,103,99,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,0,0,0,102,103,102,102,103,102,0,96,97,98,99,100,101,102,103,104,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,100,100,100,98,102,100,102,101,99,104,102,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,96,97,98,99,100,101,102,103,104,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,124,0,125,125,127,125,127,125,125,125,125,127,125,127,125,124,127,125,127,125,125,127,125,124,124,125,127,125,125,125,127,127,125,125,125,125,125,125,125,124,125,125,125,124,125,125,127,125,127,125,127,125,127,125,127,125,125,0,0,134,134,135,134,135,134,135,134,135,134,135,134,134,135,134,135,134,135,134,135,134,135,134,135,135,134,134,134,134,134,135,134,134,135,135,134,134,134,134,135,134,135,134,135,134,135,134,135,0,0,139,0,139,0,139,136,137,138,139,136,137,138,139,136,137,138,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,136,137,137,138,138,139,139,139,136,137,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,136,137,138,139,0,0,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,20,20,20,20,20,20,20,20,0,0,0,0,0,20,152,20,152,20,20,4,152,152,152,20,20,20,20,20,20,20,20,20,20,152,20,152,20,20,4,152,20,152,20,20,152,152,152,4,152,20,4,152,4,152,20,20,20,20,20,152,20,152,20,152,20,152,241,242,243,244,245,246,247,162,168,162,162,163,163,0,0,0,0,0,0,0,0,0,0,0,162,164,168,162,163,164,168,0,163,163,169,162,172,168,165,172,172,162,163,164,165,166,172,168,169,170,162,163,164,165,166,172,168,169,170,172,162,163,164,165,166,168,168,169,170,162,163,164,165,166,168,169,170,0,168,169,170,168,169,170,168,169,170,172,172,172,172,172,165,165,172,162,163,164,169,162,163,168,169,170,162,162,163,163,168,168,169,169,170,170,168,162,163,164,169,165,172,162,163,164,165,166,172,168,169,169,170,162,163,164,165,166,172,168,169,170,168,169,170,162,163,164,165,166,168,169,170,248,248,248,248,172,172,170,170,170,170,165,165,172,172,162,163,164,165,166,172,168,169,170,168,162,162,163,163,164,164,165,165,166,166,172,172,168,168,169,169,170,170,166,165,166,172,165,172,172,165,165,165,172,166,172,168,168,170,172,172,0,170,169,166,172,248,172,172,166,162,163,164,169,170,172,165,165,172,172,165,166,172,168,169,170,165,172,162,163,164,165,166,168,169,170,169,168,168,162,163,164,165,166,172,168,169,170,170,162,163,164,165,166,172,168,169,170,162,163,164,165,166,172,168,169,170,162,163,164,165,166,172,168,169,170,172,249,250,251,251,252,253,252,254,255,256,255,254,195,0,0,194,195,193,0,0,0,195,0,194,193,195,0,196,198,197,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,195,192,196,196,197,193,198,194,195,192,196,197,193,198,196,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,194,195,192,196,197,193,198,194,194,195,195,192,192,196,196,197,197,193,193,198,198,196,194,194,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,195,192,196,197,193,198,192,192,194,195,192,196,197,193,198,194,194,195,195,192,192,196,196,197,197,193,193,198,198,196,196,192,198,194,194,196,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,197,198,196,196,197,198,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,195,192,196,197,193,198,194,195,192,196,197,193,198,201,201,204,201,201,0,0,0,0,0,0,204,21,204,204,21,204,204,201,21,0,0,201,0,201,204,204,203,205,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,205,201,202,203,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,203,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,206,207,205,204,21,199,201,202,203,204,21,205,199,206,207,201,201,202,202,203,203,204,204,21,21,205,205,199,199,206,206,207,207,203,204,21,199,207,201,202,203,204,204,21,21,205,199,206,207,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,201,201,202,202,203,203,204,204,21,21,205,205,199,199,206,206,207,207,199,199,199,203,203,202,206,204,21,204,21,199,203,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,204,21,205,207,206,203,203,205,206,207,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,201,202,203,204,21,205,199,206,207,205,201,202,203,204,21,205,199,206,207,257,257,258,258,257,259,260,261,262,261,260,210,0,210,0,0,210,210,0,0,0,0,0,0,210,0,210,211,210,0,210,210,0,49,49,36,35,37,32,48,33,30,49,36,38,210,212,35,37,32,48,33,30,49,36,38,210,212,35,33,30,49,36,35,33,30,49,36,35,37,32,48,33,30,49,36,38,35,37,32,48,33,30,49,36,38,32,48,33,30,49,36,38,38,35,37,32,48,33,30,49,36,38,210,212,35,37,32,48,33,30,49,36,38,210,212,35,33,30,49,36,38,212,0,35,37,32,48,33,30,49,36,38,210,212,35,35,37,37,32,32,48,48,33,33,30,30,49,49,36,36,38,38,210,210,212,212,35,38,38,212,38,0,0,212,0,0,35,37,32,48,33,30,49,36,38,211,35,37,32,48,33,30,49,35,33,30,49,36,35,37,32,48,33,30,49,36,38,210,212,35,37,32,48,33,30,49,36,38,210,212,35,37,32,48,33,30,49,36,38,210,212,38,35,37,32,48,33,30,49,36,38,210,212,222,0,0,0,0,222,0,217,217,223,217,219,222,223,217,219,222,219,217,219,217,217,219,219,219,219,219,223,223,219,222,222,223,217,219,219,222,222,217,217,217,219,219,223,223,217,219,222,223,223,217,217,219,219,222,222,223,223,223,223,223,223,223,223,219,217,217,223,222,219,219,217,223,222,223,219,219,219,223,222,223,217,219,222,223,217,219,222,223,217,219,222,219,223,219,219,223,219,223,217,219,222,217,223,217,223,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[2,2],[3,3],[[]],[[]],[[],1],[[],1],[2,[[5,[4]]]],0,0,0,[6,[[7,[2]]]],[8,[[7,[9,10]]]],0,0,0,[[[11,[4]]],12],[[[11,[4]],13],[[12,[[15,[14]]]]]],[[4,13],[[12,[[15,[14]]]]]],[[2,16],17],[[18,16],17],[[18,16],17],[[]],[[]],[[]],[19,18],[[]],[20,18],[[[5,[21]]],18],[22,18],[[]],[23,[[7,[24,25]]]],[23,[[7,[2,25]]]],[23,[[7,[24,25]]]],[23,[[7,[2,25]]]],[[]],[[]],0,0,0,[26,27],[[],[[29,[28]]]],[[3,30],[[12,[31]]]],[[3,32],12],[[3,33],[[12,[34]]]],[[3,35],[[12,[36]]]],[[3,37],[[12,[38]]]],[[39,[11,[4]],40,[11,[[44,[[43,[41,42]]]]]],[11,[[44,[[43,[42,45]]]]]]]],[[3,46],[[12,[47]]]],[[3,48],12],[[3,49],[[12,[50]]]],[51,52],[[]],[[]],[[]],[[]],[[]],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],54],[[],53],[18,55],0,0,0,0,0,0,0,0,[3,12],0,[[],[[57,[56]]]],[[[11,[4]],58,59,26,60,[11,[[44,[[43,[42,45]]]]]],[11,[[44,[[43,[41,42]]]]]],61,13],[[12,[3]]]],0,0,0,0,0,0,[62],[[3,45,42,41,[15,[14]]],12],[3],0,[[3,42],[[12,[45]]]],0,[56,57],0,[[3,42],[[12,[45]]]],[[2,63],7],[18,[[29,[64]]]],[[56,61,58,26],[[12,[65]]]],0,[[]],[[]],[[],66],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],0,[[24,23],[[7,[25]]]],[[2,23],[[7,[25]]]],[[24,23],[[7,[25]]]],[[2,23],[[7,[25]]]],0,[[]],[[]],[[]],[[]],[[]],[56,56],[[56,[0,[68,69,70]]],56],0,0,0,0,0,[[]],[[]],[[58,71,27,[11,[4]],[29,[45]]],[[12,[45]]]],[58,58],[[]],[[58,72,41,59],[[12,[71]]]],[[58,16],17],[[]],[[]],[[]],[[],53],[[],54],[[58,73],[[12,[[15,[71]]]]]],[[74,75,76],58],0,0,[[58,71,73],12],[[]],[[],7],[[],7],[[],67],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[78,78],[71,71],[79,79],[80,80],[[]],[[]],[[]],[[]],[[]],[[78,78],81],0,[[82,83],[[7,[78,84]]]],[[82,83],[[7,[85,84]]]],[[82,83],[[7,[71,84]]]],[[82,83],[[7,[79,84]]]],[[82,83],[[7,[80,84]]]],[[78,86],[[7,[13,87]]]],[[85,86],[[7,[13,87]]]],[[71,86],[[7,[13,87]]]],[[79,86],[[7,[13,87]]]],[[80,86],[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[[78,78],52],[[71,71],52],[[79,79],52],[[80,80],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],0,[[77,16],17],[[78,16],17],[[85,16],17],[[71,16],17],[[79,16],17],[[80,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[]],[[]],[[]],[[]],[[]],[[78,94]],[[79,94]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],54],[[],53],[[],54],[[],53],0,[[78,78],[[29,[81]]]],0,[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96],[97],[98],[99],[100],[101],[102],[103],[104],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[[],102],[[],103],[[],104],[96,13],[97,13],[98,13],[99,13],[100,13],[101,13],[102,13],[103,13],[104,13],[[96,96],52],[[97,97],52],[[98,98],52],[[99,99],52],[[100,100],52],[[101,101],52],[[102,102],52],[[103,103],52],[[104,104],52],[[96,16],17],[[97,16],17],[[98,16],17],[[99,16],17],[[100,16],17],[[101,16],17],[[102,16],17],[[103,16],17],[[104,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],53],[[],54],[[],53],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[107,[[106,[105]]]],108],[[107,[[106,[105]]]]]],[[]],[[]],[[[107,[109]]],[[107,[109]]]],[[]],[[[107,[[106,[105]]]],[110,[103]]],[[7,[[111,[97]],112]]]],[[[114,[113]]],[[7,[[107,[115]],116]]]],[[[107,[117]],16],17],[[]],[[]],[[[107,[[106,[105]]]],[110,[96]]],[[7,[[111,[99]],112]]]],[[[107,[[106,[105]]]],[110,[98]]],[[7,[[111,[104]],112]]]],0,[[]],[[],54],[[],53],[[[107,[[106,[105]]]],13],[[107,[[106,[105]]]]]],[[[107,[[106,[105]]]],13],[[107,[[106,[105]]]]]],[[[106,[105]]],[[107,[[106,[105]]]]]],[[[107,[[106,[105]]]],[110,[100]]],[[7,[[111,[101]],112]]]],[[[107,[[106,[105]]]],[110,[96]]],[[7,[[111,[[118,[102]]]],112]]]],[[[107,[[106,[105]]]],108],[[107,[[106,[105]]]]]],[[]],[[],7],[[],7],[[],67],[[]],[[[120,[[119,[105]]]],[106,[105]],121],[[107,[[122,[[120,[[119,[105]]]],[106,[105]],121]]]]]],[[[106,[105]],123],[[107,[[106,[105]]]]]],0,0,0,0,[[[125,[124]],108],[[125,[124]]]],0,[[]],[[]],[[]],[[]],[[[125,[124]],[119,[[0,[126,69]]]]]],[119],[119],[[[127,[124]]],[[127,[124]]]],[[[125,[124]]],[[125,[124]]]],[[]],[[]],[[[53,[103]]],[[129,[[5,[128]]]]]],[[[127,[117]],16],17],[[[125,[[0,[117,124]]]],16],17],[[]],[[]],[[[11,[124]]],[[125,[124]]]],[[]],[[]],[[[53,[96]]],[[129,[[5,[128]]]]]],[[[53,[98]]],[[129,[[5,[128]]]]]],0,[[]],[[]],[[],130],[[],131],[[],54],[[],53],[[],54],[[],53],[[[125,[124]],13],[[125,[124]]]],0,[[[125,[124]],13],[[125,[124]]]],0,[124,[[125,[124]]]],[[[53,[100]]],[[129,[[5,[128]]]]]],[132,[[133,[7]]]],[132,[[133,[7]]]],[[[125,[124]],132],[[133,[7]]]],[[[53,[96]]],[[129,[[5,[128]]]]]],[[[125,[124]],108],[[125,[124]]]],0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[]],[[]],[[124,121],[[122,[[125,[124]],121]]]],0,0,0,[[]],[[]],[[]],[[]],[134],[135],[134,134],[135,135],[[]],[[]],0,[[],134],[[],135],[134,13],[135,13],[[134,134],52],[[135,135],52],[[134,16],17],[[135,16],17],[[]],[[]],[[]],[[]],0,[134,41],0,[134,41],0,[[]],[[]],[[],53],[[],54],[[],54],[[],53],0,0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136],[137],[138],[136,136],[137,137],[138,138],[139,139],[[]],[[]],[[]],[[]],[[],136],[[],137],[[],138],[[139,140]],[136,13],[137,13],[138,13],[139,13],[[136,136],52],[[137,137],52],[[138,138],52],[[139,139],52],[[136,16],17],[[137,16],17],[[138,16],17],[[139,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[[29,[139]],141,142,143,144],[[7,[145]]]],0,0,[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[146,[148,[147]]],[[7,[20]]]],[[149,103],[[129,[[5,[128]]]]]],[[66,66,66],[[7,[150,20]]]],[[149,16],17],[[]],[149,[[129,[[5,[128]]]]]],[[]],[[],53],[[],54],0,[[149,[15,[88]],150],[[7,[[29,[66]],20]]]],0,[[66,66,66,[29,[[148,[147]]]]],149],[[149,100],[[129,[[5,[128]]]]]],[[[5,[149]],61],[[129,[[5,[128]]]]]],[[149,13],[[129,[[5,[128]]]]]],[[[148,[147]],147],[[7,[20]]]],[[149,61,[148,[147]],[151,[147]],[148,[[7,[102,112]]]]],[[7,[20]]]],0,[[],7],[[],7],[[],67],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[20,20],[[]],[103,[[129,[[5,[128]]]]]],[[152,103],[[129,[[5,[128]]]]]],[60,[[7,[[107,[115]],20]]]],0,[[82,83],[[7,[20,84]]]],[[20,86],[[7,[13,87]]]],[86,[[7,[13,87]]]],[6,[[7,[20]]]],[[20,20],52],[[],52],[[],52],[8,[[7,[9,10]]]],[[20,16],17],[[20,16],17],[[152,16],17],[[]],[[]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[]],[[],[[129,[[5,[128]]]]]],[152,[[129,[[5,[128]]]]]],[[]],[[]],[[],54],[[],53],[[],53],[[],54],[60,152],[100,[[129,[[5,[128]]]]]],[[152,100],[[129,[[5,[128]]]]]],[62],[[5,61],[[129,[[5,[128]]]]]],[[[5,[152]],61],[[129,[[5,[128]]]]]],[13,[[129,[[5,[128]]]]]],[[152,13],[[129,[[5,[128]]]]]],[[20,63],7],[[],[[15,[88,95]]]],[[]],[[],66],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],153],[[],153],[[],154],[[155,156],[[129,[[5,[128,95]]]]]],[[[158,[157]],[160,[159]],161,157],[[129,[[5,[128,95]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[162,162],[163,163],[164,164],[165,165],[166,166],[157,167],[168,168],[169,169],[170,170],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[82,83],[[7,[168,84]]]],[[82,83],[[7,[169,84]]]],[[82,83],[[7,[170,84]]]],[[168,86],[[7,[13,87]]]],[[169,86],[[7,[13,87]]]],[[170,86],[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[157,171],[172],[[157,73,155,34],[[129,[[5,[128,95]]]]]],[[172,170],[[7,[173]]]],[[157,73,155,34],[[129,[[5,[128,95]]]]]],[[],90],[[],90],[[],90],[6,[[7,[162]]]],[6,[[7,[163]]]],[6,[[7,[164]]]],[6,[[7,[169]]]],[[162,162],52],[[163,163],52],[[168,168],52],[[169,169],52],[[170,170],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[167,52],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],0,0,[[162,16],17],[[163,16],17],[[164,16],17],[[165,16],17],[[166,16],17],[[172,16],17],[[168,16],17],[[169,16],17],[[169,16],17],[[170,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,[[129,[[5,[128]]]]]],[174,[[129,[[5,[128]]]]]],[155,[[129,[[5,[128]]]]]],[155,[[129,[[5,[128]]]]]],[[157,73],[[129,[[5,[128,95]]]]]],[[45,[89,[175]]],[[129,[[5,[128,95]]]]]],0,0,0,0,[[165,42,176,26,177,178,[179,[159]],161,180],[[129,[[5,[128]]]]]],[[42,181,26,157,177,178,[182,[159]],161],[[129,[[5,[128,95]]]]]],[172,183],[184,183],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[168,76]],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],0,0,0,0,0,0,0,[[],185],[[],185],0,0,0,0,[168,155],[[],155],0,[186,183],[172,183],0,0,[62],0,0,[[60,[15,[14]],187,27],[[129,[[5,[128]]]]]],[[172,73,42,188],57],[[73,157,[160,[159]],161,[29,[[89,[88]]]]],[[129,[[5,[128,95]]]]]],0,[[162,63],7],[[163,63],7],[[164,63],7],[[169,63],7],0,[[],[[129,[[5,[128,95]]]]]],[165,189],[[],189],[[],52],[[],52],0,0,0,[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],190],[[172,[15,[14]],187,60,27],188],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[171,[[15,[[191,[167]],95]]]],[168,[[15,[[191,[168]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[102,[[7,[170]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[158,[157]],157,[160,[159]]],[[129,[[5,[128,95]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],153],[[166,192,193],[[7,[194]]]],[[166,192],[[7,[47,194]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[194,194],[195,195],[192,192],[157,167],[196,196],[197,197],[193,193],[198,198],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[82,83],[[7,[194,84]]]],[[82,83],[[7,[195,84]]]],[[82,83],[[7,[192,84]]]],[[82,83],[[7,[196,84]]]],[[82,83],[[7,[197,84]]]],[[82,83],[[7,[193,84]]]],[[82,83],[[7,[198,84]]]],[[194,86],[[7,[13,87]]]],[[195,86],[[7,[13,87]]]],[[192,86],[[7,[13,87]]]],[[196,86],[[7,[13,87]]]],[[197,86],[[7,[13,87]]]],[[193,86],[[7,[13,87]]]],[[198,86],[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[6,[[7,[194]]]],[[194,194],52],[[195,195],52],[[192,192],52],[[196,196],52],[[197,197],52],[[193,193],52],[[198,198],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[167,52],[8,[[7,[9,10]]]],[[194,16],17],[[194,16],17],[[195,16],17],[[192,16],17],[[196,16],17],[[197,16],17],[[193,16],17],[[198,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],155],[196,155],0,0,[62],[[194,63],7],0,[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[[7,[47,194]],192],196],[[[7,[194]],192],196],[196,[[15,[[191,[196]]]]]],[171,[[15,[[191,[167]],95]]]],[[197,166,192],[[15,[[191,[196]]]]]],[[198,166,192],[[15,[[191,[196]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],153],[[159,174,166],[[7,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[166,199,200],[[7,[47,21]]]],[201,201],[202,202],[203,203],[157,167],[204,204],[21,21],[205,205],[199,199],[206,206],[207,207],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[82,83],[[7,[201,84]]]],[[82,83],[[7,[202,84]]]],[[82,83],[[7,[203,84]]]],[[82,83],[[7,[204,84]]]],[[82,83],[[7,[21,84]]]],[[82,83],[[7,[205,84]]]],[[82,83],[[7,[199,84]]]],[[82,83],[[7,[206,84]]]],[[82,83],[[7,[207,84]]]],[[201,86],[[7,[13,87]]]],[[202,86],[[7,[13,87]]]],[[203,86],[[7,[13,87]]]],[[204,86],[[7,[13,87]]]],[[21,86],[[7,[13,87]]]],[[205,86],[[7,[13,87]]]],[[199,86],[[7,[13,87]]]],[[206,86],[[7,[13,87]]]],[[207,86],[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],[86,[[7,[13,87]]]],0,0,0,[6,[[7,[204]]]],[6,[[7,[21]]]],[6,[[7,[199]]]],[[201,201],52],[[202,202],52],[[203,203],52],[[204,204],52],[[21,21],52],[[205,205],52],[[199,199],52],[[206,206],52],[[207,207],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[167,52],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],0,[[201,16],17],[[202,16],17],[[203,16],17],[[204,16],17],[[204,16],17],[[21,16],17],[[21,16],17],[[205,16],17],[[199,16],17],[[206,16],17],[[207,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[[89,[88]],[92,[90,91]]],[[7,[93]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[[],54],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],54],[[],53],0,0,0,[[],155],[203,155],0,0,[62],[62],[[204,63],7],[[21,63],7],[[199,63],7],0,[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[],[[15,[88,95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],66],[[166,[7,[21]],202],203],[[208,200,159,166,202,21],203],[[208,159,166,202,200,47],203],[171,[[15,[[191,[167]],95]]]],[203,[[15,[[191,[203]]]]]],[[205,159,166,202],[[15,[[191,[203]]]]]],[[206,159,166,202],[[15,[[191,[203]]]]]],[[207,159,166,202],[[15,[[191,[203]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[200,209,41,41],[[7,[199,204]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[33,33],[30,30],[49,49],[36,36],[[]],[[]],[[]],[[]],[[]],[6,[[7,[35]]]],[6,[[7,[37]]]],[6,[[7,[32]]]],[6,[[7,[48]]]],[6,[[7,[33]]]],[6,[[7,[30]]]],[6,[[7,[49]]]],[6,[[7,[36]]]],[6,[[7,[38]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],[8,[[7,[9,10]]]],0,0,0,0,0,0,0,0,[[35,16],17],[[37,16],17],[[32,16],17],[[48,16],17],[[33,16],17],[[30,16],17],[[49,16],17],[[36,16],17],[[38,16],17],[[210,16],17],[[[212,[[0,[117,211]]]],16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[212,[211]],3,61,213]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],53],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],54],[[],53],0,0,0,0,0,0,0,0,[6,[[7,[214]]]],[[215,63],7],[[35,63],7],[[37,63],7],[[32,63],7],[[48,63],7],[[33,63],7],[[30,63],7],[[49,63],7],[[36,63],7],[[38,63],7],[[[216,[12]]],210],[[35,[216,[12]]],210],[[37,[216,[12]]],210],[[32,[216,[12]]],210],[[48,[216,[12]]],210],[[33,[216,[12]]],210],[[30,[216,[12]]],210],[[49,[216,[12]]],210],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[217,32],218],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[219,128],[[217,60,220],[[7,[221,222]]]],[219,128],0,[[217,35],[[218,[36]]]],[219,[[29,[41]]]],[219,[[7,[219,223]]]],[219,[[7,[219,223]]]],[219,224],[219,224],[[223,16],[[7,[225]]]],[[223,16],[[7,[225]]]],[[219,16],[[7,[225]]]],[[222,16],17],[[222,16],17],[[]],[[]],[[]],[[[228,[[227,[226]]]]],219],[223,222],[[]],[[217,33],[[218,[34]]]],[[217,30],[[218,[31]]]],[217,[[218,[38]]]],[219,[[230,[229]]]],[219,[[230,[229]]]],0,[[]],[[]],[[]],[[]],[[],54],[[],53],[[],53],[[],54],[[],53],[[],54],[[],53],[[],54],[223,52],[223,52],[223,52],[223,52],[223,52],[223,52],[223,52],[223,52],[219,128],[[60,66],217],0,[62],[62],[219,[[29,[231]]]],0,[[217,48],218],[223,[[29,[64]]]],[222,[[29,[64]]]],[223,[[29,[232]]]],[219,232],[219,128],[[219,51],128],[[],66],[[],66],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],67],[[],67],[[],67],[[],67],[219,128],[223,[[29,[60]]]],[219,60],0,[223,[[29,[60]]]],[219,233],[[]],[[]],[[]],[[]],[[217,66],217],[[223,60],223],[[217,49],[[218,[234]]]],[223,223],[[[235,[3]],[236,[30]]],[[7,[237,18]]]],[[[235,[3]],[236,[32]]],[[7,[237,18]]]],[[[235,[3]],[236,[33]]],[[7,[237,18]]]],[[[235,[3]],[236,[35]]],[[7,[237,18]]]],[[[235,[3]],[236,[37]]],[[7,[237,18]]]],[[[235,[3]],[236,[46]]],[[7,[237,18]]]],[[[235,[3]],[236,[48]]],[[7,[237,18]]]],[[66,231,3],[[238,[61]]]],[[[235,[3]],[236,[49]]],[[7,[237,18]]]],[[66,213,187,141],[[7,[19]]]]],"c":[],"p":[[3,"Command"],[4,"LightningMode"],[3,"Gateway"],[8,"ILnRpcClient"],[3,"Box"],[8,"Deserializer"],[4,"Result"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Arc"],[6,"Result"],[15,"usize"],[3,"RouteHint"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[4,"GatewayError"],[3,"Error"],[4,"LightningRpcError"],[4,"OutgoingPaymentError"],[3,"FederationError"],[3,"ArgMatches"],[3,"GatewayOpts"],[6,"Error"],[3,"Database"],[3,"PublicKey"],[3,"Id"],[4,"Option"],[3,"DepositAddressPayload"],[3,"Address"],[3,"BackupPayload"],[3,"BalancePayload"],[3,"Amount"],[3,"ConnectFedPayload"],[3,"FederationInfo"],[3,"InfoPayload"],[3,"GatewayInfo"],[6,"RouteHtlcStream"],[3,"TaskHandle"],[15,"u64"],[3,"FederationId"],[3,"BTreeMap"],[3,"RwLock"],[3,"Client"],[3,"PayInvoicePayload"],[3,"Preimage"],[3,"RestorePayload"],[3,"WithdrawPayload"],[3,"Txid"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Request"],[6,"Response"],[3,"Gatewayd"],[6,"Result"],[3,"StandardGatewayClientBuilder"],[3,"RoutingFees"],[3,"Url"],[3,"TaskGroup"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[3,"TaskShutdownToken"],[3,"String"],[3,"TypeId"],[8,"ClientModuleInit"],[8,"Send"],[8,"Sync"],[3,"FederationConfig"],[3,"InviteCode"],[3,"DatabaseTransaction"],[3,"PathBuf"],[6,"ClientModuleInitRegistry"],[6,"ModuleInstanceId"],[4,"DbKeyPrefix"],[3,"FederationIdKey"],[3,"FederationRegistrationKey"],[3,"GatewayPublicKey"],[4,"Ordering"],[8,"Read"],[6,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"FederationIdKeyPrefix"],[8,"Write"],[3,"Error"],[15,"u8"],[15,"slice"],[3,"Decoder"],[4,"DecodingMode"],[3,"ModuleRegistry"],[4,"DecodingError"],[8,"Hasher"],[3,"Global"],[3,"EmptyRequest"],[3,"EmptyResponse"],[3,"GetRouteHintsRequest"],[3,"GetNodeInfoResponse"],[3,"PayInvoiceRequest"],[3,"PayInvoiceResponse"],[3,"InterceptHtlcRequest"],[3,"InterceptHtlcResponse"],[3,"GetRouteHintsResponse"],[6,"BoxBody"],[8,"GrpcService"],[3,"GatewayLightningClient"],[4,"CompressionEncoding"],[8,"Clone"],[8,"IntoRequest"],[3,"Response"],[3,"Status"],[3,"Endpoint"],[8,"TryInto"],[3,"Channel"],[3,"Error"],[8,"Debug"],[3,"Streaming"],[3,"Request"],[8,"Service"],[8,"Interceptor"],[3,"InterceptedService"],[3,"Uri"],[8,"GatewayLightning"],[3,"GatewayLightningServer"],[8,"Body"],[3,"_Inner"],[8,"Future"],[3,"Pin"],[3,"IntoMakeService"],[3,"IntoMakeServiceWithConnectInfo"],[3,"Context"],[4,"Poll"],[3,"RouteHintHop"],[3,"RouteHint"],[3,"Settle"],[3,"Cancel"],[3,"Forward"],[4,"Action"],[8,"BufMut"],[15,"u32"],[4,"WireType"],[8,"Buf"],[3,"DecodeContext"],[3,"DecodeError"],[3,"CircuitKey"],[3,"ForwardHtlcInterceptResponse"],[3,"Sender"],[3,"GatewayLndClient"],[3,"Client"],[3,"Receiver"],[3,"NetworkLnRpcClient"],[8,"Any"],[8,"IDynCommonModuleInit"],[3,"OperationId"],[3,"OutPoint"],[15,"u16"],[3,"ModuleDatabaseTransaction"],[3,"DynGlobalClientContext"],[3,"Executor"],[3,"DynGlobalApi"],[4,"GatewayExtPayStates"],[4,"GatewayExtReceiveStates"],[4,"GatewayMeta"],[3,"GatewayClientGen"],[3,"GatewayClientContext"],[3,"DynState"],[4,"GatewayClientStateMachines"],[4,"ReceiveError"],[3,"Htlc"],[3,"DynContext"],[3,"GatewayClientModule"],[4,"IncomingSmError"],[3,"ContractId"],[3,"OsString"],[3,"LightningClientConfig"],[3,"ApiVersion"],[3,"DerivableSecret"],[3,"ModuleNotifier"],[3,"DynModuleApi"],[3,"ClientModuleConfig"],[3,"Notifier"],[3,"TransactionItemAmount"],[3,"DynInput"],[3,"ModuleKind"],[3,"DynOutput"],[3,"Duration"],[3,"LightningGateway"],[3,"MultiApiVersion"],[3,"DynCommonModuleInit"],[3,"StateTransition"],[3,"GatewayCompleteCommon"],[4,"HtlcOutcome"],[4,"CompleteHtlcError"],[4,"GatewayCompleteStates"],[3,"GatewayCompleteStateMachine"],[3,"WaitForPreimageState"],[3,"CompleteHtlcState"],[3,"PaymentParameters"],[3,"OutgoingContractAccount"],[4,"GatewayPayStates"],[3,"GatewayPayCommon"],[3,"GatewayPayStateMachine"],[4,"OutgoingContractError"],[3,"GatewayPayInvoice"],[3,"GatewayPayClaimOutgoingContract"],[3,"GatewayPayCancelContract"],[3,"ClientSMDatabaseTransaction"],[3,"KeyPair"],[4,"GatewayRequest"],[8,"GatewayRequestTrait"],[3,"GatewayRequestInner"],[8,"Fn"],[8,"Decodable"],[8,"Encodable"],[3,"Sender"],[3,"GatewayRpcClient"],[6,"GatewayRpcResult"],[3,"Response"],[8,"Serialize"],[8,"DeserializeOwned"],[4,"GatewayRpcError"],[3,"Error"],[3,"Extensions"],[3,"Error"],[3,"Body"],[8,"Into"],[3,"Response"],[3,"HeaderValue"],[3,"HeaderMap"],[4,"SocketAddr"],[3,"StatusCode"],[3,"Version"],[3,"TransactionId"],[3,"Extension"],[3,"Json"],[8,"IntoResponse"],[6,"Result"],[13,"Cln"],[13,"Lnd"],[13,"FailedToGetNodeInfo"],[13,"FailedToGetRouteHints"],[13,"FailedPayment"],[13,"FailedToRouteHtlcs"],[13,"FailedToCompleteHtlc"],[13,"FailedToOpenChannel"],[13,"FailedToGetInvoice"],[8,"GatewayClientExt"],[13,"OfferDoesNotExist"],[13,"Canceled"],[13,"Fail"],[13,"Success"],[13,"Preimage"],[13,"RefundSuccess"],[13,"RefundError"],[13,"FundingFailed"],[13,"Canceled"],[13,"Failed"],[13,"InvalidOutgoingContract"],[13,"LightningPayError"],[13,"InvalidOutgoingContract"],[13,"OutgoingContractDoesNotExist"]]},\
"recoverytool":{"doc":"","t":"NNDDENNDDENMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMFMMLMLMLMLLLMLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLMMMM","n":["Direct","Epochs","ImportableWallet","ImportableWalletMin","Key","Private","Public","RecoveryTool","SecretKeyInjector","TweakSource","Utxos","amount_sat","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","command","command_for_update","config","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descriptor","descriptor","descriptor","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","group_id","has_subcommand","hash","hash160","hash256","init","init","init","init","init","init","input_tweaks_output_present","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_uncompressed","key","main","network","outpoint","partial_cmp","password","pk","public","ripemd160","secret","serialize","serialize","sha256","strategy","to_compressed_public_key","to_hash160","to_hash256","to_owned","to_owned","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tweak_descriptor","tweak_parser","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","db","db","legacy","tweak"],"q":[[0,"recoverytool"],[159,"recoverytool::TweakSource"]],"d":["Derive the wallet descriptor using a single tweak","Derive all wallet descriptors of tweaks that were ever …","A UTXO with its Bitcoin Core importable descriptor","A Bitcoin Core importable descriptor","<code>MiniscriptKey</code> that is either a WIF-encoded private key or …","","","Tool to recover the on-chain wallet of a Fedimint …","Miniscript <code>Translator</code> that replaces a public key with a …","","Derive all wallet descriptors of confirmed UTXOs in the …","","","","","","","","","","","","","","","","","","","","","","","","","Directory containing server config files","","","","","","","","","","","","","Wallet descriptor, can be used instead of –cfg","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Wallet secret key, can be used instead of config together …","","Network to operate on, has to be specified if –cfg isn’…","","","The password that encrypts the configs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to database","Path to database","Extract UTXOs from a database without module partitioning",""],"i":[2,2,0,0,0,3,3,0,0,0,2,14,11,11,2,2,11,2,14,15,3,16,11,2,14,15,3,16,2,3,2,3,3,11,11,11,11,2,14,15,3,16,11,2,14,15,3,16,11,14,15,11,2,14,15,3,16,3,3,3,14,15,11,2,14,15,3,3,16,11,2,14,15,3,16,11,2,11,2,2,3,11,2,3,16,16,11,2,14,15,3,16,0,11,2,14,15,3,16,11,2,14,15,3,16,3,11,0,11,14,3,11,16,16,16,16,14,15,16,11,3,3,3,2,3,3,3,3,3,11,2,14,15,3,16,11,2,14,15,3,16,0,0,11,2,14,15,3,16,11,2,11,2,11,2,14,15,3,16,41,42,41,43],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[3,3],4],[[],1],[[],1],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,[5],[5],[5],[5],[5],[5],[[3,3],6],[[],6],[[],6],[7,[[10,[8,9]]]],[7,[[10,[8,9]]]],[[11,12],13],[[2,12],13],[[14,12],13],[[15,12],13],[[3,12],13],[[3,12],13],[[16,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[10,[11,18]]]],[17,[[10,[2,18]]]],[17,[[10,[11,18]]]],[17,[[10,[2,18]]]],[[]],[[]],[[],[[20,[19]]]],[21,6],[[3,22]],[16,10],[16,10],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[23],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[3,6],0,[[],25],0,0,[[3,3],[[20,[4]]]],0,[[16,26],[[10,[3]]]],0,[16,10],0,[[14,27],10],[[15,27],10],[16,10],0,[3,26],[[],28],[[],29],[[]],[[]],[3,30],[[],31],[[],32],[[],33],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[34,35,[37,[36]],38],[[39,[3]]]],[21,[[25,[[37,[36]]]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[11,17],[[10,[18]]]],[[2,17],[[10,[18]]]],[[11,17],[[10,[18]]]],[[2,17],[[10,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0],"c":[],"p":[[3,"Command"],[4,"TweakSource"],[4,"Key"],[4,"Ordering"],[15,"usize"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"Result"],[3,"RecoveryTool"],[3,"Formatter"],[6,"Result"],[3,"ImportableWallet"],[3,"ImportableWalletMin"],[3,"SecretKeyInjector"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[15,"str"],[8,"Hasher"],[8,"Iterator"],[3,"Request"],[6,"Result"],[3,"CompressedPublicKey"],[8,"Serializer"],[3,"Hash"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"String"],[6,"PegInDescriptor"],[3,"SecretKey"],[15,"u8"],[15,"array"],[4,"Network"],[4,"Descriptor"],[3,"TypeId"],[13,"Utxos"],[13,"Epochs"],[13,"Direct"]]},\
"tbs":{"doc":"Threshold Blind Signatures","t":"IQDDDDDIDDDDDDDLLLLLLLLLLLLLLLKFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLALLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOALLLLLALLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLMMMMLLLLLRFFDMLLLMLLLLFLLLLLLAAOAFFFFFF","n":["Aggregatable","Aggregate","AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FromRandom","Message","MessagePoint","PubKeyPoint","PublicKeyShare","Scalar","SecretKeyShare","Signature","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","aggregate","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_le_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_valid_shares","conditional_negate","conditional_negate","conditional_negate","conditional_select","conditional_select","conditional_select","ct_eq","ct_eq","ct_eq","dealer_keygen","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double","double","encode_compressed","encode_compressed","encode_compressed","encode_compressed","encode_compressed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_bytes_wide","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_hash","from_random","from_random","from_raw","from_repr","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","hash","identity","identity","identity","identity","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into","into","invert","invert","is_identity","is_identity","is_identity","is_identity","is_odd","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","multiplicative_generator","neg","neg","neg","neg","neg","neg","neg","one","one","pairing_with","pairing_with","point_impl","poly","pow","pow_vartime","random","random","root_of_unity","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","sqrt","sqrt","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_le_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_repr","to_string","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","zero","zero","zeroize","zeroize","zeroize","HASH_TAG","hash_bytes_to_curve","hash_to_curve","Poly","_pd","borrow","borrow_mut","coefficients","coefficients","evaluate","fmt","from","from","interpolate_zero","into","random","try_from","try_into","type_id","vzip","g1","g2","impl_serde_g","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize"],"q":[[0,"tbs"],[402,"tbs::hash"],[405,"tbs::poly"],[422,"tbs::serde_impl"],[426,"tbs::serde_impl::g1"],[428,"tbs::serde_impl::g2"],[430,"tbs::serde_impl::scalar"]],"d":["","","","","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …","","Represents an element of the scalar field $\\\\mathbb{F}_q$ …","","","","","","","Adds <code>rhs</code> to <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines a sufficient amount of valid blinded signature …","","","","","","","","","","<code>threshold</code>: how many signature shares are needed to produce …","","","","","","","","","","","","","Doubles this field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Attempts to convert a little-endian byte representation of …","","","","","Converts a 512-bit little endian integer into a <code>Scalar</code> by …","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","<strong>IMPORTANT</strong>: <code>from_bytes</code> includes a tag in the hash, this …","","","Converts from an integer represented in little endian into …","","","Attempts to deserialize an uncompressed element. See …","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element, not …","","","Attempts to deserialize an uncompressed element, not …","","Returns a fixed generator of the group. See <code>notes::design</code> …","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","","","","Returns the identity of the group: the point at infinity.","","Returns the identity of the group: the point at infinity.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the multiplicative inverse of this element, …","","Returns true if this element is the identity (the point at …","","Returns true if this element is the identity (the point at …","","","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","","","","","","","Multiplies <code>rhs</code> by <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","Negates <code>self</code>.","","","","","","","","Returns one, the multiplicative identity.","","","","","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","","","","","","","","","","","","","","","","Computes the square root of this element, if it exists.","","Squares this element.","Subtracts <code>rhs</code> from <code>self</code>, returning the result.","","","","","","","","","","","","","","","","Converts an element of <code>Scalar</code> into a byte representation in","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns zero, the additive identity.","","","","","","","<strong>IMPORTANT</strong>: the byte hashing fn includes a tag, this doesn…","","","","","","","","","","Returns the argument unchanged.","Interpolates the constant factor of a polynomial defined …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,52,0,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,1,2,4,1,2,4,1,2,4,0,1,2,4,12,13,14,8,9,15,16,17,7,1,1,9,15,16,17,7,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,1,2,2,4,4,12,13,14,8,9,15,16,17,7,1,1,2,2,2,4,4,4,7,1,2,4,2,4,1,2,4,2,4,7,51,1,1,1,2,2,4,4,2,2,4,4,2,2,4,4,0,12,14,9,15,16,17,7,2,2,4,4,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,1,2,2,4,4,1,2,4,2,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,1,1,2,2,4,4,1,1,2,4,0,0,1,1,8,1,1,0,12,13,14,8,9,15,16,17,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,2,4,2,4,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,13,1,1,2,4,2,2,4,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,0,0,12,13,14,8,9,15,16,17,7,1,2,4,2,4,2,4,1,1,1,2,4,0,0,0,0,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[6],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[10]]]],[12,12],[13,13],[14,14],[8,8],[9,9],[15,15],[16,16],[17,17],[7,7],[1,1],[2,2],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,6],16],[19],[19],[19],[[1,1,19],1],[[2,2,19],2],[[4,4,19],4],[[1,1],19],[[2,2],19],[[4,4],19],[[6,6]],[[],1],[[],2],[[],4],[20,[[21,[12]]]],[20,[[21,[13]]]],[20,[[21,[14]]]],[20,[[21,[8]]]],[20,[[21,[9]]]],[20,[[21,[15]]]],[20,[[21,[16]]]],[20,[[21,[17]]]],[20,[[21,[7]]]],[1,1],[1,1],[9,[[23,[22]]]],[15,[[23,[22]]]],[16,[[23,[22]]]],[17,[[23,[22]]]],[7,[[23,[22]]]],[[12,12],24],[[13,13],24],[[14,14],24],[[8,8],24],[[9,9],24],[[15,15],24],[[16,16],24],[[17,17],24],[[7,7],24],[[1,1],24],[[2,2],24],[[4,4],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[12,25],26],[[13,25],26],[[14,25],26],[[8,25],26],[[9,25],26],[[15,25],26],[[16,25],26],[[17,25],26],[[7,25],26],[[1,25],[[21,[27]]]],[[1,25],[[21,[27]]]],[[2,25],[[21,[27]]]],[[2,25],[[21,[27]]]],[[4,25],[[21,[27]]]],[[4,25],[[21,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,1],[[]],[[]],[3,2],[3,2],[5,4],[5,4],[[]],[[[29,[22]]],7],[[[23,[22]]],[[30,[1]]]],[[],[[30,[2]]]],[[],[[30,[4]]]],[[],[[30,[2]]]],[[],[[30,[4]]]],[[[23,[22]]],1],[[[23,[22]]],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[[[23,[22]]],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[31,7],[32],[32,1],[[[23,[28]]],1],[[],[[30,[1]]]],[[],[[30,[2]]]],[[[23,[22]]],[[30,[2]]]],[[[23,[22]]],[[30,[4]]]],[[],[[30,[4]]]],[[[23,[22]]],[[30,[2]]]],[[],[[30,[2]]]],[[],[[30,[4]]]],[[[23,[22]]],[[30,[4]]]],[[],2],[[],2],[[],4],[[],4],0,[[12,33]],[[14,33]],[[9,33]],[[15,33]],[[16,33]],[[17,33]],[[7,33]],[[],2],[[],2],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[30,[1]]]],[1,[[30,[1]]]],[2,19],[2,19],[4,19],[4,19],[1,19],[2,19],[4,19],[2,19],[4,19],[[1,2]],[[1,1],1],[[1,4],5],[[1,4],5],[[1,5],5],[[1,5],5],[[1,1],1],[[1,4]],[[1,1],1],[[1,1],1],[[1,5],5],[[1,3],3],[[1,3],3],[[1,2],3],[[1,2],3],[[1,3]],[[1,5]],[[1,4],5],[[1,1],1],[[1,3],3],[[1,2],3],[[2,1],3],[[2,1]],[[2,1],3],[[2,1],3],[[4,1],5],[[4,1],5],[[4,1],5],[[4,1]],[[1,1]],[[1,1]],[[],1],[1,1],[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[[],1],[[],1],[2],[4],0,0,[[1,[23,[28]]],1],[[1,[23,[28]]],1],[[],8],[32,1],[[],1],0,[[12,34],21],[[13,34],21],[[14,34],21],[[8,34],21],[[9,34],21],[[15,34],21],[[16,34],21],[[17,34],21],[[7,34],21],[[9,13],15],[1,[[30,[1]]]],[1,[[30,[1]]]],[1,1],[1,1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[35,1],[1,[[23,[22]]]],[2],[4],[2,[[23,[22]]]],[4,[[23,[22]]]],[2],[4],[1,[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,12],[1],[[],36],[[],36],[[],36],[2,[[23,[22]]]],[2],[4,[[23,[22]]]],[4],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[8,16],17],[[7,17,14],24],[[9,15,12],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],0,[[[29,[22]]],38],[31,38],0,0,[[]],[[]],[[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]],40]]],[[44,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]]]]]],0,[[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]],40]],[45,[40]]],[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]]]],40]]]],[[[43,[[0,[39,39]],39]],25],26],[[[46,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]]]]],[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,40]]]],40]]]],40]]]],40]],40]]]],[[]],[[[0,[35,47]]],[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,[49,[[0,[40,48]]]],[50,[[0,[40,49,50]]]]]]]]]]]]]]]]]]]],[[]],[[6,32],[[43,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,[41,[40]],[42,[[0,[39,41,42,51,40]]]],51,40]]]],51,40]]]],51,40]],40]]]],[[],21],[[],21],[[],37],[[]],0,0,0,0,[20,[[21,[2]]]],[[2,34],21],[20,[[21,[4]]]],[[4,34],21],[20,[[21,[1]]]],[[1,34],21]],"c":[],"p":[[3,"Scalar"],[3,"MessagePoint"],[3,"G1Projective"],[3,"PubKeyPoint"],[3,"G2Projective"],[15,"usize"],[3,"Message"],[3,"BlindingKey"],[3,"BlindedMessage"],[3,"Lsb0"],[3,"BitArray"],[3,"PublicKeyShare"],[3,"SecretKeyShare"],[3,"AggregatePublicKey"],[3,"BlindedSignatureShare"],[3,"BlindedSignature"],[3,"Signature"],[8,"IntoIterator"],[3,"Choice"],[8,"Deserializer"],[4,"Result"],[15,"u8"],[15,"array"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u64"],[15,"slice"],[3,"CtOption"],[8,"Digest"],[8,"RngCore"],[8,"Hasher"],[8,"Serializer"],[8,"Iterator"],[3,"String"],[3,"TypeId"],[8,"Group"],[8,"Debug"],[8,"Copy"],[8,"MulAssign"],[8,"AddAssign"],[3,"Poly"],[3,"Iter"],[8,"Into"],[3,"Vec"],[8,"Clone"],[8,"Field"],[8,"Mul"],[8,"Add"],[8,"FromRandom"],[8,"Aggregatable"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
