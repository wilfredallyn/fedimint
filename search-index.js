var searchIndex = JSON.parse('{\
"clientd":{"doc":"","t":[12,12,13,4,3,3,3,3,3,3,3,13,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["0","0","ClientError","ClientdError","InfoResponse","Json","PegInAddressResponse","PegInOutResponse","PegInPayload","PendingResponse","PendingTransaction","ServerError","SpendPayload","SpendResponse","TieredCount","TieredNoteCount","WaitBlockHeightPayload","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_request","height","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_response","json_success","new","new","notes","notes","peg_in_address","pending","provide","qty","quantity","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","tier","to_owned","to_owned","to_owned","to_string","transaction","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txid","txout_proof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0"],"q":["clientdclientd::ClientdError"],"d":["","","","","","","","","Struct used with the axum json-extractor to proccess the …","","Holds a pending transaction with the txid, the quantity of …","","","","Represents an e-cash tier (msat by convention) grouped …","","struct to process wait_block_height request payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[34,6,17,0,0,0,0,0,0,0,0,17,0,0,0,0,0,10,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,0,4,5,6,4,5,6,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,17,17,4,5,6,34,17,17,8,4,10,11,12,13,14,15,5,6,6,16,34,8,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,17,0,11,12,11,15,13,11,17,16,5,8,4,10,11,12,13,14,15,5,6,16,17,5,4,5,6,17,4,12,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,14,16,4,34,17,8,4,10,11,12,13,14,15,5,6,16,16,34,17,8,4,10,11,12,13,14,15,5,6,16,35],"fp":[[15,"str"],[4,"Value"],[6,"Result"],[3,"PegInPayload"],[3,"TieredCount"],[3,"TieredNoteCount"],[15,"usize"],[3,"WaitBlockHeightPayload"],[4,"Result"],[3,"SpendPayload"],[3,"InfoResponse"],[3,"PendingResponse"],[3,"PegInAddressResponse"],[3,"PegInOutResponse"],[3,"SpendResponse"],[3,"PendingTransaction"],[4,"ClientdError"],[3,"Formatter"],[6,"Result"],[4,"ClientError"],[3,"SpendableNote"],[3,"TieredMulti"],[3,"RequestParts"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"Response"],[3,"Vec"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"Json"],[13,"ClientError"]]},\
"clientd_cli":{"doc":"","t":[3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Cli","Commands","Info","NewPegInAddress","PegIn","Pending","Spend","VersionHash","WaitBlockHeight","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","print_response","raw_json","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","amount","height","transaction","txout_proof"],"q":["clientd_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clientd_cli::Commands","","",""],"d":["","","rpc-method: info()","rpc-method: pegin_address()","rpc-method peg_in()","rpc-method: pending()","rpc-method_ spend()","Print the latest git commit hash this bin. was build with","rpc-method: wait_block_height()","","","","","","","","","","call JSON-2.0 RPC method","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","print unformatted json","","","","","","","","","","","","","A minimint (ecash) amount","","The Bitcoin Transaction","The TxOutProof which was created from sending BTC to the …"],"i":[0,0,7,7,7,7,7,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,4,4,7,4,7,4,7,4,7,4,7,4,7,15,16,17,17],"f":[0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[[13,[12]],11]],0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[4,"Value"],[6,"Result"],[3,"TypeId"],[13,"Spend"],[13,"WaitBlockHeight"],[13,"PegIn"]]},\
"configgen":{"doc":"","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Cli","Command","Generate","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","base_port","bitcoind_rpc","denominations","dir_out_path","federation_name","num_nodes"],"q":["configgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","configgen::Command","","","","",""],"d":["","","Config generator for Fedimint Federation","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Base port","<code>bitcoind</code> json rpc endpoint","Available denominations of notes issues by the federation …","Directory to output all the generated config files","Federation name","Number of nodes in the federation"],"i":[0,0,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,4,7,4,7,4,7,13,13,13,13,13,13],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[13,"Generate"]]},\
"distributedgen":{"doc":"","t":[3,4,13,13,17,17,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["Cli","Command","CreateCert","Run","TLS_CERT","TLS_PK","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","gen_tls","group_id","has_subcommand","init","init","into","into","main","parse_peer_params","run_dkg","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","base_port","bitcoind_rpc","certs","denominations","dir_out_path","dir_out_path","federation_name","name"],"q":["distributedgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","distributedgen::Command","","","","","","","",""],"d":["","","Creates a connection cert string that must be shared with …","All peers must run distributed key gen at the same time to …","","","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Our external address","Our base port, ports may be used from base_port to …","<code>bitcoind</code> json rpc endpoint","Comma-separated list of connection certs from all peers …","Available denominations of notes issues by the federation …","Directory to output all the generated config files","Directory to output all the generated config files","Federation name, same for all peers","Our node name, must be unique among peers"],"i":[0,0,7,7,0,0,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,0,0,0,4,7,4,7,4,7,4,7,4,7,4,7,19,19,20,20,20,19,20,20,19],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[8,9,10,9],9],[[],[[12,[11]]]],[13,14],[[],2],[[],2],[[]],[[]],[[]],[9,15],[[8,[17,[16]],9,[17,[9]],9]],[[],6],[[],6],[[],6],[[],6],[[],18],[[],18],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Path"],[3,"String"],[15,"u16"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"PeerServerParams"],[3,"Amount"],[3,"Vec"],[3,"TypeId"],[13,"CreateCert"],[13,"Run"]]},\
"fedimint_api":{"doc":"","t":[12,12,3,8,18,16,2,16,2,18,13,8,3,4,3,2,3,13,18,14,14,14,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,14,14,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,12,0,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,3,16,13,16,16,3,8,3,4,3,4,13,8,13,16,13,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,10,10,12,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,5,12,0,11,11,10,12,11,11,12,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,12,12,12,12,12,3,11,11,5,11,11,11,5,11,11,11,11,11,12,12,18,3,3,3,8,8,8,4,3,8,4,13,8,8,13,16,13,6,8,16,13,13,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,12,12,11,0,11,11,10,10,10,10,10,10,10,10,10,11,11,5,5,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,4,6,6,13,3,13,13,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,17,3,3,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,24,3,8,8,24,11,11,0,10,10,11,10,11,11,11,11,11,14,14,11,11,11,0,0,11,11,11,11,11,14,14,3,3,16,16,8,3,18,16,16,16,16,16,16,8,16,12,10,2,10,10,10,0,10,10,11,10,11,11,11,11,11,11,10,12,10,10,11,11,11,11,10,12,0,11,11,11,12,11,11,10,12,12,0,11,11,11,11,11,11,11,11,11,10,10,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,8,10,12,3,3,3,12,5,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,6,8,10,11,10,10,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,12,12,12,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,5,12,12,12,12,12,12,12,12,12,12,5,5,5,5,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","Amount","BitcoinHash","DISPLAY_BACKWARD","Engine","FederationModule","Inner","InputMeta","LEN","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","Tiered","TransactionId","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_impl_deref_mut","add","add_assign","all_zeros","all_zeros","as_bits","as_hash","as_inner","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","db","degree","deref","deserialize","deserialize","deserialize","deserialize","div","dyn_newtype_define","dyn_newtype_impl_dyn_clone_passhthrough","encode_hex","encode_hex_upper","encoding","engine","engine","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_msat","from_sat","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","index","into","into","into","into","into","into_inner","into_inner","macros","max_evil","milli_sat","module","mul","net","one_honest","out_idx","partial_cmp","partial_cmp","partial_cmp","provide","rem","rem_assign","saturating_sub","serialize","serialize","serialize","serialize","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_usize","total","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","0","0","BitcoindRpcCfg","ClientConfig","Commit","ConfigError","ConfigMessage","Dkg","DkgGroup","DkgKeys","DkgMessage","DkgRunner","DkgStep","Extract","GenerateConfig","Messages","Params","Result","SGroup","Share","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","btc_rpc_address","btc_rpc_pass","btc_rpc_user","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commitments","deserialize","deserialize","deserialize2","distributed_gen","dkg_config","eq","f1_poly","f2_poly","fmt","fmt","fmt","fmt","from","from","from","from","from","from","gen_g","gen_h","into","into","into","into","into","into","multi","new","new","our_id","our_id","peers","peers","pk_shares","public_key_set","run","run_g1","run_g2","scalar","secret_key_share","serde_commit","serialize","serialize","serialize2","sk_shares","step","tbs","threshold","threshold_crypto","to_client_config","to_owned","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","1","0","0","0","Wrap","borrow","borrow_mut","deserialize","deserialize","from","into","serialize","serialize","try_from","try_into","type_id","vzip","0","0","DB_PREFIX","Database","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyPrefixConst","DatabaseOperation","DatabaseTransaction","DatabaseValue","DecodingError","Delete","IDatabase","IDatabaseTransaction","Insert","Key","Other","PrefixIter","SerializableDatabaseValue","Value","WrongLength","WrongPrefix","apply_batch","batch","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_tx","commit_tx","default","default","deref","deref","deref_mut","find_by_prefix","find_by_prefix","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","get_value","get_value","insert_entry","insert_entry","insert_new_entry","into","into","into","into","into","into","key","key","maybe_remove_entry","mem_impl","other","provide","raw_apply_batch","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_value","raw_insert_bytes","raw_insert_entry","raw_remove_entry","raw_remove_entry","remove_entry","remove_entry","test_db_impl","test_dbtx_impl","tests","to_bytes","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","wrong_length","wrong_prefix","0","0","0","expected","expected","found","found","Accumulator","AccumulatorTx","BatchItem","BatchTx","DbBatch","DeleteElement","Element","InsertElement","InsertNewElement","MaybeDeleteElement","append","append_delete","append_from_accumulators","append_from_iter","append_insert","append_insert_new","append_maybe_delete","autocommit","batch","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","checkpoint","clone","clone_into","commit","default","delete","drop","fmt","fmt","fmt","from","from","from","from","insert","insert_new","into","into","into","into","key","maybe_delete","new","new","reserve","subtransaction","to_owned","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","0","0","0","0","DummyError","MemDatabase","MemDbIter","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","data","db","default","dump_db","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","new","next","operations","raw_apply_batch","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_value","raw_insert_bytes","raw_insert_entry","raw_remove_entry","raw_remove_entry","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","ALT_DB_PREFIX_TEST","AltDbPrefixTestPrefix","AltTestKey","DB_PREFIX_TEST","DbPrefixTestPrefix","TestKey","TestVal","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","test_db_impl","test_dbtx_impl","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","Decodable","Decodable","DecodeError","DynEncodable","Encodable","Encodable","borrow","borrow_mut","btc","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","fmt","fmt","from","from_err","from_str","impl_encode_decode_num","impl_encode_decode_tuple","into","new_custom","provide","secp256k1","tbs","to_string","try_from","try_into","type_id","vzip","impl_encode_decode_bridge","impl_external_encode_bls","ApiEndpoint","ApiError","ConsensusItem","Error","FederationModule","InputMeta","PATH","Param","Response","State","TxInput","TxOutput","TxOutputOutcome","TypedApiEndpoint","VerificationCache","amount","api_base_name","api_endpoint","api_endpoints","apply_input","apply_output","audit","audit","await_consensus_proposal","bad_request","begin_consensus_epoch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","code","consensus_proposal","end_consensus_epoch","fmt","from","from","from","handle","handler","interconnect","into","into","into","message","new","not_found","output_status","path","puk_keys","testing","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_input","validate_output","vzip","vzip","vzip","Audit","AuditItem","add_items","borrow","borrow","borrow_mut","borrow_mut","default","fmt","fmt","from","from","into","into","items","milli_sat","name","sum","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ModuleInterconect","call","0","FakeFed","FakeInterconnect","TestInputMeta","amount","assert_all_equal","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","client_cfg","client_cfg","consensus_round","eq","fetch_from_all","fmt","from","from","from","into","into","into","keys","members","new","new_block_height_responder","output_outcome","patch_dbs","set_block_height","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_input","verify_output","vzip","vzip","vzip","peers","AnyPeerConnections","PeerConnections","ban_peer","into_dyn","receive","send","Elapsed","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","const_new","const_with_max_readers","data","data","default","deref","deref","deref_mut","downgrade","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut","imp","into","into","into","into","into_inner","into_mapped","map","map","marker","marker","mr","new","payment_path_failed","payment_path_successful","permits_acquired","probe_failed","probe_successful","provide","read","read_owned","s","s","s","sleep","sleep_until","spawn","timeout","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","c","data","data","marker","marker","mr","permits_acquired","s","s","s","sleep","sleep_until","spawn","timeout","0","0","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","eq","eq","fmt","fmt","fmt","from","from","from_iter","get","hash","hash","into","into","iter","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_owned","to_owned","to_public","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","TieredMulti","TieredMultiZip","_pd","borrow","borrow","borrow_mut","borrow_mut","check_tiers","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","default","deserialize","eq","extend","fmt","from","from","from_bytes","from_iter","get","get_mut","hash","into","into","into_iter","into_iter","is_empty","item_count","iter_items","iter_tiers","iters","map","new","new","next","represent_amount","select_coins","serialize","structural_eq","tier_count","tiers","to_bytes","to_owned","total_amount","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_apifedimint_api::ParseAmountError","","fedimint_api::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::config::DkgMessage","","","","fedimint_api::config::DkgStep","","fedimint_api::config::serde_commit","","","","","","","","","","","","","","fedimint_api::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::DatabaseOperation","","fedimint_api::db::DecodingError","","","","","fedimint_api::db::batch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::batch::BatchItem","","","","fedimint_api::db::mem_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding::btc","fedimint_api::encoding::tbs","fedimint_api::module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::audit","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::interconnect","","fedimint_api::module::testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::net","fedimint_api::net::peers","","","","","","fedimint_api::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::task::imp","","","","","","","","","","","","","","","","","","fedimint_api::tiered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::tiered_multi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Represents an amount of BTC inside the system. The base …","Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","","Length of the hash, in bytes.","","for consensus-related calculations given the number of …","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","Example","","","","","Returns an all zero hash.","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implement <code>Clone</code> on a “dyn newtype”","","","This module defines a binary encoding interface which is …","Constructs a new engine.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","Copies a byte slice into a hash object.","","","","","","Hashes some bytes.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","number of peers that can be evil without disrupting the …","","","","","number of peers to select such that one is honest (under …","","","","","","","","","","","","","","","","","","number of peers required for a signature","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines a group (e.g. G1 or G2) that we can generate keys …","","","","","","Part of a config that needs to be generated to bootstrap a …","","","","","","Create another DKG with <code>threshold</code> signatures required","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a second generator by hashing the first one to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create multiple DKGs with the same <code>threshold</code> signatures …","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","","","","","","Runs the DKG algorithms with our peers","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","Handling the Group serialization with a wrapper","","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","","","","","Function that generates the config of all peers locally. …","","","","","","","","","","","","","","","","","","","Asserts that the public keys in the config are and panics …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A handle to a type-erased database implementation","","","","","","","A handle to a type-erased database implementation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collects a batch of items of type <code>T</code> over its lifetime and …","A transaction on an <code>Accumulator</code> that aborts by default …","Database operation","","","Deletes element, errors if it doesn’t exist","Database key-value pair","Insets new element, even if it already exists","Inserts element, errors if it already exists","Deletes element, does nothing if it doesn’t exist","Append one <code>item</code> to the pending transaction","Append a DB operation to delete an existing element","Currently the accumulator and transactions are not thread …","Append multiple items to the pending transaction","Append a DB operation to insert a potentially already …","Append a DB operation to insert a new element","Append a DB operation to delete a potentially absent …","Shortcut to just append some items to the batch without …","","","","","","","","","","","","","","Commit the current accumulator state","","Construct a DB operation to delete an existing element","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a DB operation to insert a potentially already …","Construct a DB operation to insert a new element","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Construct a DB operation to delete a potentially absent …","","Construct a new, empty <code>Accumulator</code>","Allocate space for items to avoid frequent reallocation","Start a sub-transaction which has the following behavior:","","Start a new transaction. If the <code>AccumulatorTx</code> is dropped …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data which can be encoded in a consensus-consistent way","","","Object-safe trait for things that can encode themselves","Data which can be encoded in a consensus-consistent way","","","","","Decode an object with a well-defined format","Encode an object with a well-defined format. Returns the …","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Definition of an API endpoint defined by a module <code>M</code>.","","","","","","example: /transaction","","","","","","","","","","Defines the prefix for API endpoints defined by the module.","","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","Some modules may have slow to verify inputs that would …","","This module’s contribution to the next consensus proposal","This function is called once all transactions have been …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Handler for the API call that takes the following …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Retrieve the current status of the output. Depending on …","Path under which the API endpoint can be reached. It …","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Provides an interface to call APIs of other modules","Simulates a call to an API endpoint of another module. …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Owned <code>PeerConnections</code> trait object type","Connection manager that tries to keep connections open to …","Removes a peer connection in case of misbehavior","Converts the struct to a <code>PeerConnection</code> trait object","Await receipt of a message from any connected peer.","Send a message to a specific peer.","","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","","Represents coins of different denominations.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new MultiZip Iterator from <code>Coins</code> iterators. …","","","","Select coins with total amount of <em>at least</em> <code>amount</code>. If more …","","","","","","","","","","","","","","",""],"i":[2,10,0,0,126,126,0,126,0,126,20,0,0,0,0,0,0,20,1,0,0,0,1,1,126,2,2,2,126,2,2,2,2,2,10,1,11,20,2,10,1,11,20,2,2,10,1,11,2,10,1,11,2,10,1,0,2,10,1,11,2,10,1,11,2,10,1,11,0,127,2,2,10,1,11,1,0,0,2,2,0,126,2,2,10,1,11,2,2,2,10,10,1,1,11,11,20,20,2,2,10,10,1,1,11,20,20,20,2,2,10,1,11,126,2,2,126,2,1,1,126,2,2,2,1,1,126,2,10,1,11,2,2,10,1,11,20,126,2,0,127,1,0,1,0,127,11,2,10,1,20,1,1,1,2,10,1,11,20,1,1,1,0,127,0,0,2,10,1,11,2,2,10,1,11,2,10,1,11,20,10,127,2,2,10,1,11,20,2,10,1,11,20,11,2,10,1,11,20,2,10,1,11,20,2,128,129,0,130,44,130,130,0,0,0,0,0,0,44,0,45,130,45,0,44,41,43,41,45,47,44,48,43,41,45,47,44,48,43,48,48,48,45,47,44,48,45,47,44,48,43,44,48,131,130,41,44,43,43,45,47,44,48,43,41,45,47,44,48,43,43,43,41,45,47,44,48,41,43,41,43,41,43,41,43,47,41,41,41,0,47,0,44,48,131,43,43,47,43,47,130,45,47,44,48,130,43,41,45,47,44,48,43,41,45,47,44,48,43,41,45,47,44,48,130,43,41,45,47,44,48,132,133,134,133,135,136,61,0,61,61,0,61,61,61,0,61,61,61,61,61,62,65,137,0,0,0,0,0,0,0,0,0,0,68,0,0,68,137,26,0,0,137,26,26,62,0,138,66,67,68,62,65,26,66,67,68,62,65,26,62,62,139,65,66,67,62,65,65,62,65,66,67,68,26,26,66,67,68,62,62,65,65,26,140,141,62,65,62,65,65,66,67,68,62,65,26,66,67,65,0,26,26,138,138,139,139,138,139,138,138,139,62,65,0,0,0,142,143,62,26,66,67,68,62,65,26,66,67,68,62,65,26,66,67,68,62,65,26,66,66,67,68,62,65,26,26,26,144,145,146,147,148,147,148,0,0,0,0,0,73,0,73,73,73,72,72,72,72,72,72,72,74,72,72,75,73,74,72,75,73,74,74,72,74,74,72,74,73,72,75,73,74,72,75,73,74,73,73,72,75,73,74,75,73,75,74,72,72,74,74,72,75,73,74,72,75,73,74,72,75,73,74,75,72,75,73,74,149,150,151,152,0,0,0,0,76,79,76,77,78,79,76,77,78,77,79,76,77,76,76,78,76,77,78,79,76,77,78,79,76,77,78,79,76,79,77,76,76,77,77,76,77,76,76,77,79,76,77,78,79,76,77,78,77,79,76,77,78,79,76,77,78,80,82,84,0,0,0,0,0,0,0,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,84,80,81,82,83,84,80,81,82,83,84,80,80,81,81,82,82,83,83,84,80,81,82,83,84,0,0,80,80,81,81,82,82,83,83,84,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,13,0,0,0,0,0,0,13,13,0,153,154,85,85,13,13,13,13,13,0,0,13,13,13,0,0,13,13,13,13,13,0,0,0,0,155,155,0,0,156,156,156,156,155,155,155,0,155,89,155,0,155,155,155,0,155,155,91,155,89,157,91,89,157,91,155,91,155,155,91,89,157,91,156,157,0,89,157,91,91,91,91,155,157,89,0,89,157,91,89,157,91,89,157,91,155,155,89,157,91,0,0,90,94,90,94,90,90,94,90,94,90,94,90,90,94,94,90,94,90,94,90,94,90,94,90,94,90,0,87,96,0,0,0,98,0,97,97,96,98,97,96,98,96,97,97,97,98,97,98,97,96,98,97,96,98,98,97,97,96,97,97,97,97,96,98,97,96,98,97,96,98,97,97,97,96,98,0,0,0,158,158,158,158,0,0,0,0,0,101,101,107,102,103,101,107,102,103,101,101,103,101,101,102,103,101,102,103,103,103,102,103,107,107,102,102,103,103,101,107,102,103,101,101,101,101,0,107,102,103,101,101,103,102,103,102,103,101,101,103,103,103,103,103,107,101,101,102,103,101,0,0,0,0,107,102,103,107,102,103,101,107,102,103,101,102,103,101,101,101,101,107,102,103,101,107,102,103,101,101,101,101,0,0,0,0,101,102,103,102,103,101,103,102,103,101,0,0,0,0,118,116,0,0,116,118,116,118,116,118,116,118,116,118,118,116,118,116,118,118,116,118,116,116,116,118,116,118,116,116,118,118,116,116,116,116,118,116,116,118,118,116,118,116,118,116,118,116,124,0,0,125,125,124,125,124,124,124,124,124,124,124,124,124,124,124,124,125,124,124,124,124,124,124,125,124,125,124,124,124,124,124,125,124,125,124,125,124,124,124,124,124,124,124,124,124,125,124,125,124,125,124,125,124],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[]],[[],2],[[],3],[2,4],[[]],[2],[2],[[],5],[[]],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[[8,[6,7]]]]]],[2,2],[10,10],[1,1],[11,11],[[]],[[]],[[]],[[]],[[2,2],12],[[10,10],12],[[1,1],12],0,[[],[[9,[2,13]]]],[[],[[9,[10,13]]]],[[],[[9,[1,13]]]],[[],[[9,[11,13]]]],[2,[[9,[5,14]]]],[10,[[9,[5,14]]]],[1,[[9,[5,14]]]],[11,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],0,[[],5],[2],[16,[[9,[2]]]],[[],[[9,[10]]]],[[],[[9,[1]]]],[[],[[9,[11]]]],[[1,1]],0,0,[[]],[[]],0,[[]],[[]],[[2,2],17],[[10,10],17],[[1,1],17],[[11,11],17],[[2,18],19],[[2,18],19],[[2,18],19],[[10,18],19],[[10,18],19],[[1,18],19],[[1,18],19],[[11,18],19],[[11,18],19],[[20,18],19],[[20,18],19],[[]],[4,2],[[]],[21,10],[22,1],[[]],[[]],[23,20],[24,20],[[]],[[],[[9,[25]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[]],[[],2],[4,2],[[]],[[],2],[27,1],[27,1],[[],[[9,[28]]]],[[],[[9,[2,28]]]],[[],[[9,[2,28]]]],[29,[[9,[2]]]],[29,[[9,[1]]]],[[29,30],[[9,[1,20]]]],[[]],[2],[10],[1],[11],[[2,31]],[[]],[[]],[[]],[[]],[[]],[[]],[2],0,[[],5],0,0,[[1,27]],0,[[],5],0,[[2,2],[[32,[12]]]],[[10,10],[[32,[12]]]],[[1,1],[[32,[12]]]],[33],[[1,1]],[[1,1]],[[1,1],1],[[2,34],9],[10,9],[1,9],[11,9],[20,[[32,[35]]]],[[1,1]],[[1,1]],[36,1],0,[[],5],0,0,[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],38],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[10,5],[[],5],[[],[[9,[3,39]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[41,5]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]],[44,[42]]],[[45,[42]]]],0,0,0,[[[45,[[0,[46,42]]]]],[[45,[[0,[46,42]]]]]],[[[47,[46]]],[[47,[46]]]],[[[44,[[0,[46,42]]]]],[[44,[[0,[46,42]]]]]],[48,48],[[]],[[]],[[]],[[]],0,[[],[[9,[[44,[42]]]]]],[[],[[9,[48]]]],[16,9],[[49,10,[0,[50,51]]],[[54,[[53,[52]]]]]],0,[[[44,[[0,[55,42]]]],44],17],0,0,[[[45,[[0,[56,42]]]],18],19],[[[47,[56]],18],19],[[[44,[[0,[56,42]]]],18],19],[[48,18],19],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[43,[42]]],42],[[]],[[]],[[]],[[]],[[]],[[]],[[8,5,10],41],[[42,10,[8,[10]],5]],[[5,10],41],0,0,0,0,0,0,[[41,42,49],[[57,[[47,[42]]]]]],[[41,49],[[57,[[47,[58]]]]]],[[41,49],[[57,[[47,[59]]]]]],[10,60],0,0,[[[44,[42]]],9],[48,9],[34,9],0,[[[43,[42]],10,[44,[42]]],[[45,[42]]]],[[[47,[59]]]],0,[[[47,[58]]]],[[]],[[]],[[]],[[]],[[]],[[[0,[50,51]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[10],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[16,[[9,[[8,[42]]]]]],[16,[[9,[[61,[42]]]]]],[[]],[[]],[34,9],[[[61,[42]],34],9],[[],9],[[],9],[[],40],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[62,63],64],0,[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,62],[[]],[53,64],[65,64],[[],66],[[],67],[62],[65],[65],[62,36],[65,36],[[66,18],19],[[67,18],19],[[68,18],19],[[26,18],19],[[26,18],19],[[]],[[]],[[]],[[],62],[[]],[[]],[[],65],[[]],[[],[[64,[26]]]],[[],[[64,[26]]]],[62,[[64,[32]]]],[65,[[64,[32]]]],[62,[[64,[32]]]],[65,[[64,[32]]]],[65,[[64,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[65,64],0,[[[0,[35,69,70]]],26],[33],[63,64],[[],71],[[],71],[[],[[64,[[32,[[8,[37]]]]]]]],[[],[[64,[[32,[[8,[37]]]]]]]],[[[8,[37]]],[[64,[[32,[[8,[37]]]]]]]],[[[8,[37]]],[[64,[[32,[[8,[37]]]]]]]],[[],[[64,[[32,[[8,[37]]]]]]]],[[],64],[62,[[64,[32]]]],[65,64],[62],[62],0,[[],[[8,[37]]]],[[],[[8,[37]]]],[[]],[[],38],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],0,[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],26],[[37,37],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[72],[[[72,[73]]]],[[72,36]],[[72,36]],[[[72,[73]]]],[[[72,[73]]]],[[[72,[73]]]],[74],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[74,[46]]],[[74,[46]]]],[[]],[72],[[],74],[[],73],[72],[[75,18],19],[[73,18],19],[[[74,[56]],18],19],[[]],[[]],[[]],[[]],[[],73],[[],73],[[]],[[]],[[]],[[]],0,[[],73],[[],75],[[],74],[[72,5]],[72,72],[[]],[74,72],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[],40],[[],40],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[76,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[77]]],64],0,0,0,[[],76],[76],[[78,78],17],[[76,18],19],[[77,18],19],[[78,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],76],[79,32],0,[[76,63],64],[76,71],[77,71],[77,[[64,[[32,[[8,[37]]]]]]]],[76,[[64,[[32,[[8,[37]]]]]]]],[[77,[8,[37]]],[[64,[[32,[[8,[37]]]]]]]],[[76,[8,[37]]],[[64,[[32,[[8,[37]]]]]]]],[76,[[64,[[32,[[8,[37]]]]]]]],[77,64],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[80,13]]]],[[],[[9,[81,13]]]],[[],[[9,[82,13]]]],[[],[[9,[83,13]]]],[[],[[9,[84,13]]]],[80,[[9,[5,14]]]],[81,[[9,[5,14]]]],[82,[[9,[5,14]]]],[83,[[9,[5,14]]]],[84,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],[15,[[9,[5,14]]]],[[84,84],17],[[80,18],19],[[81,18],19],[[82,18],19],[[83,18],19],[[84,18],19],[[]],[[]],[[]],[[]],[[]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[],[[9,[26]]]],[[]],[[]],[[]],[[]],[[]],[62],[62],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],[[8,[37,7]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],0,[[],[[9,[13]]]],[[],[[9,[5,14]]]],[85,[[9,[5,14]]]],[15,[[9,[5,14]]]],[[13,18],19],[[13,18],19],[[]],[[[0,[35,69,70]]],13],[29,13],0,0,[[]],[86,13],[33],0,0,[[],38],[[],9],[[],9],[[],40],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],0,[[]],[[87,88],[[9,[89]]]],[[88,11],[[9,[1]]]],0,[90],[[[0,[50,51]]],[[54,[[53,[52]]]]]],[38,91],[[65,8,[0,[50,51]]],[[54,[[53,[52]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[36,69]]]],0,[[[0,[50,51]]],[[54,[[53,[52]]]]]],[[92,88,[0,[50,51]]],[[54,[[53,[52]]]]]],[[91,18],19],[[]],[[]],[[]],[[],[[54,[[53,[52]]]]]],0,0,[[]],[[]],[[]],0,[[93,38],91],[38,91],[11,32],0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[],40],[87,[[9,[89]]]],[[],[[9,[1]]]],[[]],[[]],[[]],0,0,[[90,62]],[[]],[[]],[[]],[[]],[[],90],[[94,18],19],[[90,18],19],[[]],[[]],[[]],[[]],0,0,0,[90,94],[[],38],[[],38],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[]],[[]],0,[[29,38,95],[[54,[[53,[52]]]]]],0,0,0,0,0,[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[96,29,38,95],[[54,[[53,[52]]]]]],[97],0,[97],[[98,98],17],[97],[[98,18],19],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5,97],[[[100,[99]]],96],[[97,11],32],[97],[[97,27]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[],40],[97,[[9,[98]]]],[97,17],[[]],[[]],[[]],0,0,0,[10,[[54,[[53,[52]]]]]],[[],49],[[],[[54,[[53,[52]]]]]],[[],[[54,[[53,[52]]]]]],0,0,0,0,[[]],[101,102],[101,103],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[27,104,104,105],27],[[],101],[106,101],0,0,[[],101],[102],[103],[103],[103,102],[102],[103],[[107,18],19],[[107,18],19],[[102,18],[[9,[108]]]],[[102,18],[[9,[108]]]],[[103,18],[[9,[108]]]],[[103,18],[[9,[108]]]],[[101,18],[[9,[108]]]],[[]],[[]],[[]],[[],101],[109],[[]],[101],0,[[]],[[]],[[]],[[]],[101],[103,110],[102,102],[103,110],0,0,0,[[],101],[27],[[]],0,[27],[[]],[33],[101,52],[[[100,[101]]],52],0,0,0,[111],[112],[[]],[111,[[9,[107]]]],[[],38],[[],38],[[],38],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[102,[[9,[102,102]]]],[103,[[9,[110,103]]]],[101,[[9,[102,113]]]],[[[100,[101]]],[[9,[114,113]]]],[101,[[9,[103,113]]]],[[[100,[101]]],[[9,[115,113]]]],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[106,101],[101,52],[[[100,[101]]],52],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,[111],[112],[[]],[111,[[9,[107]]]],0,0,0,0,[116,117],[[]],[[]],[[]],[[]],[118,118],[[[116,[46]]],[[116,[46]]]],[[]],[[]],[[118,118],12],[[],[[9,[118]]]],[[],[[9,[116]]]],[[118,118],17],[[[116,[55]],116],17],[[118,18],19],[[118,18],19],[[[116,[56]],18],19],[[]],[[]],[119,116],[[116,1],32],[118],[[[116,[120]]]],[[]],[[]],[116,36],[[118,118],[[32,[12]]]],[118,9],[116,9],[[116,116],17],[[116,1],[[9,[118]]]],[116,121],[[]],[[]],[[[116,[122]]],[[116,[123]]]],[[],38],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[124,116],[[9,[118]]]],[[[124,[46]]],[[124,[46]]]],[[]],[[],[[9,[124,13]]]],[124,[[9,[5,14]]]],[15,[[9,[5,14]]]],[[],124],[[],[[9,[124]]]],[[[124,[55]],124],17],[[124,119]],[[[124,[56]],18],19],[[]],[[]],[[],[[9,[26]]]],[119,124],[[124,1],[[32,[8]]]],[[124,1],[[32,[8]]]],[[[124,[120]]]],[[]],[[]],[[]],[124],[124,17],[124,5],[124,[[0,[36,121]]]],[124,36],0,[124,[[9,[124]]]],[8,125],[[[117,[1,8]]],124],[125,32],[[1,116],124],[[124,1],[[32,[124]]]],[124,9],[[124,124],17],[124,5],[124,36],[[],[[8,[37,7]]]],[[]],[124,1],[[],9],[[],9],[[],9],[[],9],[[],40],[[],40],[[]],[[]]],"p":[[3,"Amount"],[3,"TransactionId"],[3,"BitSlice"],[3,"Hash"],[15,"usize"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[3,"PeerId"],[3,"OutPoint"],[4,"Ordering"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"ParseAmountError"],[15,"u16"],[3,"Amount"],[4,"ParseAmountError"],[3,"ParseIntError"],[4,"Error"],[4,"DecodingError"],[15,"u64"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"SliceIndex"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[8,"Iterator"],[15,"u8"],[3,"String"],[4,"BitSpanError"],[3,"TypeId"],[3,"DkgRunner"],[8,"DkgGroup"],[3,"Dkg"],[4,"DkgMessage"],[4,"DkgStep"],[8,"Clone"],[3,"DkgKeys"],[3,"BitcoindRpcCfg"],[6,"AnyPeerConnections"],[8,"RngCore"],[8,"CryptoRng"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"PartialEq"],[8,"Debug"],[3,"HashMap"],[3,"G1Projective"],[3,"G2Projective"],[3,"Scalar"],[3,"Wrap"],[3,"Database"],[6,"DbBatch"],[6,"Result"],[3,"DatabaseTransaction"],[3,"DatabaseInsertOperation"],[3,"DatabaseDeleteOperation"],[4,"DatabaseOperation"],[8,"Send"],[8,"Sync"],[6,"PrefixIter"],[3,"AccumulatorTx"],[4,"BatchItem"],[3,"Accumulator"],[3,"Element"],[3,"MemDatabase"],[3,"MemTransaction"],[3,"DummyError"],[3,"MemDbIter"],[3,"TestKey"],[3,"DbPrefixTestPrefix"],[3,"AltTestKey"],[3,"AltDbPrefixTestPrefix"],[3,"TestVal"],[8,"DynEncodable"],[3,"Error"],[8,"ModuleInterconect"],[6,"BatchTx"],[3,"InputMeta"],[3,"Audit"],[3,"ApiError"],[3,"HashSet"],[15,"i32"],[3,"AuditItem"],[4,"Value"],[3,"FakeInterconnect"],[3,"FakeFed"],[3,"TestInputMeta"],[3,"AtomicU64"],[3,"Arc"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"NodeId"],[3,"ChannelUsage"],[15,"u32"],[3,"Elapsed"],[3,"Error"],[15,"never"],[3,"RwLockMappedWriteGuard"],[3,"Duration"],[3,"Instant"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"Tiered"],[3,"BTreeMap"],[3,"InvalidAmountTierError"],[8,"IntoIterator"],[8,"Hash"],[8,"DoubleEndedIterator"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[3,"TieredMulti"],[3,"TieredMultiZip"],[8,"BitcoinHash"],[8,"NumPeers"],[13,"NotANumber"],[13,"WrongBitcoinAmount"],[8,"GenerateConfig"],[8,"SGroup"],[13,"Commit"],[13,"Share"],[13,"Extract"],[13,"Messages"],[13,"Result"],[8,"DatabaseKeyPrefixConst"],[8,"IDatabase"],[8,"IDatabaseTransaction"],[8,"DatabaseKey"],[8,"DatabaseValue"],[8,"DatabaseKeyPrefix"],[8,"SerializableDatabaseValue"],[13,"Insert"],[13,"Delete"],[13,"Other"],[13,"WrongPrefix"],[13,"WrongLength"],[13,"InsertNewElement"],[13,"InsertElement"],[13,"DeleteElement"],[13,"MaybeDeleteElement"],[8,"Decodable"],[8,"Encodable"],[8,"FederationModule"],[8,"TypedApiEndpoint"],[3,"ApiEndpoint"],[8,"PeerConnections"]]},\
"fedimint_build":{"doc":"","t":[5],"n":["print_git_hash"],"q":["fedimint_build"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fedimint_cli":{"doc":"","t":[13,3,3,4,3,4,6,4,4,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,10,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlreadySpent","Cli","CliError","CliErrorKind","CliNoWorkdir","CliOutput","CliResult","Command","CommandNoWorkdir","ConnectInfo","ConnectInfo","ErrorHandler","Fetch","Fetch","GeneralFailure","GeneralFederationError","IOError","Info","Info","InsufficientBalance","InvalidValue","JoinFederation","JoinFederation","ListGateways","ListGateways","LnInvoice","LnInvoice","LnPay","LnPay","NetworkError","OSError","PayRequest","PegIn","PegIn","PegInAddress","PegInAddress","PegOut","PegOut","Reissue","Reissue","SerializationError","Spend","Spend","SwitchGateway","SwitchGateway","Timeout","Validate","Validate","VersionHash","VersionHash","VersionHash","WaitBlockHeight","WaitBlockHeight","WaitInvoice","WaitInvoice","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","coins","command","command","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","handle_command","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","invoice","kind","main","message","or_terminate","provide","raw_error","serialize","serialize","serialize","serialize","to_string","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workdir","address","all_valid","connect_info","contract_id","details","details","gateways","hash","id","id","invoice","issuance","joined","new_gateway","num_gateways","paid_in_tx","reached","token","total_amount","total_num_notes","tx_id","address","amount","amount","bolt11","coins","coins","connect","description","expiry_time","height","invoice","pubkey","satoshis","transaction","txout_proof"],"q":["fedimint_clifedimint_cli::CliOutput","","","","","","","","","","","","","","","","","","","","","fedimint_cli::Command","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Config enabling client to establish websocket connection …","","","Fetch (re-)issued notes and finalize issuance process","","","","","Display wallet info (holdings, tiers)","","","","Join a federation using it’s ConnectInfo","","List registered gateways","","Create a lightning invoice to receive payment via gateway","","Pay a lightning invoice via a gateway","","","","","Issue tokens in exchange for a peg-in proof (not yet …","","Generate a new peg-in address, funds sent to it can later …","","Withdraw funds from the federation","","Reissue tokens received from a third party to avoid double …","","","Prepare notes to send to a third party as a payment","","Switch active gateway","","","Validate tokens without claiming them (only checks if …","","Print the latest git commit hash this bin. was build with","Print the latest git commit hash this bin. was build with","","Wait for the fed to reach a consensus block height","","Wait for incoming invoice to be paid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working directory of the client containing the config …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","node public key for a gateway","","",""],"i":[3,0,0,0,0,0,0,0,0,6,19,0,6,19,3,3,3,6,19,3,3,6,19,6,19,6,19,6,19,3,3,0,6,19,6,19,6,19,6,19,3,6,19,6,19,3,6,19,6,18,19,6,19,6,19,15,17,15,17,18,19,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,15,17,15,17,15,17,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,3,5,6,3,9,15,17,18,19,5,6,3,9,9,5,6,3,9,9,15,17,18,19,5,15,17,18,19,15,17,18,19,15,17,0,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,9,0,9,28,9,9,6,3,9,5,6,9,28,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,15,17,18,19,15,17,18,19,6,3,9,15,17,18,19,5,15,29,30,31,32,30,33,34,35,36,37,38,39,40,41,34,42,43,44,33,33,45,46,47,48,49,50,51,52,48,48,53,54,55,46,56,56],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],0,0,[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[5]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[6,7],8],[[3,7],8],[[9,7],8],[[9,7],8],[[5,7],8],[[]],[[]],[[]],[[3,10,[13,[[12,[11]]]]],9],[[]],[[]],[[]],[[]],[[]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[[],[[13,[20]]]],[[],[[13,[20]]]],[[15,[22,[21]],23],[[4,[6,9]]]],[10,24],[10,24],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,[[3,10]],[25],0,[6,4],[3,4],[9,4],[5,4],[[],26],[[],26],[[3,10],[[4,[6,9]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[4,"CliErrorKind"],[4,"Result"],[3,"PayRequest"],[4,"CliOutput"],[3,"Formatter"],[6,"Result"],[3,"CliError"],[15,"str"],[8,"Error"],[3,"Box"],[4,"Option"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[3,"CliNoWorkdir"],[4,"CommandNoWorkdir"],[4,"Command"],[3,"Id"],[3,"UserClientConfig"],[3,"Client"],[3,"OsRng"],[15,"bool"],[3,"Demand"],[3,"String"],[3,"TypeId"],[8,"ErrorHandler"],[13,"PegInAddress"],[13,"Validate"],[13,"ConnectInfo"],[13,"LnPay"],[13,"Info"],[13,"ListGateways"],[13,"VersionHash"],[13,"PegIn"],[13,"Reissue"],[13,"LnInvoice"],[13,"Fetch"],[13,"JoinFederation"],[13,"SwitchGateway"],[13,"WaitInvoice"],[13,"WaitBlockHeight"],[13,"Spend"],[13,"PegOut"],[13,"PegOut"],[13,"Spend"],[13,"LnInvoice"],[13,"LnPay"],[13,"Reissue"],[13,"Validate"],[13,"JoinFederation"],[13,"WaitBlockHeight"],[13,"WaitInvoice"],[13,"SwitchGateway"],[13,"PegIn"]]},\
"fedimint_client":{"doc":"This is a sketch/frame of future “modularized” …","t":[3,4,3,3,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","DBError","DBTransaction","DeterministicRandomnessTracker","NotEnoughInputs","NotFound","TransactionError","UnsignedTransaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit","default","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_changed_needed","inputs","into","into","into","into","into","into","modules","outputs","provide","provide","register_module","register_module_with_id","sign","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Database transaaction object","Something that keeps tracks of which nonces (and any other …","","","","Transaction, without a signature yet","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate change outputs using <code>module</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Sign into <code>Transaction</code> and return new <code>SpendableOutput</code>s","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,5,2,0,0,8,13,1,5,4,2,8,13,1,5,4,2,1,4,5,5,2,2,8,13,1,5,4,2,8,8,8,13,1,5,4,2,4,8,5,2,4,4,8,5,2,8,13,1,5,4,2,8,13,1,5,4,2,8,13,1,5,4,2,8,13,1,5,4,2],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[[],4],[[5,6],7],[[5,6],7],[[2,6],7],[[2,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[3,[9,5]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[10],[10],[[4,11],4],[[4,12,11],4],[[8,13]],[[],14],[[],14],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"DBTransaction"],[4,"DBError"],[4,"Result"],[3,"Client"],[4,"TransactionError"],[3,"Formatter"],[6,"Result"],[3,"UnsignedTransaction"],[3,"Amount"],[3,"Demand"],[3,"ClientModule"],[6,"ModuleKey"],[3,"DeterministicRandomnessTracker"],[3,"String"],[3,"TypeId"]]},\
"fedimint_core":{"doc":"","t":[4,13,13,11,11,0,11,11,11,0,11,11,11,11,11,11,0,0,11,11,0,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,5,5,12,12,4,3,13,3,3,4,13,13,13,8,13,13,13,13,13,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,2,2,2,13,8,13,13,4,13,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,12,12,12,12,12,4,13,13,13,13,13,13,4,3,4,8,13,13,13,5,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["CoreError","MismatchingVariant","PendingPreimage","borrow","borrow_mut","config","deref","deref_mut","drop","epoch","fmt","fmt","from","init","into","is_retryable","modules","outcome","provide","to_string","transaction","try_from","try_into","type_id","vzip","0","1","ClientConfig","FeeConsensus","Node","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","federation_name","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","hash","init","init","init","into","into","into","ln","ln","load_from_file","mint","mint","name","nodes","serde_binary_human_readable","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","vzip","vzip","vzip","wallet","wallet","deserialize","serialize","0","0","ConsensusItem","EpochHistory","EpochInfo","EpochSignature","EpochSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","LN","Mint","MissingPreviousEpoch","MissingSignature","NotEnoughValidSigShares","OutcomeHistory","Transaction","UnzipConsensusItem","Wallet","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_info","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","items","last_hash","ln","mint","new","outcome","serialize","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","0","0","0","0","0","0","ln","mint","wallet","Accepted","Final","LN","Mint","OutputOutcome","Rejected","TransactionStatus","TryIntoOutcome","Wallet","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","hash","hash","init","init","into","into","is_final","is_final","is_final","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_outcome","try_into_variant","type_id","type_id","vzip","vzip","0","0","0","0","epoch","outputs","Input","InvalidSignature","LN","LN","Mint","Mint","MissingSignature","Output","Transaction","TransactionError","TransactionItem","UnbalancedTransaction","Wallet","Wallet","agg_keys","agg_sign","amount","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","fee","fee","fee","fee_amount","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","in_amount","init","init","init","init","inputs","into","into","into","into","new_pre_session","out_amount","outputs","provide","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","type_id","validate_funding","validate_signature","vzip","vzip","vzip","vzip","0","0","0","0","0","0","fee","inputs","outputs"],"q":["fedimint_core","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::CoreError","","fedimint_core::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::config::serde_binary_human_readable","","fedimint_core::epochfedimint_core::epoch::ConsensusItem","","","","","fedimint_core::epoch::EpochVerifyError","fedimint_core::modules","","","fedimint_core::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::outcome::OutputOutcome","","","fedimint_core::outcome::TransactionStatus","","","fedimint_core::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::transaction::Input","","","fedimint_core::transaction::Output","","","fedimint_core::transaction::TransactionError","",""],"d":["","","","","","Fedimint toplevel config","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","","","","","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","","","An atomic value transfer operation within the Fedimint …","","Common properties of value transfer for inputs and outputs.","","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","The amount before fees represented by the in/output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The fee that will be charged for this in/output","","","The sum of fees across all inputs and outputs.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Precompute a combined public key and the hash of the given …","","<code>Output</code>s created as a result of the transaction","","","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","","Validate amounts balance.","Validate the aggregated Schnorr Signature signed over the …","","","","","","","","","","","","",""],"i":[0,2,2,2,2,0,2,2,2,0,2,2,2,2,2,2,0,0,2,2,0,2,2,2,2,52,52,0,0,0,10,11,12,10,11,12,10,11,12,10,11,12,12,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,11,11,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,11,12,0,11,12,10,11,0,10,11,12,10,11,12,10,11,12,10,11,12,10,11,12,10,10,11,12,11,12,0,0,21,22,0,0,20,0,0,0,19,19,19,0,20,20,19,19,19,0,20,0,20,17,20,36,21,22,17,23,19,20,36,21,22,17,23,19,20,21,22,17,23,20,21,22,17,23,20,21,22,17,23,20,21,22,17,23,20,21,22,17,23,20,36,21,22,17,23,19,20,36,21,22,17,23,19,20,21,22,17,23,20,36,21,22,17,23,19,23,36,20,21,22,17,23,19,20,21,22,17,23,19,20,36,21,22,17,23,19,20,21,22,17,23,20,21,22,17,23,23,17,20,36,21,22,17,23,19,20,36,21,22,17,23,19,23,23,36,36,17,17,20,21,22,17,23,17,20,21,22,17,23,20,21,22,17,23,36,20,36,21,22,17,23,19,20,36,21,22,17,23,19,20,36,21,22,17,23,19,53,17,17,20,36,21,22,17,23,19,36,54,55,56,57,58,59,0,0,0,38,0,39,39,0,38,0,0,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,60,38,39,38,39,38,39,38,39,38,39,40,39,38,39,38,39,61,62,63,64,65,65,0,48,45,46,45,46,48,0,0,0,0,48,45,46,0,0,66,45,46,47,45,46,48,47,45,46,48,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,48,47,45,46,48,47,45,46,47,45,46,48,47,45,46,66,45,46,47,47,45,46,48,48,47,45,46,48,47,45,46,47,45,46,47,47,45,46,48,47,47,45,46,48,0,47,47,48,47,45,46,47,47,45,46,47,45,46,48,47,45,46,48,47,45,46,48,47,47,47,45,46,48,47,47,47,45,46,48,67,68,69,70,71,72,73,73,73],"f":[0,0,0,[[]],[[]],0,[1],[1],[1],0,[[2,3],4],[[2,3],4],[[]],[[],1],[[]],[2,5],0,0,[6],[[],7],0,[[],8],[[],8],[[],9],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[],12],[1],[1],[1],[1],[1],[1],[[],[[8,[10]]]],[[],[[8,[11]]]],[[],[[8,[12]]]],[1],[1],[1],[[10,10],5],[[11,11],5],[[12,12],5],0,[11,12],[[10,3],4],[[11,3],4],[[12,3],4],[[]],[[]],[[]],[10],[11],[12],[[],1],[[],1],[[],1],[[]],[[]],[[]],0,0,[13,14],0,0,0,0,0,[10,8],[11,8],[12,8],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],0,0,[15,[[8,[14]]]],[16,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,18,17],[[8,[17,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[17,17],[23,23],[[]],[[]],[[]],[[]],[[]],[[],[[8,[20,24]]]],[[],[[8,[21,24]]]],[[],[[8,[22,24]]]],[[],[[8,[17,24]]]],[[],[[8,[23,24]]]],[20,[[8,[1,25]]]],[21,[[8,[1,25]]]],[22,[[8,[1,25]]]],[17,[[8,[1,25]]]],[23,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[8,[20]]]],[[],[[8,[21]]]],[[],[[8,[22]]]],[[],[[8,[17]]]],[[],[[8,[23]]]],[1],[1],[1],[1],[1],[1],[1],0,0,[[20,20],5],[[21,21],5],[[22,22],5],[[17,17],5],[[23,23],5],[[19,19],5],[[20,3],4],[[21,3],4],[[22,3],4],[[17,3],4],[[23,3],4],[[19,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[27]]]],[[],[[8,[27]]]],[[],[[8,[27]]]],[[],[[8,[27]]]],[[],[[8,[27]]]],[20],[21],[22],[17],[23,28],[23],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[29,[32,[30,[31,[20]]]],33],17],0,[20,8],[21,8],[22,8],[17,8],[23,8],0,[[],[[31,[34,35]]]],[[],[[31,[34,35]]]],[[],[[31,[34,35]]]],[[],[[31,[34,35]]]],[[],[[31,[34,35]]]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],36],[[17,33],[[8,[19]]]],[[17,37],[[8,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[38,38],[39,39],[[]],[[]],[1],[1],[1],[1],[[],[[8,[38]]]],[[],[[8,[39]]]],[1],[1],[[38,38],5],[[39,39],5],[[38,3],4],[[39,3],4],[[]],[[]],[38],[39],[[],1],[[],1],[[]],[[]],[[],5],[38,5],[39,5],[38,8],[39,8],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[39,[[8,[2]]]],[39,[[8,[40,2]]]],[[],9],[[],9],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],41],[42,43],[[],44],[45,44],[46,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[45,45],[46,46],[[]],[[]],[[]],[[],[[8,[47,24]]]],[[],[[8,[45,24]]]],[[],[[8,[46,24]]]],[47,[[8,[1,25]]]],[45,[[8,[1,25]]]],[46,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[8,[47]]]],[[],[[8,[45]]]],[[],[[8,[46]]]],[1],[1],[1],[1],[[47,47],5],[[45,45],5],[[46,46],5],[12,44],[[45,12],44],[[46,12],44],[[47,12],44],[[47,3],4],[[45,3],4],[[46,3],4],[[48,3],4],[[48,3],4],[[]],[[]],[[]],[[]],[[],[[8,[27]]]],[[],[[8,[27]]]],[[],[[8,[27]]]],[47],[45],[46],[47,44],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[42,49],[47,44],0,[6],[47,8],[45,8],[46,8],0,[[],[[31,[34,35]]]],[[],[[31,[34,35]]]],[[],[[31,[34,35]]]],[[]],[[]],[[]],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[47,50],[[],50],[[],9],[[],9],[[],9],[[],9],[[47,12],[[8,[48]]]],[[47,51],[[8,[48]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0],"p":[[15,"usize"],[4,"CoreError"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Node"],[3,"ClientConfig"],[3,"FeeConsensus"],[3,"Path"],[8,"DeserializeOwned"],[8,"Deserializer"],[8,"Serializer"],[3,"EpochHistory"],[3,"PublicKeySet"],[4,"EpochVerifyError"],[4,"ConsensusItem"],[3,"EpochSignatureShare"],[3,"EpochSignature"],[3,"OutcomeHistory"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[4,"DecodingError"],[3,"Hash"],[15,"u64"],[3,"PeerId"],[3,"Vec"],[3,"BTreeMap"],[4,"Option"],[15,"u8"],[3,"Global"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[4,"TransactionStatus"],[4,"OutputOutcome"],[8,"TryIntoOutcome"],[3,"XOnlyPublicKey"],[3,"Secp256k1"],[3,"Signature"],[3,"Amount"],[4,"Input"],[4,"Output"],[3,"Transaction"],[4,"TransactionError"],[3,"MusigKeyAggCache"],[3,"TransactionId"],[8,"Iterator"],[13,"MismatchingVariant"],[8,"IterUnzipConsensusItem"],[13,"EpochInfo"],[13,"Transaction"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"NotEnoughValidSigShares"],[8,"Final"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"Rejected"],[13,"Accepted"],[8,"TransactionItem"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"UnbalancedTransaction"]]},\
"fedimint_core_api":{"doc":"Fedimint Core API (common) module interface","t":[12,12,12,12,12,12,4,3,3,8,8,6,8,8,8,8,3,3,3,8,8,8,8,8,3,13,3,3,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,10,14,10,10,10,10,10,10,10,10,10,10,10,14,11,11,12,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,8,16,3,8,16,16,16,16,3,16,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,12,11,11,11,11,10,10,11,11,11,10,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,5,12,12,12,12,3,3,16,3,16,4,8,16,3,8,8,8,16,16,16,8,8,3,8,13,16,3,16,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11],"n":["0","0","0","0","0","0","FinalizationError","Input","KeyPair","ModuleCommon","ModuleInput","ModuleKey","ModuleOutput","ModuleOutputOutcome","ModulePendingOutput","ModuleSpendableOutput","Output","OutputOutcome","PendingOutput","PluginInput","PluginOutput","PluginOutputOutcome","PluginPendingOutput","PluginSpendableOutput","Signature","SomethingWentWrong","SpendableOutput","Transaction","add_xonly_tweak","amount","amount","amount","amount","amount","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","display_secret","encode","eq","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_str","hash","inputs","into","into","into","into","into","into","into","into","into","key","key","module_dyn_newtype_impl_encode_decode","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_plugin_trait_define","new","new_global","outputs","partial_cmp","public_key","secret_bytes","secret_key","serialize","server","sign_schnorr","signature","tap_tweak","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x_only_public_key","0","ClientModule","ClientModulePlugin","Common","FedimintClientCore","IClientModule","Input","Output","OutputOutcome","PendingOutput","PollPendingOutputs","SpendableOutput","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_federation","clone","clone_into","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","done","from","from","from","from","init","init","into","into","into","module_key","pending","poll_pending_output","poll_pending_outputs","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ModuleDecodable","consensus_decode","module_decode_key_prefixed_decodable","0","0","0","0","ApiEndpoint","ApiHandler","Common","ConsensusItem","ConsensusItem","Error","IServerModule","Input","InputMeta","ModuleApiHandler","ModuleConsensusItem","ModuleVerificationCache","Output","OutputOutcome","PendingOutput","PluginConsensusItem","PluginVerificationCache","ServerModule","ServerModulePlugin","SomethingWentWrong","SpendableOutput","VerificationCache","VerificationCache","amount","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","clone","clone","clone","clone","clone_into","clone_into","consensus_proposal","consensus_proposal","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","end_consensus_epoch","end_consensus_epoch","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","handle","handler","init","init","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","output_status","output_status","path","provide","puk_keys","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_core_apifedimint_core_api::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core_api::encode","","","fedimint_core_api::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","An owned, immutable input to a <code>Transaction</code>","Opaque data structure that holds a keypair consisting of a …","Common functionality of a Fedimint module","Something that can be an <code>Input</code> in a <code>Transaction</code>","A module key identifing a module","Something that can be an <code>Output</code> in a <code>Transaction</code>","","A pending output - tracked and persisted by the client","A spendable output - tracked and persisted by the client","An owned, immutable output of a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","An owned, immutable output of a <code>Transaction</code> before it was …","","","","","","","","An owned, immutable output of a <code>Transaction</code> after it was …","Transaction that was already signed","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Input</code> compatible with this module, after the module …","Decode <code>Output</code> compatible with this module, after the …","Decode <code>OutputOutcome</code> compatible with this module, after …","Decode <code>PendingOutput</code> compatible with this module, after …","Decode <code>SpendableOutput</code> compatible with this module, after …","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Prepare <code>Input</code> spending thish output in a transaction, and …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","","","Module key","Module key","Module key","","","","","","Define a “plugin” trait","Generates a new random secret key.","Generates a new random secret key using the global …","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","Client side module interface","","","","","Result of <code>ClientModulePlugin::poll_pending_outputs</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","<code>core</code> passed by value, so the module can store it","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Value that can be decoded, but only using the required …","Decode an object with a well-defined format","","","","","","Api Endpoint exposed by a server side module","<code>ApiEndpoint</code> handler exposed by the server side module","","","","","Backend side module interface","","","","","","","","","","","","","","","","","","Defines the prefix for API endpoints defined by the module.","Defines the prefix for API endpoints defined by the module.","Returns a list of custom API endpoints defined by the …","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","Queries the database and returns all assets and …","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","This function is called once before transaction processing …","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","Some modules may have slow to verify inputs that would …","","","","","","","This module’s contribution to the next consensus proposal","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","This function is called once all transactions have been …","This function is called once all transactions have been …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Initialize the module on registration in Fedimint","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieve the current status of the output. Depending on …","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","",""],"i":[9,10,11,12,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,1,66,67,68,69,70,71,72,73,66,67,68,69,74,1,1,45,9,10,11,12,13,17,18,1,45,9,10,11,12,13,17,18,1,0,66,67,68,69,74,9,10,11,12,13,1,9,10,11,12,13,1,1,9,9,10,10,11,11,12,12,13,13,17,18,1,9,10,11,12,13,17,18,1,9,10,11,12,13,17,18,1,1,75,75,75,75,75,9,10,11,12,13,9,10,11,12,13,1,1,0,1,1,45,9,9,10,10,11,11,12,12,13,13,17,18,1,1,1,1,1,1,1,1,1,18,45,9,10,11,12,13,17,18,1,68,72,0,75,66,67,68,69,74,70,71,72,73,76,0,1,1,18,1,1,1,1,1,0,1,18,1,1,9,10,11,12,13,1,45,9,10,11,12,13,17,18,1,45,9,10,11,12,13,17,18,1,1,45,9,10,11,12,13,17,18,1,45,9,10,11,12,13,17,18,1,1,43,0,0,77,0,0,77,77,77,77,0,77,42,44,43,42,44,43,42,43,43,78,78,78,78,78,43,44,42,44,43,43,78,77,42,44,43,78,44,78,77,43,42,44,43,42,44,43,42,44,43,42,44,43,0,79,0,61,59,49,60,0,0,80,0,80,0,0,80,0,0,0,0,80,80,80,0,0,0,0,51,80,0,80,50,81,80,81,80,81,80,81,80,82,83,81,80,81,80,81,80,46,50,61,59,49,51,60,46,50,61,59,49,51,60,81,80,82,83,59,60,59,60,81,80,81,81,81,81,81,61,59,49,60,61,59,49,81,80,51,51,46,50,61,61,59,59,49,49,51,60,60,84,46,81,80,46,50,61,59,49,51,60,82,83,85,86,81,81,80,46,51,50,59,60,51,46,50,61,59,49,51,60,46,50,61,59,49,51,60,46,50,61,59,49,51,60,81,80,81,80,46,50,61,59,49,51,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[1,4]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[1,8],[1,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],10],[[],11],[[],12],[[],13],[9,9],[10,10],[11,11],[12,12],[13,13],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],14],[15,[[5,[9,16]]]],[15,[[5,[9,16]]]],[15,[[5,[10,16]]]],[15,[[5,[10,16]]]],[15,[[5,[11,16]]]],[15,[[5,[11,16]]]],[15,[[5,[12,16]]]],[15,[[5,[12,16]]]],[15,[[5,[13,16]]]],[15,[[5,[13,16]]]],[[],[[5,[17,16]]]],[15,[[5,[18,16]]]],[[],[[5,[1,16]]]],[9,[[5,[19,20]]]],[10,[[5,[19,20]]]],[11,[[5,[19,20]]]],[12,[[5,[19,20]]]],[13,[[5,[19,20]]]],[17,[[5,[19,20]]]],[18,[[5,[19,20]]]],[1,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[1,22],[23,[[5,[9,16]]]],[23,[[5,[10,16]]]],[23,[[5,[13,16]]]],[23,[[5,[12,16]]]],[23,[[5,[11,16]]]],[9],[10],[11],[12],[13],[9],[10],[11],[12],[13],[[],[[5,[1]]]],[1,24],0,[[1,1],25],[[1,26],[[5,[27]]]],[[]],[[],9],[[]],[[],10],[[]],[[],11],[[]],[[],12],[[]],[[],13],[[]],[[]],[[]],[[]],[22,1],[[],[[5,[28]]]],[2,[[5,[1,4]]]],[[2,29],[[5,[1,4]]]],[29,[[5,[1,4]]]],[[2,30],1],[29,[[5,[1]]]],[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,[2,1],[[],1],0,[[1,1],[[33,[14]]]],[1,34],[1],[1,30],[1,5],0,[[1,35],36],0,[[1,2,[33,[37]]],22],[[],[[40,[38,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[1,2,3],[[5,[4]]]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[42,29],[[40,[38]]]],[43,43],[[]],[23,[[5,[9,16]]]],[23,[[5,[10,16]]]],[23,[[5,[13,16]]]],[23,[[5,[12,16]]]],[23,[[5,[11,16]]]],[43],0,[[]],[[]],[[],43],[[]],[42],[42],[[]],[[]],[[]],[[],32],0,[[[40,[12]]],[[5,[[44,[11,12]],45]]]],[40,[[5,[44,45]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],41],[[],41],[[],41],[[]],[[]],[[]],0,[15,[[5,[16]]]],[15,[[5,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[],[[40,[46]]]],[[],[[40,[46]]]],[[47,48,9,49],[[5,[50,51]]]],[[47,48],[[5,[50,51]]]],[[48,10,52],[[5,[6,51]]]],[[48,52],[[5,[6,51]]]],[[],7],[[],7],[53],[53],[[],[[56,[[55,[54]]]]]],[[],[[56,[[55,[54]]]]]],[[48,40],[[56,[[55,[54]]]]]],[[48,40],[[56,[[55,[54]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[[0,[57,58]]]],[[],59],[[],49],[59,59],[60,60],[[]],[[]],[[],[[56,[[55,[54]]]]]],[[],[[56,[[55,[54]]]]]],[23,[[5,[9,16]]]],[23,[[5,[10,16]]]],[23,[[5,[13,16]]]],[23,[[5,[12,16]]]],[23,[[5,[11,16]]]],[61],[59],[49],[60],[61],[59],[49],[[62,48],[[56,[[55,[54]]]]]],[[62,48],[[56,[[55,[54]]]]]],[[51,26],63],[[51,26],63],[[]],[[]],[[],61],[[]],[[],59],[[]],[[],49],[[]],[[]],[[],60],[[]],[64,[[56,[[55,[54]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],32],[52,[[33,[13]]]],[52,33],0,[65],0,[[]],[[]],[[],31],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[47,49,9],[[5,[50,51]]]],[47,[[5,[50,51]]]],[10,[[5,[6,51]]]],[[],[[5,[6,51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"KeyPair"],[3,"Secp256k1"],[3,"Scalar"],[4,"Error"],[4,"Result"],[3,"Amount"],[8,"Any"],[3,"KeyPair"],[3,"Input"],[3,"Output"],[3,"SpendableOutput"],[3,"PendingOutput"],[3,"OutputOutcome"],[4,"Ordering"],[3,"BTreeMap"],[3,"DecodeError"],[3,"Signature"],[3,"Transaction"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"TweakedKeyPair"],[8,"Read"],[3,"DisplaySecret"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"DecodingError"],[15,"str"],[3,"SecretKey"],[3,"String"],[6,"ModuleKey"],[4,"Option"],[3,"PublicKey"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[15,"u8"],[3,"Global"],[3,"Vec"],[3,"TypeId"],[3,"FedimintClientCore"],[3,"ClientModule"],[3,"PollPendingOutputs"],[4,"FinalizationError"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[6,"BatchTx"],[3,"VerificationCache"],[3,"InputMeta"],[4,"Error"],[3,"OutPoint"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Iterator"],[8,"Send"],[3,"ConsensusItem"],[3,"ServerModule"],[3,"ApiHandler"],[3,"HashSet"],[6,"Result"],[4,"Value"],[3,"Demand"],[8,"ModuleInput"],[8,"ModuleOutput"],[8,"ModuleSpendableOutput"],[8,"ModulePendingOutput"],[8,"PluginInput"],[8,"PluginOutput"],[8,"PluginSpendableOutput"],[8,"PluginPendingOutput"],[8,"ModuleOutputOutcome"],[8,"ModuleCommon"],[8,"PluginOutputOutcome"],[8,"ClientModulePlugin"],[8,"IClientModule"],[8,"ModuleDecodable"],[8,"ServerModulePlugin"],[8,"IServerModule"],[8,"ModuleConsensusItem"],[8,"ModuleVerificationCache"],[8,"ModuleApiHandler"],[8,"PluginConsensusItem"],[8,"PluginVerificationCache"]]},\
"fedimint_core_client":{"doc":"Fedimint Core Client module interface","t":[12,12,12,12,12,12,12,3,8,16,3,4,8,3,16,3,8,8,6,8,8,8,8,3,16,3,16,3,16,8,8,8,8,8,3,3,13,3,16,3,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,11,11,11,11,11,11,11,11,11,10,10,14,10,10,10,10,10,10,10,10,10,10,10,10,14,11,11,12,11,12,10,10,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,8,16,3,8,16,16,16,16,3,16,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,12,11,11,11,11,10,10,11,11,11,10,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,5,12,12,12,12,3,3,16,3,16,4,8,16,3,8,8,8,16,16,16,8,8,3,8,13,16,3,16,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11],"n":["0","0","0","0","0","0","0","ClientModule","ClientModulePlugin","Common","FedimintClientCore","FinalizationError","IClientModule","Input","Input","KeyPair","ModuleCommon","ModuleInput","ModuleKey","ModuleOutput","ModuleOutputOutcome","ModulePendingOutput","ModuleSpendableOutput","Output","Output","OutputOutcome","OutputOutcome","PendingOutput","PendingOutput","PluginInput","PluginOutput","PluginOutputOutcome","PluginPendingOutput","PluginSpendableOutput","PollPendingOutputs","Signature","SomethingWentWrong","SpendableOutput","SpendableOutput","Transaction","add_xonly_tweak","amount","amount","amount","amount","amount","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","decode_pending_output","decode_pending_output","decode_spendable_output","decode_spendable_output","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","display_secret","done","encode","eq","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_str","hash","init","init","inputs","into","into","into","into","into","into","into","into","into","key","key","module_dyn_newtype_impl_encode_decode","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_plugin_trait_define","new","new_global","outputs","partial_cmp","pending","poll_pending_output","poll_pending_outputs","public_key","secret_bytes","secret_key","serialize","server","sign_schnorr","signature","tap_tweak","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x_only_public_key","0","ClientModule","ClientModulePlugin","Common","FedimintClientCore","IClientModule","Input","Output","OutputOutcome","PendingOutput","PollPendingOutputs","SpendableOutput","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_federation","clone","clone_into","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","done","from","from","from","from","init","init","into","into","into","module_key","pending","poll_pending_output","poll_pending_outputs","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ModuleDecodable","consensus_decode","module_decode_key_prefixed_decodable","0","0","0","0","ApiEndpoint","ApiHandler","Common","ConsensusItem","ConsensusItem","Error","IServerModule","Input","InputMeta","ModuleApiHandler","ModuleConsensusItem","ModuleVerificationCache","Output","OutputOutcome","PendingOutput","PluginConsensusItem","PluginVerificationCache","ServerModule","ServerModulePlugin","SomethingWentWrong","SpendableOutput","VerificationCache","VerificationCache","amount","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","clone","clone","clone","clone","clone_into","clone_into","consensus_proposal","consensus_proposal","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","end_consensus_epoch","end_consensus_epoch","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","handle","handler","init","init","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","output_status","output_status","path","provide","puk_keys","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_core_clientfedimint_core_client::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core_client::encode","","","fedimint_core_client::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Client side module interface","An owned, immutable input to a <code>Transaction</code>","","Opaque data structure that holds a keypair consisting of a …","Common functionality of a Fedimint module","Something that can be an <code>Input</code> in a <code>Transaction</code>","A module key identifing a module","Something that can be an <code>Output</code> in a <code>Transaction</code>","","A pending output - tracked and persisted by the client","A spendable output - tracked and persisted by the client","An owned, immutable output of a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code> before it was …","","An owned, immutable output of a <code>Transaction</code> before it was …","","","","","","","Result of <code>ClientModulePlugin::poll_pending_outputs</code>","","","An owned, immutable output of a <code>Transaction</code> after it was …","","Transaction that was already signed","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Input</code> compatible with this module, after the module …","","Decode <code>Output</code> compatible with this module, after the …","","Decode <code>OutputOutcome</code> compatible with this module, after …","","Decode <code>PendingOutput</code> compatible with this module, after …","","Decode <code>SpendableOutput</code> compatible with this module, after …","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","<code>core</code> passed by value, so the module can store it","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Prepare <code>Input</code> spending thish output in a transaction, and …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","","","","Module key","Module key","Module key","","","","","","Define a “plugin” trait","Generates a new random secret key.","Generates a new random secret key using the global …","","","","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","Client side module interface","","","","","Result of <code>ClientModulePlugin::poll_pending_outputs</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","<code>core</code> passed by value, so the module can store it","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Value that can be decoded, but only using the required …","Decode an object with a well-defined format","","","","","","Api Endpoint exposed by a server side module","<code>ApiEndpoint</code> handler exposed by the server side module","","","","","Backend side module interface","","","","","","","","","","","","","","","","","","Defines the prefix for API endpoints defined by the module.","Defines the prefix for API endpoints defined by the module.","Returns a list of custom API endpoints defined by the …","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","Queries the database and returns all assets and …","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","This function is called once before transaction processing …","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","Some modules may have slow to verify inputs that would …","","","","","","","This module’s contribution to the next consensus proposal","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","This function is called once all transactions have been …","This function is called once all transactions have been …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Initialize the module on registration in Fedimint","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieve the current status of the output. Depending on …","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","",""],"i":[45,9,10,11,12,13,1,0,0,66,0,0,0,0,66,0,0,0,0,0,0,0,0,0,66,0,66,0,66,0,0,0,0,0,0,0,38,0,66,0,1,67,68,69,70,71,72,73,74,67,68,69,70,75,1,1,38,9,10,11,12,13,17,18,1,38,9,10,11,12,13,17,18,1,0,67,68,69,70,75,9,10,11,12,13,1,9,10,11,12,13,1,1,9,9,10,10,11,11,12,12,13,13,17,18,1,9,10,11,12,13,17,18,1,9,10,11,12,13,17,18,1,1,76,77,76,77,76,77,76,77,76,77,9,10,11,12,13,9,10,11,12,13,1,1,37,0,1,1,38,9,9,10,10,11,11,12,12,13,13,17,18,1,1,1,1,1,1,1,1,1,76,66,18,38,9,10,11,12,13,17,18,1,69,73,0,76,77,67,68,69,70,75,71,72,73,74,78,0,1,1,18,1,37,76,66,1,1,1,1,0,1,18,1,1,9,10,11,12,13,1,38,9,10,11,12,13,17,18,1,38,9,10,11,12,13,17,18,1,1,38,9,10,11,12,13,17,18,1,38,9,10,11,12,13,17,18,1,1,45,0,0,66,0,0,66,66,66,66,0,66,31,37,45,31,37,45,31,45,45,76,76,76,76,76,45,37,31,37,45,45,76,66,31,37,45,76,37,76,66,45,31,37,45,31,37,45,31,37,45,31,37,45,0,79,0,62,60,50,61,0,0,80,0,80,0,0,80,0,0,0,0,80,80,80,0,0,0,0,52,80,0,80,51,81,80,81,80,81,80,81,80,82,83,81,80,81,80,81,80,46,51,62,60,50,52,61,46,51,62,60,50,52,61,81,80,82,83,60,61,60,61,81,80,81,81,81,81,81,62,60,50,61,62,60,50,81,80,52,52,46,51,62,62,60,60,50,50,52,61,61,84,46,81,80,46,51,62,60,50,52,61,82,83,85,86,81,81,80,46,52,51,60,61,52,46,51,62,60,50,52,61,46,51,62,60,50,52,61,46,51,62,60,50,52,61,81,80,81,80,46,51,62,60,50,52,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[1,4]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[1,8],[1,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],10],[[],11],[[],12],[[],13],[9,9],[10,10],[11,11],[12,12],[13,13],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],14],[15,[[5,[9,16]]]],[15,[[5,[9,16]]]],[15,[[5,[10,16]]]],[15,[[5,[10,16]]]],[15,[[5,[11,16]]]],[15,[[5,[11,16]]]],[15,[[5,[12,16]]]],[15,[[5,[12,16]]]],[15,[[5,[13,16]]]],[15,[[5,[13,16]]]],[[],[[5,[17,16]]]],[15,[[5,[18,16]]]],[[],[[5,[1,16]]]],[9,[[5,[19,20]]]],[10,[[5,[19,20]]]],[11,[[5,[19,20]]]],[12,[[5,[19,20]]]],[13,[[5,[19,20]]]],[17,[[5,[19,20]]]],[18,[[5,[19,20]]]],[1,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[21,[[5,[19,20]]]],[1,22],[23,[[5,[9,16]]]],[23,[[5,[9,16]]]],[23,[[5,[10,16]]]],[23,[[5,[10,16]]]],[23,[[5,[13,16]]]],[23,[[5,[13,16]]]],[23,[[5,[12,16]]]],[23,[[5,[12,16]]]],[23,[[5,[11,16]]]],[23,[[5,[11,16]]]],[9],[10],[11],[12],[13],[9],[10],[11],[12],[13],[[],[[5,[1]]]],[1,24],0,0,[[1,1],25],[[1,26],[[5,[27]]]],[[]],[[]],[[],9],[[]],[[],10],[[]],[[],11],[[]],[[],12],[[]],[[],13],[[]],[[]],[[]],[22,1],[[],[[5,[28]]]],[2,[[5,[1,4]]]],[[2,29],[[5,[1,4]]]],[29,[[5,[1,4]]]],[[2,30],1],[29,[[5,[1]]]],[1],[31],[31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],0,[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[2,1],[[],1],0,[[1,1],[[34,[14]]]],0,[[[36,[12,35]]],[[5,[[37,[11,12]],38]]]],[[[36,[35]]],[[5,[37,38]]]],[1,39],[1],[1,30],[1,5],0,[[1,40],41],0,[[1,2,[34,[42]]],22],[[],[[36,[43,35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[1,2,3],[[5,[4]]]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[31,29],[[36,[43,35]]]],[45,45],[[]],[23,[[5,[9,16]]]],[23,[[5,[10,16]]]],[23,[[5,[13,16]]]],[23,[[5,[12,16]]]],[23,[[5,[11,16]]]],[45],0,[[]],[[]],[[]],[[],45],[31],[31],[[]],[[]],[[]],[[],33],0,[[[36,[12,35]]],[[5,[[37,[11,12]],38]]]],[[[36,[35]]],[[5,[37,38]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],44],[[],44],[[],44],[[]],[[]],[[]],0,[15,[[5,[16]]]],[15,[[5,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[],[[36,[46,35]]]],[[],[[36,[46,35]]]],[[47,[49,[48]],9,50],[[5,[51,52]]]],[[47,[49,[48]]],[[5,[51,52]]]],[[[49,[48]],10,53],[[5,[6,52]]]],[[[49,[48]],53],[[5,[6,52]]]],[[],7],[[],7],[54],[54],[[],[[57,[[56,[55,35]]]]]],[[],[[57,[[56,[55,35]]]]]],[[[49,[48]],[36,[35]]],[[57,[[56,[55,35]]]]]],[[[49,[48]],[36,[35]]],[[57,[[56,[55,35]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[[0,[58,59]]]],[[],60],[[],50],[60,60],[61,61],[[]],[[]],[[],[[57,[[56,[55,35]]]]]],[[],[[57,[[56,[55,35]]]]]],[23,[[5,[9,16]]]],[23,[[5,[10,16]]]],[23,[[5,[13,16]]]],[23,[[5,[12,16]]]],[23,[[5,[11,16]]]],[62],[60],[50],[61],[62],[60],[50],[[63,[49,[48]]],[[57,[[56,[55,35]]]]]],[[63,[49,[48]]],[[57,[[56,[55,35]]]]]],[[52,26],[[5,[27]]]],[[52,26],[[5,[27]]]],[[]],[[]],[[],62],[[]],[[]],[[],60],[[],50],[[]],[[]],[[],61],[[]],[64,[[57,[[56,[55,35]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[53,[[34,[13]]]],[53,34],0,[65],0,[[]],[[]],[[],32],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[47,50,9],[[5,[51,52]]]],[47,[[5,[51,52]]]],[10,[[5,[6,52]]]],[[],[[5,[6,52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"KeyPair"],[3,"Secp256k1"],[3,"Scalar"],[4,"Error"],[4,"Result"],[3,"Amount"],[8,"Any"],[3,"KeyPair"],[3,"Input"],[3,"Output"],[3,"SpendableOutput"],[3,"PendingOutput"],[3,"OutputOutcome"],[4,"Ordering"],[3,"BTreeMap"],[3,"DecodeError"],[3,"Signature"],[3,"Transaction"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"TweakedKeyPair"],[8,"Read"],[3,"DisplaySecret"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"DecodingError"],[15,"str"],[3,"SecretKey"],[3,"FedimintClientCore"],[3,"String"],[15,"u16"],[4,"Option"],[3,"Global"],[3,"Vec"],[3,"PollPendingOutputs"],[4,"FinalizationError"],[3,"PublicKey"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[15,"u8"],[3,"TypeId"],[3,"ClientModule"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[4,"BatchItem"],[3,"AccumulatorTx"],[3,"VerificationCache"],[3,"InputMeta"],[4,"Error"],[3,"OutPoint"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Iterator"],[8,"Send"],[3,"ConsensusItem"],[3,"ServerModule"],[3,"ApiHandler"],[3,"HashSet"],[4,"Value"],[3,"Demand"],[8,"ClientModulePlugin"],[8,"ModuleInput"],[8,"ModuleOutput"],[8,"ModuleSpendableOutput"],[8,"ModulePendingOutput"],[8,"PluginInput"],[8,"PluginOutput"],[8,"PluginSpendableOutput"],[8,"PluginPendingOutput"],[8,"ModuleOutputOutcome"],[8,"IClientModule"],[8,"ModuleCommon"],[8,"PluginOutputOutcome"],[8,"ModuleDecodable"],[8,"ServerModulePlugin"],[8,"IServerModule"],[8,"ModuleConsensusItem"],[8,"ModuleVerificationCache"],[8,"ModuleApiHandler"],[8,"PluginConsensusItem"],[8,"PluginVerificationCache"]]},\
"fedimint_core_server":{"doc":"","t":[12,12,12,12,12,12,12,12,12,12,3,3,16,3,16,4,4,8,3,16,3,3,8,8,8,8,6,8,8,8,8,8,3,16,3,16,3,16,8,8,8,8,8,8,8,3,8,3,13,13,3,16,3,3,16,11,10,10,10,10,10,10,10,10,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,0,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,10,10,12,11,11,11,11,11,11,11,11,11,10,10,14,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,14,11,11,10,10,12,11,12,11,12,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,3,8,16,3,8,16,16,16,16,3,16,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,12,11,11,11,11,10,10,11,11,11,10,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,5,12,12,12,12,3,3,16,3,16,4,8,16,3,8,8,8,16,16,16,8,8,3,8,13,16,3,16,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11],"n":["0","0","0","0","0","0","0","0","0","0","ApiEndpoint","ApiHandler","Common","ConsensusItem","ConsensusItem","Error","FinalizationError","IServerModule","Input","Input","InputMeta","KeyPair","ModuleApiHandler","ModuleCommon","ModuleConsensusItem","ModuleInput","ModuleKey","ModuleOutput","ModuleOutputOutcome","ModulePendingOutput","ModuleSpendableOutput","ModuleVerificationCache","Output","Output","OutputOutcome","OutputOutcome","PendingOutput","PendingOutput","PluginConsensusItem","PluginInput","PluginOutput","PluginOutputOutcome","PluginPendingOutput","PluginSpendableOutput","PluginVerificationCache","ServerModule","ServerModulePlugin","Signature","SomethingWentWrong","SomethingWentWrong","SpendableOutput","SpendableOutput","Transaction","VerificationCache","VerificationCache","add_xonly_tweak","amount","amount","amount","amount","amount","amount","amount","amount","amount","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","dangerous_assume_tweaked","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","decode_pending_output","decode_pending_output","decode_spendable_output","decode_spendable_output","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","display_secret","encode","end_consensus_epoch","end_consensus_epoch","eq","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_str","handle","handler","hash","init","init","inputs","into","into","into","into","into","into","into","into","into","key","key","module_dyn_newtype_impl_encode_decode","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_plugin_trait_define","new","new_global","output_status","output_status","outputs","partial_cmp","path","public_key","puk_keys","secret_bytes","secret_key","serialize","server","sign_schnorr","signature","tap_tweak","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x_only_public_key","0","ClientModule","ClientModulePlugin","Common","FedimintClientCore","IClientModule","Input","Output","OutputOutcome","PendingOutput","PollPendingOutputs","SpendableOutput","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_federation","clone","clone_into","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","done","from","from","from","from","init","init","into","into","into","module_key","pending","poll_pending_output","poll_pending_outputs","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ModuleDecodable","consensus_decode","module_decode_key_prefixed_decodable","0","0","0","0","ApiEndpoint","ApiHandler","Common","ConsensusItem","ConsensusItem","Error","IServerModule","Input","InputMeta","ModuleApiHandler","ModuleConsensusItem","ModuleVerificationCache","Output","OutputOutcome","PendingOutput","PluginConsensusItem","PluginVerificationCache","ServerModule","ServerModulePlugin","SomethingWentWrong","SpendableOutput","VerificationCache","VerificationCache","amount","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","clone","clone","clone","clone","clone_into","clone_into","consensus_proposal","consensus_proposal","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","end_consensus_epoch","end_consensus_epoch","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","handle","handler","init","init","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","output_status","output_status","path","provide","puk_keys","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_core_serverfedimint_core_server::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core_server::encode","","","fedimint_core_server::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Api Endpoint exposed by a server side module","<code>ApiEndpoint</code> handler exposed by the server side module","","","","","","Backend side module interface","An owned, immutable input to a <code>Transaction</code>","","","Opaque data structure that holds a keypair consisting of a …","","Common functionality of a Fedimint module","","Something that can be an <code>Input</code> in a <code>Transaction</code>","A module key identifing a module","Something that can be an <code>Output</code> in a <code>Transaction</code>","","A pending output - tracked and persisted by the client","A spendable output - tracked and persisted by the client","","An owned, immutable output of a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code> before it was …","","An owned, immutable output of a <code>Transaction</code> before it was …","","","","","","","","","","","","","","An owned, immutable output of a <code>Transaction</code> after it was …","","Transaction that was already signed","","","Tweaks a keypair by first converting the public key to an …","","","","","","","","","","Defines the prefix for API endpoints defined by the module.","Defines the prefix for API endpoints defined by the module.","Returns a list of custom API endpoints defined by the …","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","Queries the database and returns all assets and …","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","This module’s contribution to the next consensus proposal","","Decode <code>Input</code> compatible with this module, after the module …","","Decode <code>Output</code> compatible with this module, after the …","","Decode <code>OutputOutcome</code> compatible with this module, after …","","Decode <code>PendingOutput</code> compatible with this module, after …","","Decode <code>SpendableOutput</code> compatible with this module, after …","","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","This function is called once all transactions have been …","This function is called once all transactions have been …","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","","Initialize the module on registration in Fedimint","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Prepare <code>Input</code> spending thish output in a transaction, and …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","","","","","","Module key","Module key","Module key","","","","","","","","","Define a “plugin” trait","Generates a new random secret key.","Generates a new random secret key using the global …","Retrieve the current status of the output. Depending on …","Retrieve the current status of the output. Depending on …","","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","Client side module interface","","","","","Result of <code>ClientModulePlugin::poll_pending_outputs</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","<code>core</code> passed by value, so the module can store it","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Value that can be decoded, but only using the required …","Decode an object with a well-defined format","","","","","","Api Endpoint exposed by a server side module","<code>ApiEndpoint</code> handler exposed by the server side module","","","","","Backend side module interface","","","","","","","","","","","","","","","","","","Defines the prefix for API endpoints defined by the module.","Defines the prefix for API endpoints defined by the module.","Returns a list of custom API endpoints defined by the …","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","Queries the database and returns all assets and …","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","This function is called once before transaction processing …","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","Some modules may have slow to verify inputs that would …","","","","","","","This module’s contribution to the next consensus proposal","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","This function is called once all transactions have been …","This function is called once all transactions have been …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Initialize the module on registration in Fedimint","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieve the current status of the output. Depending on …","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","",""],"i":[64,28,15,63,14,18,29,30,31,1,0,0,66,0,66,0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,66,0,66,0,0,0,0,0,0,0,0,0,0,62,17,0,66,0,0,66,1,67,68,69,70,71,72,73,74,16,75,66,75,66,75,66,75,66,76,77,67,68,69,70,78,1,1,75,66,75,66,75,66,62,14,18,29,30,31,35,36,1,62,14,18,29,30,31,35,36,1,75,66,0,76,77,67,68,69,70,78,14,18,29,30,31,1,14,18,29,30,31,1,1,14,14,18,18,29,29,30,30,31,31,35,36,1,14,18,29,30,31,35,36,1,14,18,29,30,31,35,36,1,75,66,1,79,75,79,75,79,75,79,75,79,75,14,18,29,30,31,14,18,29,30,31,1,1,0,75,66,1,1,62,14,14,18,18,29,29,30,30,31,31,35,36,1,1,1,1,1,1,1,1,80,8,1,75,66,36,62,14,18,29,30,31,35,36,1,69,73,0,76,77,79,67,68,69,70,78,81,82,75,71,72,73,74,83,0,1,1,75,66,36,1,8,1,16,1,1,1,0,1,36,1,1,14,18,29,30,31,1,62,14,18,29,30,31,35,36,1,62,14,18,29,30,31,35,36,1,1,62,14,18,29,30,31,35,36,1,75,66,75,66,62,14,18,29,30,31,35,36,1,1,60,0,0,84,0,0,84,84,84,84,0,84,59,61,60,59,61,60,59,60,60,85,85,85,85,85,60,61,59,61,60,60,85,84,59,61,60,85,61,85,84,60,59,61,60,59,61,60,59,61,60,59,61,60,0,86,0,64,28,15,63,0,0,66,0,66,0,0,66,0,0,0,0,66,66,66,0,0,0,0,17,66,0,66,16,75,66,75,66,75,66,75,66,76,77,75,66,75,66,75,66,8,16,64,28,15,17,63,8,16,64,28,15,17,63,75,66,76,77,28,63,28,63,75,66,75,75,75,75,75,64,28,15,63,64,28,15,75,66,17,17,8,16,64,64,28,28,15,15,17,63,63,80,8,75,66,8,16,64,28,15,17,63,76,77,81,82,75,75,66,8,17,16,28,63,17,8,16,64,28,15,17,63,8,16,64,28,15,17,63,8,16,64,28,15,17,63,75,66,75,66,8,16,64,28,15,17,63],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[1,4]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],7],[[],7],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[11,[13,[12]],14,15],[[5,[16,17]]]],[[11,[13,[12]]],[[5,[16,17]]]],[[[13,[12]],18,19],[[5,[6,17]]]],[[[13,[12]],19],[[5,[6,17]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[1,21],[1,21],[22],[22],[[],[[25,[[24,[23,9]]]]]],[[],[[25,[[24,[23,9]]]]]],[[[13,[12]],[10,[9]]],[[25,[[24,[23,9]]]]]],[[[13,[12]],[10,[9]]],[[25,[[24,[23,9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[[0,[26,27]]]],0,[[],28],[[],15],[[],14],[[],18],[[],29],[[],30],[[],31],[14,14],[18,18],[29,29],[30,30],[31,31],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],32],[33,[[5,[14,34]]]],[33,[[5,[14,34]]]],[33,[[5,[18,34]]]],[33,[[5,[18,34]]]],[33,[[5,[29,34]]]],[33,[[5,[29,34]]]],[33,[[5,[30,34]]]],[33,[[5,[30,34]]]],[33,[[5,[31,34]]]],[33,[[5,[31,34]]]],[[],[[5,[35,34]]]],[33,[[5,[36,34]]]],[[],[[5,[1,34]]]],[14,[[5,[37,38]]]],[18,[[5,[37,38]]]],[29,[[5,[37,38]]]],[30,[[5,[37,38]]]],[31,[[5,[37,38]]]],[35,[[5,[37,38]]]],[36,[[5,[37,38]]]],[1,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[39,[[5,[37,38]]]],[[],[[25,[[24,[23,9]]]]]],[[],[[25,[[24,[23,9]]]]]],[1,40],[41,[[5,[14,34]]]],[41,[[5,[14,34]]]],[41,[[5,[18,34]]]],[41,[[5,[18,34]]]],[41,[[5,[31,34]]]],[41,[[5,[31,34]]]],[41,[[5,[30,34]]]],[41,[[5,[30,34]]]],[41,[[5,[29,34]]]],[41,[[5,[29,34]]]],[14],[18],[29],[30],[31],[14],[18],[29],[30],[31],[[],[[5,[1]]]],[1,42],0,[[43,[13,[12]]],[[25,[[24,[23,9]]]]]],[[43,[13,[12]]],[[25,[[24,[23,9]]]]]],[[1,1],44],[[1,45],[[5,[46]]]],[[]],[[],14],[[]],[[]],[[],18],[[],29],[[]],[[]],[[],30],[[],31],[[]],[[]],[[]],[[]],[40,1],[[],[[5,[47]]]],[2,[[5,[1,4]]]],[[2,7],[[5,[1,4]]]],[7,[[5,[1,4]]]],[[2,48],1],[7,[[5,[1]]]],[49,[[25,[[24,[23,9]]]]]],0,[1],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],50],0,[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,[2,1],[[],1],[19,[[52,[31]]]],[19,52],0,[[1,1],[[52,[32]]]],0,[1,53],0,[1],[1,48],[1,5],0,[[1,54],55],0,[[1,2,[52,[56]]],40],[[],[[10,[57,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[1,2,3],[[5,[4]]]],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[11,15,14],[[5,[16,17]]]],[11,[[5,[16,17]]]],[18,[[5,[6,17]]]],[[],[[5,[6,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[59,7],[[10,[57,9]]]],[60,60],[[]],[41,[[5,[14,34]]]],[41,[[5,[18,34]]]],[41,[[5,[31,34]]]],[41,[[5,[30,34]]]],[41,[[5,[29,34]]]],[60],0,[[]],[[]],[[]],[[],60],[59],[59],[[]],[[]],[[]],[[],51],0,[[[10,[30,9]]],[[5,[[61,[29,30]],62]]]],[[[10,[9]]],[[5,[61,62]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],58],[[],58],[[],58],[[]],[[]],[[]],0,[33,[[5,[34]]]],[33,[[5,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],[[10,[8,9]]]],[[],[[10,[8,9]]]],[[11,[13,[12]],14,15],[[5,[16,17]]]],[[11,[13,[12]]],[[5,[16,17]]]],[[[13,[12]],18,19],[[5,[6,17]]]],[[[13,[12]],19],[[5,[6,17]]]],[[],20],[[],20],[22],[22],[[],[[25,[[24,[23,9]]]]]],[[],[[25,[[24,[23,9]]]]]],[[[13,[12]],[10,[9]]],[[25,[[24,[23,9]]]]]],[[[13,[12]],[10,[9]]],[[25,[[24,[23,9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[[0,[26,27]]]],[[],28],[[],15],[28,28],[63,63],[[]],[[]],[[],[[25,[[24,[23,9]]]]]],[[],[[25,[[24,[23,9]]]]]],[41,[[5,[14,34]]]],[41,[[5,[18,34]]]],[41,[[5,[31,34]]]],[41,[[5,[30,34]]]],[41,[[5,[29,34]]]],[64],[28],[15],[63],[64],[28],[15],[[43,[13,[12]]],[[25,[[24,[23,9]]]]]],[[43,[13,[12]]],[[25,[[24,[23,9]]]]]],[[17,45],[[5,[46]]]],[[17,45],[[5,[46]]]],[[]],[[]],[[],64],[[]],[[]],[[],28],[[]],[[],15],[[]],[[],63],[[]],[49,[[25,[[24,[23,9]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],51],[19,[[52,[31]]]],[19,52],0,[65],0,[[]],[[]],[[],50],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[11,15,14],[[5,[16,17]]]],[11,[[5,[16,17]]]],[18,[[5,[6,17]]]],[[],[[5,[6,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"KeyPair"],[3,"Secp256k1"],[3,"Scalar"],[4,"Error"],[4,"Result"],[3,"Amount"],[15,"str"],[3,"ApiEndpoint"],[3,"Global"],[3,"Vec"],[8,"ModuleInterconect"],[4,"BatchItem"],[3,"AccumulatorTx"],[3,"Input"],[3,"VerificationCache"],[3,"InputMeta"],[4,"Error"],[3,"Output"],[3,"OutPoint"],[8,"Any"],[3,"KeyPair"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Iterator"],[8,"Send"],[3,"ConsensusItem"],[3,"SpendableOutput"],[3,"PendingOutput"],[3,"OutputOutcome"],[4,"Ordering"],[3,"BTreeMap"],[3,"DecodeError"],[3,"Signature"],[3,"Transaction"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"TweakedKeyPair"],[8,"Read"],[3,"DisplaySecret"],[3,"HashSet"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"DecodingError"],[3,"SecretKey"],[4,"Value"],[3,"String"],[15,"u16"],[4,"Option"],[3,"PublicKey"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[15,"u8"],[3,"TypeId"],[3,"FedimintClientCore"],[3,"ClientModule"],[3,"PollPendingOutputs"],[4,"FinalizationError"],[3,"ServerModule"],[3,"ApiHandler"],[3,"Demand"],[8,"ServerModulePlugin"],[8,"ModuleInput"],[8,"ModuleOutput"],[8,"ModuleSpendableOutput"],[8,"ModulePendingOutput"],[8,"PluginInput"],[8,"PluginOutput"],[8,"PluginSpendableOutput"],[8,"PluginPendingOutput"],[8,"IServerModule"],[8,"ModuleConsensusItem"],[8,"ModuleVerificationCache"],[8,"ModuleOutputOutcome"],[8,"ModuleCommon"],[8,"ModuleApiHandler"],[8,"PluginConsensusItem"],[8,"PluginVerificationCache"],[8,"PluginOutputOutcome"],[8,"ClientModulePlugin"],[8,"IClientModule"],[8,"ModuleDecodable"]]},\
"fedimint_derive":{"doc":"","t":[24,24,24],"n":["Decodable","Encodable","UnzipConsensus"],"q":["fedimint_derive","",""],"d":["","",""],"i":[0,0,0],"f":[0,0,0],"p":[]},\
"fedimint_ln":{"doc":"Lightning Module","t":[13,13,13,3,3,13,4,3,3,13,13,13,13,13,3,3,4,13,13,13,13,13,4,13,13,12,12,12,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,11,11,11,11,11,12,11,12,12,12,12,12,12,12,3,3,3,3,3,17,17,17,17,17,17,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelOutgoing","Contract","Contract","ContractAccount","ContractInput","ContractNotReady","ContractOrOfferOutput","ContractOutput","DecryptionShareCI","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","LightningGateway","LightningModule","LightningModuleError","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","OutputOutcome","UnknownContract","ZeroOutput","amount","amount","amount","api","api_base_name","api_endpoints","apply_input","apply_output","audit","await_consensus_proposal","begin_consensus_epoch","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","db","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","list_gateways","mint_pub_key","new","node_pub_key","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_decryption_share","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","0","0","contract","gateway_signature","0","0","0","0","1","1","id","id","outcome","FeeConsensus","LightningModuleClientConfig","LightningModuleConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_input","contract_output","default","deserialize","deserialize","deserialize","distributed_gen","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_client_config","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","0","0","0","0","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","0","0","0","0","0","0","0","0","0","0","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","hash","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","0","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","gateway_key","hash","hash","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","0","0","0","0","0","0","1","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","ContractKey","ContractKeyPrefix","ContractUpdateKey","DB_PREFIX_AGREED_DECRYPTION_SHARE","DB_PREFIX_CONTRACT","DB_PREFIX_CONTRACT_UPDATE","DB_PREFIX_LIGHTNING_GATEWAY","DB_PREFIX_OFFER","DB_PREFIX_PROPOSE_DECRYPTION_SHARE","LightningGatewayKey","LightningGatewayKeyPrefix","OfferKey","OfferKeyPrefix","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_lnfedimint_ln::ContractOrOfferOutput","","","","fedimint_ln::LightningModuleError","","","","","","fedimint_ln::OutputOutcome","","","fedimint_ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::Contract","","","fedimint_ln::contracts::ContractOutcome","","","fedimint_ln::contracts::DecryptedPreimage","fedimint_ln::contracts::FundedContract","","","fedimint_ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::dbd":["Allow early refund of outgoing contract","Fund contract","","","","","Represents an output of the Lightning module.","","","","","","","","","The lightning module implements an account system. It does …","","","","","Creat incoming contract offer","","","","","While for now we only support spending the entire contract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","","","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","","","","","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[20,20,23,0,0,32,0,0,0,32,32,32,32,32,0,0,0,32,32,32,20,23,0,32,32,19,21,22,24,1,1,1,1,1,1,1,0,1,19,20,21,22,23,24,25,32,1,19,20,21,22,23,24,25,32,1,1,19,20,21,22,23,24,25,19,20,21,22,23,24,25,0,19,20,21,22,23,24,25,19,20,21,22,23,24,25,19,20,21,22,23,24,25,1,21,22,19,25,0,0,1,19,20,21,22,23,24,25,1,19,20,21,22,23,24,25,32,19,20,21,22,23,24,25,32,32,1,19,20,21,22,23,24,25,32,19,20,21,22,23,24,25,1,1,1,19,20,21,22,23,24,25,1,19,20,21,22,23,24,25,32,1,24,1,24,1,32,1,19,20,21,22,23,24,25,25,19,20,21,22,23,24,25,19,20,21,22,23,24,25,32,1,19,20,21,22,23,24,25,32,1,19,20,21,22,23,24,25,32,1,19,20,21,22,23,24,25,32,1,1,1,1,19,20,21,22,23,24,25,32,19,88,89,90,90,91,92,93,94,92,93,95,96,95,0,0,0,40,50,51,40,50,51,40,50,51,40,50,51,51,51,51,40,50,51,40,50,51,40,50,40,50,51,40,50,51,50,51,40,50,51,40,50,51,40,50,40,40,40,40,50,51,40,40,50,51,40,50,51,40,50,51,40,40,50,51,36,60,49,48,55,56,57,0,0,0,0,0,0,0,0,55,56,57,61,55,56,57,0,61,0,0,61,0,36,36,36,36,36,36,36,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,36,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,36,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,97,55,56,36,36,55,56,57,58,59,60,61,49,48,36,36,36,36,55,56,57,58,59,60,61,49,48,36,36,36,55,56,57,58,59,60,61,49,48,36,36,55,56,57,58,59,60,61,49,48,36,36,55,56,57,58,59,60,61,49,48,36,36,36,36,36,36,36,55,56,57,58,59,60,61,49,48,0,36,36,55,56,57,58,59,60,61,49,48,36,49,0,36,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,55,36,55,36,55,56,57,58,59,60,61,49,48,60,36,36,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,36,55,56,57,58,59,60,61,49,48,36,98,99,100,101,102,103,104,105,106,107,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,0,0,0,0,73,39,73,73,73,73,73,39,74,75,73,73,39,74,75,73,73,39,74,75,73,39,74,75,73,73,39,74,75,73,39,74,75,73,39,74,75,73,75,74,74,73,39,74,75,73,73,73,39,74,73,39,74,75,73,39,39,74,75,73,73,73,39,74,75,73,73,73,39,74,75,73,73,73,73,73,73,73,74,39,74,75,73,39,74,39,73,39,74,75,73,73,75,73,39,74,75,73,39,74,75,73,73,39,74,75,73,73,73,39,74,75,73,39,74,75,73,39,74,75,73,39,74,75,73,73,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,79,80,82,83,84,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85,77,78,77,78,77,78,79,80,81,82,83,84,85,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,77,78,79,80,81,82,86,83,87,84,85,77,77,78,78,79,79,80,80,81,81,82,82,86,86,83,83,87,87,84,84,85,85,77,78,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85,77,78,79,80,81,82,86,83,87,84,85],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1],[[1,3,4],[[6,[5]]]],[[1,4,7],[[6,[8]]]],[[1,9]],[[1,[0,[10,11]]],[[14,[[13,[12]]]]]],[[1,15,16,[0,[10,11]]],[[14,[[13,[12]]]]]],[3,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,18]],0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[6,[19,26]]]],[[],[[6,[20,26]]]],[[],[[6,[21,26]]]],[[],[[6,[22,26]]]],[[],[[6,[23,26]]]],[[],[[6,[24,26]]]],[[],[[6,[25,26]]]],[19,[[6,[27,28]]]],[20,[[6,[27,28]]]],[21,[[6,[27,28]]]],[22,[[6,[27,28]]]],[23,[[6,[27,28]]]],[24,[[6,[27,28]]]],[25,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[[1,[0,[10,11]]],[[14,[[13,[12]]]]]],0,0,0,0,0,0,0,[[],[[6,[19]]]],[[],[[6,[20]]]],[[],[[6,[21]]]],[[],[[6,[22]]]],[[],[[6,[23]]]],[[],[[6,[24]]]],[[],[[6,[25]]]],[[1,30,4,[0,[10,11]]],[[14,[[13,[12]]]]]],[[19,19],31],[[20,20],31],[[21,21],31],[[22,22],31],[[23,23],31],[[24,24],31],[[25,25],31],[[32,32],31],[[19,33],34],[[20,33],34],[[21,33],34],[[22,33],34],[[23,33],34],[[24,33],34],[[25,33],34],[[32,33],34],[[32,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[1,36],[[37,[22]]]],[[1,38],[[37,[39]]]],[1,[[16,[39]]]],[19],[20],[21],[22],[23],[24],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[16,[24]]]],0,[[40,41],1],0,[[1,7],37],[42],[[1,24]],[19,6],[20,6],[21,6],[22,6],[23,6],[24,6],[25,6],0,[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[1,47,48,49],31],[[1,3],[[6,[5]]]],[1,[[6,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[50,50],[51,51],[[]],[[]],[[]],0,0,[[],51],[[],[[6,[40]]]],[[],[[6,[50]]]],[[],[[6,[51]]]],[[52,47,[0,[10,11]]],[[14,[[13,[12]]]]]],[[50,50],31],[[51,51],31],0,0,[[40,33],34],[[50,33],34],[[51,33],34],[[]],[[]],[[]],[50],[51],[[]],[[]],[[]],[40,6],[50,6],[51,6],0,0,0,0,[40],[[]],[[]],[[]],[[[0,[10,11]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],46],[[],46],[[],46],[[40,47]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],36],[[],53],[36,38],[36],[36],[[],27],[[]],[36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[[16,[54,44]]]]]],[36,36],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[49,49],[48,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,36],62],[[],[[6,[36,26]]]],[[],[[6,[55,26]]]],[[],[[6,[56,26]]]],[[],[[6,[57,26]]]],[[],[[6,[58,26]]]],[[],[[6,[59,26]]]],[[],[[6,[60,26]]]],[[],[[6,[61,26]]]],[[],[[6,[49,26]]]],[[],[[6,[48,26]]]],[36,[[6,[27,28]]]],[55,[[6,[27,28]]]],[56,[[6,[27,28]]]],[57,[[6,[27,28]]]],[58,[[6,[27,28]]]],[59,[[6,[27,28]]]],[60,[[6,[27,28]]]],[61,[[6,[27,28]]]],[49,[[6,[27,28]]]],[48,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[[],36],[55,36],[56,36],[36],[63,[[6,[36]]]],[[],[[6,[55]]]],[[],[[6,[56]]]],[[],[[6,[57]]]],[[],[[6,[58]]]],[[],[[6,[59]]]],[[],[[6,[60]]]],[[],[[6,[61]]]],[[],[[6,[49]]]],[[],[[6,[48]]]],[[]],[[]],[[]],[[36,36],31],[[55,55],31],[[56,56],31],[[57,57],31],[[58,58],31],[[59,59],31],[[60,60],31],[[61,61],31],[[49,49],31],[[48,48],31],[[36,33],34],[[36,33],34],[[36,33],34],[[55,33],34],[[56,33],34],[[57,33],34],[[58,33],34],[[59,33],34],[[60,33],34],[[61,33],34],[[49,33],34],[[48,33],34],[[]],[38,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[64]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],36],[38,36],[[],36],[[],[[6,[36,65]]]],[[],[[6,[36,65]]]],[2,[[6,[36]]]],[36],[55],[56],[57],[58],[59],[60],[61],[49],[48],0,[[36,66]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36],[[60,67],49],0,[[36,36],[[37,[62]]]],[[36,68],6],[55,6],[56,6],[57,6],[58,6],[59,6],[60,6],[61,6],[49,6],[48,6],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[55,7],56],[[],45],[55,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,[[6,[69,70]]]],[[],45],[[],[[6,[53,71]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[72,72],[[]],[[],[[6,[72,26]]]],[72,[[6,[27,28]]]],[29,[[6,[27,28]]]],[72,36],[[],[[6,[72]]]],[[72,72],31],[[72,33],34],[[]],[[],[[6,[35]]]],[72],[[]],0,[72,6],[[],[[16,[43,44]]]],[[]],[[],6],[[],6],[[],46],[[]],0,0,0,0,0,[[],73],0,[[],53],[73,38],[73],[73],[[],27],[[]],[[]],[[]],[73],[[]],[[]],[[]],[[]],[[]],[[],[[6,[[16,[54,44]]]]]],[39,39],[74,74],[75,75],[73,73],[[]],[[]],[[]],[[]],[[73,73],62],[[],[[6,[39,26]]]],[[],[[6,[74,26]]]],[[],[[6,[75,26]]]],[[],[[6,[73,26]]]],[39,[[6,[27,28]]]],[74,[[6,[27,28]]]],[75,[[6,[27,28]]]],[73,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],0,[74,36],0,[73],[[],[[6,[39]]]],[[],[[6,[74]]]],[[],[[6,[75]]]],[63,[[6,[73]]]],[[]],[[]],0,0,[[]],[[39,39],31],[[74,74],31],[[75,75],31],[[73,73],31],0,[[39,33],34],[[74,33],34],[[75,33],34],[[73,33],34],[[73,33],34],[[73,33],34],[[]],[[]],[[]],[[]],[38,73],[[],[[6,[64]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],73],[38,73],[[],73],[[],[[6,[73,65]]]],[[],[[6,[73,65]]]],[2,[[6,[73]]]],0,[39],[74],[75],[73],0,0,[39,73],[[73,66]],[[]],[[]],[[]],[[]],[73],0,[[73,73],[[37,[62]]]],[39,6],[74,6],[75,6],[[73,68],6],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],45],[[]],[[]],[[]],[[]],[[],45],[[],[[6,[53,71]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[],6],0,0,[[]],[[]],[76,38],0,[76,76],[[]],[[],[[6,[76,26]]]],[76,[[6,[27,28]]]],[29,[[6,[27,28]]]],[76,36],[[],[[6,[76]]]],[[76,76],31],[[76,33],34],[[]],[[],[[6,[35]]]],0,[76],0,[[]],0,[76,6],0,[[],[[16,[43,44]]]],[[]],[[],6],[[],6],[[],46],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[78,78],[[]],[[]],[[],[[6,[77,26]]]],[[],[[6,[78,26]]]],[[],[[6,[79,26]]]],[[],[[6,[80,26]]]],[[],[[6,[81,26]]]],[[],[[6,[82,26]]]],[[],[[6,[83,26]]]],[[],[[6,[84,26]]]],[[],[[6,[85,26]]]],[77,[[6,[27,28]]]],[78,[[6,[27,28]]]],[79,[[6,[27,28]]]],[80,[[6,[27,28]]]],[81,[[6,[27,28]]]],[82,[[6,[27,28]]]],[86,[[6,[27,28]]]],[83,[[6,[27,28]]]],[87,[[6,[27,28]]]],[84,[[6,[27,28]]]],[85,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[29,[[6,[27,28]]]],[[77,33],34],[[78,33],34],[[79,33],34],[[80,33],34],[[81,33],34],[[82,33],34],[[86,33],34],[[83,33],34],[[87,33],34],[[84,33],34],[[85,33],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[],[[6,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[],[[16,[43,44]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"LightningModule"],[15,"str"],[8,"ModuleInterconect"],[6,"BatchTx"],[3,"InputMeta"],[4,"Result"],[3,"OutPoint"],[3,"Amount"],[3,"Audit"],[8,"RngCore"],[8,"CryptoRng"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DatabaseTransaction"],[3,"Vec"],[15,"u32"],[8,"Iterator"],[3,"ContractInput"],[4,"ContractOrOfferOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[4,"OutputOutcome"],[3,"LightningGateway"],[3,"DecryptionShareCI"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"HashSet"],[15,"bool"],[4,"LightningModuleError"],[3,"Formatter"],[6,"Result"],[4,"DecodingError"],[3,"ContractId"],[4,"Option"],[3,"Hash"],[3,"IncomingContractOffer"],[3,"LightningModuleConfig"],[3,"Database"],[3,"Demand"],[15,"u8"],[3,"Global"],[3,"String"],[3,"TypeId"],[3,"PeerId"],[3,"PreimageDecryptionShare"],[3,"EncryptedPreimage"],[3,"LightningModuleClientConfig"],[3,"FeeConsensus"],[6,"AnyPeerConnections"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[4,"Ordering"],[8,"Deserializer"],[4,"Error"],[4,"Error"],[8,"SliceIndex"],[3,"PublicKey"],[8,"Serializer"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKey"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[13,"Contract"],[13,"Offer"],[13,"CancelOutgoing"],[13,"UnknownContract"],[13,"InsufficientFunds"],[13,"InsufficientIncomingFunding"],[13,"NoOffer"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"],[13,"Account"],[13,"Incoming"],[13,"Outgoing"],[13,"Account"],[13,"Incoming"],[13,"Outgoing"],[13,"Some"],[13,"Account"],[13,"Incoming"],[13,"Outgoing"]]},\
"fedimint_mint":{"doc":"","t":[12,12,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,3,4,3,13,13,3,3,3,3,4,3,3,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,17,17,17,17,13,13,4,3,3,3,3,3,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["0","0","0","0","0","0","0","1","BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","InvalidAmountTier","InvalidAmountTier","InvalidCoin","InvalidSignature","InvalidSignature","Mint","MintError","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PartialSigResponse","PartiallySignedRequest","PeerErrorType","SigResponse","SignRequest","SpentCoin","TooFewCoins","TooFewShares","TooFewValidShares","VerificationCache","api_base_name","api_endpoints","apply_input","apply_output","audit","await_consensus_proposal","begin_consensus_epoch","blind_sign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","db","db","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","new","out_point","output_status","partial_signature","process_partial_signature","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_coins","validate_input","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","1","1","1","2","0","0","1","FeeConsensus","MintClientConfig","MintConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_issuance_abs","coin_spend_abs","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","peer_tbs_pks","serialize","serialize","serialize","tbs_pks","tbs_sks","threshold","to_client_config","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","0","0","DB_PREFIX_COIN_NONCE","DB_PREFIX_MINT_AUDIT_ITEM","DB_PREFIX_OUTPUT_OUTCOME","DB_PREFIX_PROPOSED_PARTIAL_SIG","DB_PREFIX_RECEIVED_PARTIAL_SIG","Issuance","IssuanceTotal","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","OutputOutcomeKey","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","peer_id","request_id","request_id","request_id","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0"],"q":["fedimint_mintfedimint_mint::CombineError","","","","","","","fedimint_mint::MintError","","","fedimint_mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::dbfedimint_mint::db::MintAuditItemKey",""],"d":["","","","","","","","","<code>Nonce</code> but blinded by the user key","","","","","","","","","Data structures taking into account different amount tiers …","","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","Blind signature share for a <code>SignRequest</code>","","","Blind signature for a <code>SignRequest</code>","Request to blind sign a certain amount of coins","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new mint","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the coin’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the amounts of issued (signed) and redeemed …","","","Transaction id and output index identifying an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[24,19,25,26,27,17,28,26,0,0,29,29,29,20,20,29,20,0,0,0,30,30,0,0,0,0,0,0,0,20,20,30,30,0,1,1,1,1,1,1,1,1,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,1,1,23,24,19,25,26,27,17,28,29,30,20,23,24,19,25,26,27,17,28,29,30,20,1,0,23,24,19,25,26,27,17,23,24,19,25,26,27,17,23,24,19,25,26,27,17,1,0,1,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,23,24,19,25,26,27,17,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,24,19,25,26,27,17,28,29,30,20,23,24,19,25,26,27,17,40,28,29,30,30,20,20,1,23,24,19,25,26,27,17,40,28,29,30,20,20,23,24,19,25,26,27,27,17,23,24,19,25,26,27,17,28,29,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,1,23,1,30,20,1,1,1,1,23,24,19,25,26,27,17,26,23,24,19,25,26,27,27,17,27,23,24,19,25,26,27,17,28,29,30,20,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,1,23,24,19,25,26,27,17,40,28,29,30,20,40,1,1,26,1,23,24,19,25,26,27,17,40,28,29,30,20,67,68,69,67,68,69,68,70,71,70,0,0,0,43,55,56,43,55,56,43,55,56,43,55,56,56,56,56,43,55,56,43,55,56,43,55,56,43,43,55,56,55,56,43,55,43,55,56,43,55,56,55,56,43,55,56,43,55,56,43,43,55,56,55,43,43,43,43,55,56,43,43,55,56,43,55,56,43,55,56,43,43,55,56,58,59,0,0,0,0,0,60,60,0,0,0,0,0,0,0,0,0,60,60,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,59,60,58,59,60,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,58,61,61,62,62,63,63,64,64,65,65,59,59,60,60,66,66,58,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,63,61,63,64,58,58,61,61,62,62,63,63,64,64,65,65,59,59,60,60,66,66,58,59,60,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,58,61,62,63,64,65,59,60,66,72,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1],[[1,3,4],[[6,[5]]]],[[1,4,7],[[6,[8]]]],[[1,9]],[[1,[0,[10,11]]],[[14,[[13,[12]]]]]],[[1,15,16,[0,[10,11]]],[[14,[[13,[12]]]]]],[[1,[18,[17]]],[[6,[19,20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[0,[21,22]]]],0,[23,23],[24,24],[19,19],[25,25],[26,26],[27,27],[17,17],[28,28],[29,29],[30,30],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[31,[19]],16]],0,[[],[[6,[23,32]]]],[[],[[6,[24,32]]]],[[],[[6,[19,32]]]],[[],[[6,[25,32]]]],[[],[[6,[26,32]]]],[[],[[6,[27,32]]]],[[],[[6,[17,32]]]],[23,[[6,[33,34]]]],[24,[[6,[33,34]]]],[19,[[6,[33,34]]]],[25,[[6,[33,34]]]],[26,[[6,[33,34]]]],[27,[[6,[33,34]]]],[17,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[[1,[0,[10,11]]],[[14,[[13,[12]]]]]],0,0,[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[[],[[6,[23]]]],[[],[[6,[24]]]],[[],[[6,[19]]]],[[],[[6,[25]]]],[[],[[6,[26]]]],[[],[[6,[27]]]],[[],[[6,[17]]]],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[[1,36,4,[0,[10,11]]],[[14,[[13,[12]]]]]],[[23,23],37],[[24,24],37],[[19,19],37],[[25,25],37],[[26,26],37],[[27,27],37],[[17,17],37],[[28,28],37],[[29,29],37],[[30,30],37],[[20,20],37],[[23,38],39],[[24,38],39],[[19,38],39],[[25,38],39],[[26,38],39],[[27,38],39],[[17,38],39],[[40,38],39],[[28,38],39],[[29,38],39],[[30,38],39],[[30,38],39],[[20,38],39],[[20,38],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,20],[[]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],27],[[],[[6,[42]]]],[[],[[6,[42]]]],[23],[24],[19],[25],[26],[27],[17],[28],[29],[30],[20],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,44],1],0,[[1,7],31],0,[[1,15,45,7,19]],[46],[46],[1,[[48,[8,47]]]],0,0,0,[23,6],[24,6],[19,6],[25,6],[26,6],[27,6],[17,6],[26,49],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[27,[[16,[50]]]],[[],[[16,[50,51]]]],[27,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[[],53],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,[[1,3],[[6,[5]]]],[1,[[6,[8]]]],[[26,47],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[55,55],[56,56],[[]],[[]],[[]],0,0,[[],56],[33],[33],[33],[33],[33],[33],[[],[[6,[43]]]],[[],[[6,[55]]]],[[],[[6,[56]]]],[[57,45,[0,[10,11]]],[[14,[[13,[12]]]]]],[33],[33],[33],[[55,55],37],[[56,56],37],0,0,[[43,38],39],[[55,38],39],[[56,38],39],[[]],[[]],[[]],[55],[56],[[],33],[[],33],[[],33],[[]],[[]],[[]],0,[43,6],[55,6],[56,6],0,0,0,[43],[[]],[[]],[[]],[[[0,[10,11]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],54],[[],54],[[],54],[[43,45]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[59,59],[60,60],[[]],[[]],[[]],[[],[[6,[58,32]]]],[[],[[6,[61,32]]]],[[],[[6,[62,32]]]],[[],[[6,[63,32]]]],[[],[[6,[64,32]]]],[[],[[6,[65,32]]]],[[],[[6,[59,32]]]],[[],[[6,[60,32]]]],[[],[[6,[66,32]]]],[58,[[6,[33,34]]]],[61,[[6,[33,34]]]],[62,[[6,[33,34]]]],[63,[[6,[33,34]]]],[64,[[6,[33,34]]]],[65,[[6,[33,34]]]],[59,[[6,[33,34]]]],[60,[[6,[33,34]]]],[66,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[35,[[6,[33,34]]]],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[33],[[58,58],37],[[58,38],39],[[61,38],39],[[62,38],39],[[63,38],39],[[64,38],39],[[65,38],39],[[59,38],39],[[60,38],39],[[66,38],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[[],[[6,[42]]]],[58],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[],[[16,[50,51]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0],"p":[[3,"Mint"],[15,"str"],[8,"ModuleInterconect"],[6,"BatchTx"],[3,"InputMeta"],[4,"Result"],[3,"OutPoint"],[3,"Amount"],[3,"Audit"],[8,"RngCore"],[8,"CryptoRng"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DatabaseTransaction"],[3,"Vec"],[3,"BlindNonce"],[3,"TieredMulti"],[3,"PartialSigResponse"],[4,"MintError"],[8,"Iterator"],[8,"Send"],[3,"PartiallySignedRequest"],[3,"SignRequest"],[3,"SigResponse"],[3,"Note"],[3,"Nonce"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"Option"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"HashSet"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"VerificationCache"],[3,"InvalidAmountTierError"],[4,"DecodingError"],[3,"MintConfig"],[3,"Database"],[3,"PeerId"],[3,"Demand"],[3,"AggregatePublicKey"],[3,"HashMap"],[3,"XOnlyPublicKey"],[15,"u8"],[3,"Global"],[3,"Message"],[3,"String"],[3,"TypeId"],[3,"MintClientConfig"],[3,"FeeConsensus"],[6,"AnyPeerConnections"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"MintAuditItemKeyPrefix"],[13,"TooFewShares"],[13,"TooFewValidShares"],[13,"MultiplePeerContributions"],[13,"TooFewCoins"],[13,"InvalidAmountTier"],[13,"Issuance"],[13,"Redemption"]]},\
"fedimint_mint_client":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["MintClientModule","MintModuleClientConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","from","from","from_config","generate_output","generate_outputs","init","init","into","into","module_key","poll_pending_output","poll_pending_outputs","some_number","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_mint_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Generate a transaction <code>Output</code> and a corresponding …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,1,2,2,2,2,1,1,2,1,2,1,2,1,2,1,2],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],0,[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[8,5]]]],[3,[[6,[9,5]]]],[3,[[6,[10,5]]]],[[]],[[]],[1,2],[[2,11]],[[2,11],12],[[2,13]],[13],[[]],[[]],[[],14],[[[12,[9,15]]],[[6,[[16,[10,9]],17]]]],[[2,[12,[18]]],[[6,[[16,[19,18]],17]]]],0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[]],[[]]],"p":[[3,"MintModuleClientConfig"],[3,"MintClientModule"],[8,"Read"],[3,"Input"],[3,"DecodeError"],[4,"Result"],[3,"Output"],[3,"OutputOutcome"],[3,"PendingOutput"],[3,"SpendableOutput"],[3,"Amount"],[3,"Vec"],[3,"FedimintClientCore"],[15,"u16"],[3,"Global"],[3,"PollPendingOutputs"],[4,"FinalizationError"],[3,"MintPendingOutput"],[3,"MintSpendableOutput"],[3,"TypeId"]]},\
"fedimint_mint_common":{"doc":"","t":[17,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MINT_MODULE_KEY","MintInput","MintModuleCommon","MintOutput","MintOutputOutcome","MintPendingOutput","MintSpendableOutput","amount","amount","amount","amount","amount","amount","amount","amount","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","default","from","from","from","from","from","from","into","into","into","into","into","into","key","key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_mint_common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,3,3,4,4,5,5,1,3,11,4,5,7,1,3,11,4,5,7,1,3,11,4,5,7,1,1,3,3,11,11,4,4,5,5,7,1,3,11,4,5,1,3,11,4,5,1,3,11,4,5,1,3,11,4,5,7,7,7,7,7,7,7,1,3,11,4,5,7,1,3,11,4,5,4,4,7,1,1,3,3,11,11,4,4,5,5,7,1,3,11,4,5,7,1,3,11,4,5,7,1,3,11,4,5,7,1,3,11,4,5,7,1,3,11,4,5],"f":[0,0,0,0,0,0,0,[1,2],[[],2],[3,2],[[],2],[4,2],[[],2],[5,2],[[],2],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[1,1],[[],8],[[],9],[3,3],[[],10],[11,11],[[],12],[4,4],[5,5],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[1,14]]]],[[],[[15,[3,14]]]],[[],[[15,[11,14]]]],[[],[[15,[4,14]]]],[[],[[15,[5,14]]]],[1,[[15,[16,17]]]],[3,[[15,[16,17]]]],[11,[[15,[16,17]]]],[4,[[15,[16,17]]]],[5,[[15,[16,17]]]],[18,[[15,[16,17]]]],[18,[[15,[16,17]]]],[18,[[15,[16,17]]]],[18,[[15,[16,17]]]],[18,[[15,[16,17]]]],[19,[[15,[13,14]]]],[19,[[15,[8,14]]]],[19,[[15,[10,14]]]],[19,[[15,[9,14]]]],[19,[[15,[12,14]]]],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[4,20],[[],21],[[],22],[1,21],[[],22],[3,21],[11,21],[[],22],[[],22],[4,21],[[],22],[5,21],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"MintOutput"],[3,"Amount"],[3,"MintPendingOutput"],[3,"MintSpendableOutput"],[3,"MintInput"],[8,"Any"],[3,"MintModuleCommon"],[3,"Output"],[3,"PendingOutput"],[3,"OutputOutcome"],[3,"MintOutputOutcome"],[3,"SpendableOutput"],[3,"Input"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[8,"Read"],[3,"String"],[6,"ModuleKey"],[15,"u16"],[3,"TypeId"]]},\
"fedimint_mint_server":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MintConsensusItem","MintServerModule","MintVerificationCache","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","clone","clone","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","decode_input","decode_output","decode_output_outcome","decode_pending_output","decode_spendable_output","default","end_consensus_epoch","end_consensus_epoch","from","from","from","init","init","into","into","into","module_key","module_key","module_key","module_key","module_key","new","output_status","output_status","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip"],"q":["fedimint_mint_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Defines the prefix for API endpoints defined by the module.","","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","","This function is called once before transaction processing …","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","This function is called once all transactions have been …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,25,27,1,1,1,1,1,1,25,27,1,25,27,1,1,1,25,25,27,27,25,27,25,27,25,27,25,27,1,1,1,1,1,1,1,1,1,1,25,27,1,1,1,25,27,1,25,25,27,27,1,1,1,1,25,27,25,27,1,25,27,1,25,27,1,1,1,1,1,25,27,1],"f":[0,0,0,[1,2],[[],2],[1,[[4,[3]]]],[[],[[4,[3,5]]]],[[6,[8,[7]],9,10],[[13,[11,12]]]],[[1,6,14],[[13,[11,12]]]],[[[8,[7]],15,16],[[13,[17,12]]]],[[1,14,16],[[13,[17,12]]]],[[],18],[[],18],[[1,19]],[19],[[],[[22,[[21,[20,5]]]]]],[1,[[22,[[21,[20]]]]]],[[1,14,4],[[22,[[21,[20]]]]]],[[[8,[7]],[4,[5]]],[[22,[[21,[20,5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[0,[23,24]]]],[[],10],[25,25],[[],10],[[],26],[27,27],[[]],[[]],[[],[[13,[25,28]]]],[[],[[13,[27,28]]]],[25,[[13,[29,30]]]],[27,[[13,[29,30]]]],[31,[[13,[29,30]]]],[31,[[13,[29,30]]]],[1,[[22,[[21,[20]]]]]],[[],[[22,[[21,[20,5]]]]]],[32,[[13,[9,28]]]],[32,[[13,[15,28]]]],[32,[[13,[33,28]]]],[32,[[13,[34,28]]]],[32,[[13,[35,28]]]],[[],1],[[1,36,14],[[22,[[21,[20]]]]]],[[36,[8,[7]]],[[22,[[21,[20,5]]]]]],[[]],[[]],[[]],[1],[[]],[[]],[[]],[[]],[[],37],[25,38],[27,38],[[],37],[[],37],[[],1],[16,[[39,[33]]]],[[1,16],39],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],40],[[],40],[[],40],[[1,6],[[13,[11,12]]]],[[6,10,9],[[13,[11,12]]]],[1,[[13,[17,12]]]],[15,[[13,[17,12]]]],[[]],[[]],[[]]],"p":[[3,"MintServerModule"],[15,"str"],[3,"ApiEndpoint"],[3,"Vec"],[3,"Global"],[8,"ModuleInterconect"],[4,"BatchItem"],[3,"AccumulatorTx"],[3,"Input"],[3,"VerificationCache"],[3,"InputMeta"],[4,"Error"],[4,"Result"],[6,"BatchTx"],[3,"Output"],[3,"OutPoint"],[3,"Amount"],[8,"Any"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Iterator"],[8,"Send"],[3,"MintVerificationCache"],[3,"ConsensusItem"],[3,"MintConsensusItem"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[8,"Read"],[3,"OutputOutcome"],[3,"PendingOutput"],[3,"SpendableOutput"],[3,"HashSet"],[15,"u16"],[6,"ModuleKey"],[4,"Option"],[3,"TypeId"]]},\
"fedimint_rocksdb":{"doc":"","t":[12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11],"n":["0","0","RocksDb","RocksDbTransaction","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","commit_tx","fmt","from","from","from","inner","into","into","open","raw_apply_batch","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_value","raw_insert_bytes","raw_insert_entry","raw_remove_entry","raw_remove_entry","rocksdb","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_rocksdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[3,1,0,0,1,3,1,3,1,3,1,3,1,1,1,3,1,1,1,3,1,3,1,3,1,3,1,0,3,1,3,1,3,1,3,1],"f":[0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[1,6],7],[[]],[8,1],[[]],[1,8],[[]],[[]],[[[10,[9]]],[[5,[1,11]]]],[[1,12],5],[3,13],[1,13],[3,[[5,[[16,[[15,[14]]]]]]]],[1,[[5,[[16,[[15,[14]]]]]]]],[[3,[15,[14]]],[[5,[[16,[[15,[14]]]]]]]],[[1,[15,[14]]],[[5,[[16,[[15,[14]]]]]]]],[3,5],[1,[[5,[[16,[[15,[14]]]]]]]],0,[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]]],"p":[[3,"RocksDb"],[3,"DatabaseTransaction"],[3,"RocksDbTransaction"],[3,"Box"],[6,"Result"],[3,"Formatter"],[6,"Result"],[6,"OptimisticTransactionDB"],[3,"Path"],[8,"AsRef"],[3,"Error"],[6,"DbBatch"],[6,"PrefixIter"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_server":{"doc":"","t":[13,4,4,3,13,3,6,13,13,13,12,11,11,11,11,11,11,11,11,11,12,11,11,0,12,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,11,11,0,12,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,12,12,12,12,3,13,3,13,4,3,3,3,3,3,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,12,12,12,12,12,12,12,11,12,11,12,0,0,0,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,5,5,5,5,12,3,6,3,3,13,13,3,6,13,13,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,8,11,11,12,12,11,11,11,10,11,11,12,11,11,11,12,12,11,11,12,11,11,5,5,3,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,3,17,17,17,17,17,17,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,4,3,13,3,3,4,13,13,13,8,13,13,13,13,13,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,3,3,13,4,3,3,13,13,13,13,13,3,3,4,13,13,13,13,13,4,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,12,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,3,4,3,13,13,3,3,3,3,4,3,3,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,13,13,3,13,8,13,13,13,6,13,6,13,3,13,3,3,13,3,3,4,3,13,3,13,13,3,13,13,13,3,3,3,4,4,13,13,11,12,12,11,11,11,11,11,11,11,0,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,12,11,11,11,12,12,12,12,12,5,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,12,3,4,8,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,12,0,0,0,0,0,3,5,11,11,11,11,11,11,11,12,11,11,11,11,5,5,11,11,11,11,11,6,6,6,8,3,6,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,6,3,3,6,6,8,6,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,3,13,3,3,13,3,17,3,3,4,3,6,3,8,3,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,10,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,8,13,13,4,13,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,12,12,12,12,12,16,8,10,4,13,13,13,13,13,13,4,3,4,8,13,13,13,5,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,6,3,3,13,3,4,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,12,12,12,11,11,11,11,11,11,0,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,5,5,5,11,11,11,11,11,11,5,5,12,12,5,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,12,5,11,11,11,12,11,11,12,11,11,5,11,11,11,11],"n":["Continue","CoreError","EpochMessage","FedimintServer","MismatchingVariant","OsRngGen","PeerMessage","PendingPreimage","Rejoin","RejoinRequest","api","await_proposal_or_peer_message","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone_into","config","connections","consensus","consensus","db","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","determine_rejoin_epoch","download_history","drop","drop","drop","drop","epoch","fmt","fmt","fmt","from","from","from","from","get_rng","handle_message","hbbft","init","init","init","init","into","into","into","into","is_retryable","last_signed_epoch","modules","net","new","new_with","outcome","peers","propose_epoch","provide","rejoin_consensus","rng","run","run_consensus","run_consensus_epoch","serialize","start_next_epoch","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ui","vzip","vzip","vzip","vzip","0","1","0","0","1","ClientConfig","Epoch","FeeConsensus","Hbbft","KeyType","Node","Peer","PeerServerParams","ServerConfig","ServerConfigParams","address","amount_tiers","api","api_addr","api_bind_addr","base_port","bitcoind_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","epoch_pk_set","epoch_sks","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","federation_name","federation_name","federation_name","fee_consensus","fee_consensus","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","gen_cert_and_key","gen_local","gen_network","gen_params","get_incoming_count","hash","hash","hash","hash","hbbft","hbbft","hbbft_bind_addr","hbbft_pk_set","hbbft_sks","identity","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","lightning_dkg","ln","ln","ln","load_from_file","mint","mint","mint","mint_dkg","name","name","name","network_config","nodes","peers","peers","serde_binary_human_readable","serde_tls_cert","serde_tls_key","serialize","serialize","serialize","serialize","serialize","serialize","server_dkg","tls","tls_cert","tls_cert","tls_config","tls_key","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet","wallet","wallet_dkg","deserialize","serialize","deserialize","serialize","deserialize","serialize","0","AcceptedTransaction","ConsensusOutcome","ConsensusOutcomeConversion","ConsensusProposal","ContractInputError","ContractOutputError","FedimintConsensus","HoneyBadgerMessage","InputCoinError","InputPegIn","OutputCoinError","OutputPegOut","TransactionConflictError","TransactionError","TransactionSubmissionError","VerificationCaches","as_ref","as_ref","as_ref","as_ref","audit","await_consensus_proposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_interconnect","build_verification_caches","cfg","clone","clone","clone","clone_into","clone_into","clone_into","conflictfilter","consensus_decode","consensus_encode","consensus_encode_dyn","db","debug","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop_peers","epoch","epoch_history","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","get_consensus_proposal","hash","init","init","init","init","init","init","interconnect","into","into","into","into","into","into","items","ln","ln","mint","mint","modules","new","process_consensus_outcome","process_transaction","provide","register_module","rng_gen","save_epoch_history","serialize","source","submit_transaction","to_bytes","to_owned","to_owned","to_owned","to_string","transaction","transaction_notify","transaction_status","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet","0","0","0","0","0","0","0","ConflictFilter","ConflictFilterable","borrow","borrow_mut","coin_set","contract_set","deref","deref_mut","drop","filter_conflicts","from","init","inner_iter","into","partition","partitioned","peg_in_set","pegged_out","try_from","try_into","tx_accessor","type_id","vzip","epoch_message","item_message","FedimintInterconnect","borrow","borrow_mut","call","call_internal","deref","deref_mut","drop","fedimint","from","init","into","try_from","try_into","type_id","vzip","0","0","0","0","0","AcceptedTransactionKey","DB_PREFIX_ACCEPTED_TRANSACTION","DB_PREFIX_DROP_PEER","DB_PREFIX_EPOCH_HISTORY","DB_PREFIX_LAST_EPOCH","DB_PREFIX_PROPOSED_TRANSACTION","DB_PREFIX_REJECTED_TRANSACTION","DropPeerKey","DropPeerKeyPrefix","EpochHistoryKey","LastEpochKey","ProposedTransactionKey","ProposedTransactionKeyPrefix","RejectedTransactionKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","ConsensusItem","EpochHistory","EpochInfo","EpochSignature","EpochSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","LN","Mint","MissingPreviousEpoch","MissingSignature","NotEnoughValidSigShares","OutcomeHistory","Transaction","UnzipConsensusItem","Wallet","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_info","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","items","last_hash","ln","mint","new","outcome","serialize","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","0","0","0","0","0","0","CancelOutgoing","Contract","Contract","ContractAccount","ContractInput","ContractNotReady","ContractOrOfferOutput","ContractOutput","DecryptionShareCI","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","LightningGateway","LightningModule","LightningModuleError","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","OutputOutcome","UnknownContract","ZeroOutput","amount","amount","amount","api","api_base_name","api_endpoints","apply_input","apply_output","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","list_gateways","mint_pub_key","new","node_pub_key","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","0","0","contract","gateway_signature","0","0","0","0","1","1","id","id","outcome","FeeConsensus","LightningModuleClientConfig","LightningModuleConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_input","contract_output","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_client_config","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","0","0","0","0","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","try_into_outcome","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","0","0","0","0","0","0","0","0","0","0","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","hash","init","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","0","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","init","init","init","init","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","gateway_key","hash","hash","init","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","0","0","0","0","0","0","0","1","BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","InvalidAmountTier","InvalidAmountTier","InvalidCoin","InvalidSignature","InvalidSignature","Mint","MintError","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PartialSigResponse","PartiallySignedRequest","PeerErrorType","SigResponse","SignRequest","SpentCoin","TooFewCoins","TooFewShares","TooFewValidShares","VerificationCache","api_base_name","api_endpoints","apply_input","apply_output","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","db","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","new","out_point","output_status","partial_signature","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_coins","validate_input","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","1","1","1","2","0","0","1","FeeConsensus","MintClientConfig","MintConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_issuance_abs","coin_spend_abs","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","peer_tbs_pks","serialize","serialize","serialize","tbs_pks","tbs_sks","threshold","to_client_config","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","0","CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","Feerate","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutOutcome","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConsensusItem","WalletError","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_base_name","api_endpoints","apply_input","apply_output","audit","await_consensus_proposal","begin_consensus_epoch","bitcoincore_rpc","bitcoind","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","calculate_fee","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","current_round_consensus","db","db","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee_rate","fee_rate","fee_rate","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","new_with_bitcoind","output_status","partial_cmp","peg_out_signature","process_randomness_contributions","provide","provide","psbt","randomness","randomness_beacon","recipient","round_consensus","run_broadcast_pending_tx","sats_per_kvb","secp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_weight","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","1","0","0","0","0","0","0","0","0","1","1","make_bitcoind_rpc","0","BitcoindRpc","Error","IBitcoindRpc","Result","Rpc","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","init","init","into","into","provide","source","submit_transaction","test","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","FakeBitcoindRpc","FakeBitcoindRpcController","FakeBitcoindRpcState","add_pending_tx_to_block","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controller","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fee_rate","fmt","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","init","init","init","into","into","into","is_btc_sent_to","new","set_block_height","set_fee_rate","state","state","submit_transaction","to_owned","transactions","try_from","try_from","try_from","try_into","try_into","try_into","tx_in_blocks","type_id","type_id","type_id","vzip","vzip","vzip","FeeConsensus","WalletClientConfig","WalletConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc_rpc","clone","clone","clone","clone_into","clone_into","clone_into","default","default_fee","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","serialize","serialize","serialize","to_client_config","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","0","0","0","0","0","0","BlockHashKey","PegOutBitcoinTransaction","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransactionKey","UnsignedTransactionPrefixKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from_str","hash","hash_to_hash160","init","into","is_uncompressed","key","new","partial_cmp","serialize","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","init","init","init","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","verify","vzip","vzip","vzip","0","1","api","connect","framed","peers","queue","State","attach_endpoints","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fedimint","fmt","from","init","into","run_server","server_endpoints","to_owned","try_from","try_into","type_id","vzip","AnyConnector","ConnectResult","ConnectionListener","Connector","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","get_peer_by_cert","init","init","init","into","into","into","into_dyn","listen","listen","mock","new","new","our_certificate","our_certificate","our_private_key","our_private_key","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MockConnector","MockNetwork","borrow","borrow","borrow_mut","borrow_mut","clients","clients","connect_framed","connector","deref","deref","deref_mut","deref_mut","do_handshake","drop","drop","from","from","id","init","init","into","into","listen","new","timeout","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","deref","deref","deref_mut","deref_mut","drop","drop","encode","fmt","fmt","from","from","init","init","into","into","into_dyn","new","new","new_from_tcp","new_from_tcp","poll_close","poll_flush","poll_next","poll_ready","sink","start_send","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","ConnectionConfig","Disconnected","DisconnectedPeerConnectionState","MAX_FAIL_RECONNECT_COUNTER","NetworkConfig","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","ReconnectPeerConnections","_io_task","_listen_task","ack","address","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone","clone","clone_into","clone_into","clone_into","common","connect","connect","connection","connections","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","disconnect","disconnect_err","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failed_reconnect_counter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","identity","incoming","incoming","incoming_connections","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","last_received","msg","new","new","nodes","outgoing","outgoing","peer","peers","peers","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","resend_buffer_contents","resend_queue","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","serialize","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","increment","init","init","init","into","into","into","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Accepted","Final","LN","Mint","OutputOutcome","Rejected","TransactionStatus","TryIntoOutcome","Wallet","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","init","init","into","into","is_final","is_final","is_final","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_outcome","try_into_variant","type_id","type_id","vzip","vzip","0","0","0","0","epoch","outputs","Rng","RngGenerator","get_rng","Input","InvalidSignature","LN","LN","Mint","Mint","MissingSignature","Output","Transaction","TransactionError","TransactionItem","UnbalancedTransaction","Wallet","Wallet","agg_keys","agg_sign","amount","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fee","fee","fee","fee_amount","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","in_amount","init","init","init","init","inputs","into","into","into","into","out_amount","outputs","provide","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","type_id","validate_funding","validate_signature","vzip","vzip","vzip","vzip","0","0","0","0","0","0","fee","inputs","outputs","ChooseTemplate","DealerTemplate","DisplayConfigsTemplate","FedName","Guardian","HomeTemplate","MutableState","PlayerTemplate","ReceiveConfigsForm","SetupComplete","State","UiMessage","UrlConnection","UrlForm","add_guardian","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_rpc","btc_rpc","cfg_path","choose","client_config","client_config","client_config","clone","clone","clone","clone_into","clone_into","clone_into","configgen","connection_string","connection_string","connection_string","deal","dealer","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","display_configs","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","extension","extension","extension","extension","extension","extension","federation_connection_string","federation_connection_string","federation_name","federation_name","federation_name","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","guardians","guardians","home","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_response","into_response","into_response","into_response","into_response","into_response","ipaddr","mime_type","mime_type","mime_type","mime_type","mime_type","mime_type","name","player","qr","receive_configs","render_into","render_into","render_into","render_into","render_into","render_into","run_fedimint","run_ui","running","running","save_configs","sender","server_config","server_configs","server_configs","set_url_connection","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url_connection","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SetupConfigParams","amount_tiers","borrow","borrow_mut","btc_rpc","configgen","deref","deref_mut","drop","federation_name","fmt","from","guardians","init","into","trusted_dealer_gen","try_from","try_into","type_id","vzip"],"q":["fedimint_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::CoreError","","fedimint_server::EpochMessage","","","fedimint_server::configfedimint_server::config::serde_binary_human_readable","","fedimint_server::config::serde_tls_cert","","fedimint_server::config::serde_tls_key","","fedimint_server::consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::consensus::TransactionSubmissionError","","","","","","","fedimint_server::consensus::conflictfilter","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::consensus::debug","","fedimint_server::consensus::interconnect","","","","","","","","","","","","","","","","fedimint_server::dbfedimint_server::epochfedimint_server::epoch::ConsensusItem","","","","","fedimint_server::epoch::EpochVerifyError","fedimint_server::modules::lnfedimint_server::modules::ln::ContractOrOfferOutput","","","","fedimint_server::modules::ln::LightningModuleError","","","","","","fedimint_server::modules::ln::OutputOutcome","","","fedimint_server::modules::ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contractsfedimint_server::modules::ln::contracts::Contract","","","fedimint_server::modules::ln::contracts::ContractOutcome","","","fedimint_server::modules::ln::contracts::DecryptedPreimage","fedimint_server::modules::ln::contracts::FundedContract","","","fedimint_server::modules::ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::mintfedimint_server::modules::mint::CombineError","","","","","","","fedimint_server::modules::mint::MintError","","","fedimint_server::modules::mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::ProcessPegOutSigError","","","","","fedimint_server::modules::wallet::WalletConsensusItem","","fedimint_server::modules::wallet::WalletError","","","","","","","","fedimint_server::modules::wallet::bitcoincore_rpc","fedimint_server::modules::wallet::bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::bitcoind::Error","fedimint_server::modules::wallet::bitcoind::test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::dbfedimint_server::modules::wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::tweakable","","","","fedimint_server::modules::wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::txoproof::PegInProofError","","fedimint_server::net","","","","","fedimint_server::net::api","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::framed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::peersfedimint_server::net::peers::PeerConnectionState","","fedimint_server::net::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome::OutputOutcome","","","fedimint_server::outcome::TransactionStatus","","","fedimint_server::rng","","","fedimint_server::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::transaction::Input","","","fedimint_server::transaction::Output","","","fedimint_server::transaction::TransactionError","","","fedimint_server::uifedimint_server::ui::configgen","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Fedimint toplevel config","","The actual implementation of the federated mint","","Provides interfaces for ACID-compliant data store backends","","","","","","","","","","Sends a rejoin request and returns the max(valid_epoch) …","Requests, verifies and processes history from peers","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Runs a single HBBFT consensus step","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","Searches back in saved epoch history for the last signed …","","Networking for mint-to-mint and client-to-mint …","","","","","","","Builds a <code>ConsensusOutcome</code> then use the API to validate and …","Some abstractions to handle randomness","Start all the components of the mint and plug them together","Loop <code>run_conensus_epoch</code> forever","The main consensus function:","","","","","","","","","","","","","","","","","","Admin UI","","","","","","","","","","","","","","","","","","","network config for a server","","","","The peer’s websocket network address and port (e.g. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","config for servers running on different ports on a local …","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","human-readable name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proposed HBBFT consensus changes including removing peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration describing the federation and containing our …","","","","","","","","","","","KV Database into which all state is persisted to recover …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Our local mint","","","","","","","","Cryptographic random number generator used for everything","","","","","","","","","","","Notifies tasks when there is a new transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The conflict filter is used to ensure that no conflicting …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","outputs a useful debug message for epochs indicating what …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow early refund of outgoing contract","Fund contract","","","","","Represents an output of the Lightning module.","","","","","","","","","The lightning module implements an account system. It does …","","","","","Creat incoming contract offer","","","","","While for now we only support spending the entire contract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","","","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","","","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","","","","","","","","<code>Nonce</code> but blinded by the user key","","","","","","","","","Data structures taking into account different amount tiers …","","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","Blind signature share for a <code>SignRequest</code>","","","Blind signature for a <code>SignRequest</code>","Request to blind sign a certain amount of coinseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new mint","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the coin’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait that allows interacting with the Bitcoin blockchain","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the block with the given hash","Returns the block hash at a given height","Returns the current block height","Estimates the fee rate for a given confirmation target. …","Returns the Bitcoin network the node is connected to","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmations required for a peg in to be accepted by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The bitcoin network the client will use","","","","","","The federations public peg-in-descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","","","","","","","","","","","","","","","","","","","","Information needed to connect to one other federation …","","","Maximum connection failures we consider for our back-off …","Specifies the network configuration for …","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","Connection manager that automatically reconnects to peers","","","","The peer’s network address and port (e.g. <code>10.42.0.10:4000</code>…","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Our federation member’s identity","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","","","","","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Cheaply generates a new random number generator. Since …","","An Input consumed by a Transaction is defined within a …","","","","","","","","An atomic value transfer operation within the Fedimint …","","Common properties of value transfer for inputs and outputs.","","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","The amount before fees represented by the in/output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The fee that will be charged for this in/output","","","The sum of fees across all inputs and outputs.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>Output</code>s created as a result of the transaction","","","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","","Validate amounts balance.","Validate the aggregated Schnorr Signature signed over the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","",""],"i":[3,0,0,0,9,0,0,9,3,3,1,1,9,1,13,3,9,1,13,3,1,3,3,0,1,0,1,0,9,1,13,3,9,1,13,3,3,1,1,9,1,13,3,0,9,9,3,9,1,13,3,13,1,1,9,1,13,3,9,1,13,3,9,1,0,0,1,1,0,1,1,9,1,0,1,1,1,3,1,3,9,0,9,1,13,3,9,1,13,3,9,1,13,3,0,9,1,13,3,283,283,284,285,285,0,31,0,31,0,0,0,0,0,0,286,30,30,29,18,286,30,26,27,28,286,18,29,30,31,26,27,28,286,18,29,30,31,286,26,27,28,18,29,30,31,26,27,28,18,29,30,31,0,28,26,27,28,286,18,29,30,31,26,27,28,286,18,29,30,31,26,27,28,18,29,31,18,26,27,28,286,18,29,30,31,18,18,26,27,28,31,26,27,28,31,27,18,30,27,18,26,27,28,18,29,30,31,26,27,28,286,18,29,30,31,0,30,30,30,18,26,27,28,31,29,30,18,18,18,18,26,27,28,286,18,29,30,31,26,27,28,286,18,29,30,31,30,27,28,18,0,27,28,18,30,26,286,29,18,27,30,18,0,0,0,26,27,28,18,29,31,30,30,18,29,18,18,18,26,27,28,18,29,30,31,18,26,27,28,286,18,29,30,31,26,27,28,286,18,29,30,31,26,27,28,286,18,29,30,31,26,18,26,27,28,286,18,29,30,31,27,28,18,30,0,0,0,0,0,0,58,0,0,0,0,63,63,0,0,63,63,63,63,63,63,0,0,19,19,19,19,19,19,19,58,21,59,57,63,19,58,21,59,57,63,19,19,19,58,21,59,58,21,59,0,59,59,59,19,0,19,58,21,59,57,63,19,58,21,59,57,63,59,19,58,21,59,57,63,21,59,19,58,59,59,58,21,59,57,63,63,19,58,58,21,59,57,63,63,59,19,59,19,58,21,59,57,63,0,19,58,21,59,57,63,21,19,57,19,57,19,19,19,19,63,19,19,19,59,63,19,59,58,21,59,63,59,19,19,19,58,21,59,57,63,19,58,21,59,57,63,19,58,21,59,57,63,19,58,21,59,57,63,19,57,287,288,289,290,291,292,293,0,0,78,78,78,78,78,78,78,294,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,83,85,86,87,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,82,82,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,83,84,84,85,85,86,86,87,87,88,88,82,82,89,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,83,84,84,85,85,86,86,87,87,88,88,82,82,89,89,82,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,83,84,85,86,87,88,82,89,91,92,0,0,79,0,0,0,8,8,8,0,79,79,8,8,8,0,79,0,79,17,79,94,91,92,17,64,8,79,94,91,92,17,64,8,79,91,92,17,64,79,91,92,17,64,79,91,92,17,64,79,91,92,17,64,79,91,92,17,64,79,94,91,92,17,64,8,79,94,91,92,17,64,8,79,91,92,17,64,79,94,91,92,17,64,8,64,94,79,91,92,17,64,8,79,91,92,17,64,8,79,91,92,17,64,8,79,94,91,92,17,64,8,79,91,92,17,64,79,91,92,17,64,64,17,79,94,91,92,17,64,8,79,94,91,92,17,64,8,64,64,94,94,17,17,79,91,92,17,64,17,79,91,92,17,64,79,91,92,17,64,94,79,94,91,92,17,64,8,79,94,91,92,17,64,8,79,94,91,92,17,64,8,295,17,17,79,94,91,92,17,64,8,94,296,297,298,299,300,301,101,101,104,0,0,108,0,0,0,108,108,108,108,108,0,0,0,108,108,108,101,104,0,108,108,100,102,103,105,50,50,50,50,50,50,50,50,100,101,102,103,104,105,106,108,50,100,101,102,103,104,105,106,108,50,50,100,101,102,103,104,105,106,100,101,102,103,104,105,106,0,100,101,102,103,104,105,106,100,101,102,103,104,105,106,100,101,102,103,104,105,106,50,102,103,100,106,0,50,50,100,101,102,103,104,105,106,108,50,100,101,102,103,104,105,106,108,100,101,102,103,104,105,106,50,100,101,102,103,104,105,106,108,50,100,101,102,103,104,105,106,108,100,101,102,103,104,105,106,108,100,101,102,103,104,105,106,108,108,50,100,101,102,103,104,105,105,106,108,100,101,102,103,104,105,106,50,50,50,100,101,102,103,104,105,106,50,100,101,102,103,104,105,106,108,50,100,101,102,103,104,105,106,108,50,105,50,105,50,108,50,100,101,102,103,104,105,106,106,100,101,102,103,104,105,106,100,101,102,103,104,105,106,108,50,100,101,102,103,104,105,106,108,50,100,101,102,103,104,105,106,108,104,50,100,101,102,103,104,105,106,108,50,50,50,100,101,102,103,104,105,106,108,100,302,303,304,304,305,306,307,308,306,307,309,310,309,0,0,0,112,114,115,112,114,115,112,114,115,112,114,115,115,115,115,112,114,115,112,114,115,112,114,115,112,112,114,115,114,115,114,115,112,114,112,114,115,112,114,115,114,115,112,114,115,112,114,115,112,114,115,112,114,112,112,112,112,114,115,112,112,114,115,112,114,115,112,114,115,112,112,114,115,110,123,125,126,118,119,120,0,0,0,0,0,0,0,0,118,119,120,124,118,119,120,0,124,0,0,124,0,110,110,110,110,110,110,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,311,118,119,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,110,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,110,110,118,119,120,121,122,123,124,125,126,110,110,118,119,120,121,122,123,124,125,126,110,110,118,119,120,121,122,123,124,125,126,110,110,110,110,110,110,110,118,119,120,121,122,123,124,125,126,0,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,125,0,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,118,110,118,110,118,119,120,121,122,123,124,125,126,123,110,110,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,121,122,123,110,118,119,120,121,122,123,124,125,126,110,118,119,120,121,122,123,124,125,126,110,312,313,314,315,316,317,318,319,320,321,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,134,0,0,0,0,134,111,134,134,134,134,134,111,135,136,134,134,111,135,136,134,134,111,135,136,134,111,135,136,134,134,111,135,136,134,111,135,136,134,111,135,136,134,136,135,135,111,135,136,134,134,111,135,136,134,111,135,136,134,111,135,136,134,134,134,111,135,134,111,135,136,134,111,135,136,134,111,111,135,136,134,134,134,111,135,136,134,134,134,111,135,136,134,134,134,134,134,134,134,135,111,135,136,134,111,135,111,134,111,135,136,134,111,135,136,134,134,136,134,111,135,136,134,111,135,136,134,134,111,135,136,134,134,134,111,135,136,134,111,135,136,134,134,111,135,136,134,111,135,136,134,134,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,139,140,141,142,143,144,145,142,0,0,146,146,146,148,148,146,148,0,0,0,147,147,0,0,0,0,0,0,0,148,148,147,147,0,49,49,49,49,49,49,49,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,49,49,138,139,140,141,142,143,144,145,146,147,148,138,139,140,141,142,143,144,145,146,147,148,0,138,139,140,141,142,143,144,138,139,140,141,142,143,144,138,139,140,141,142,143,144,49,49,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,138,139,140,141,142,143,144,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,139,140,141,142,143,144,145,146,147,148,138,139,140,141,142,143,144,145,146,147,148,138,139,140,141,142,143,144,149,145,146,147,147,148,148,49,138,139,140,141,142,143,144,149,145,146,147,148,148,138,139,140,141,142,143,143,144,138,139,140,141,142,143,144,145,146,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,49,138,147,148,49,49,49,49,138,139,140,141,142,143,144,142,138,139,140,141,142,143,143,144,143,138,139,140,141,142,143,144,145,146,147,148,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,49,138,139,140,141,142,143,144,149,145,146,147,148,149,49,49,142,49,138,139,140,141,142,143,144,149,145,146,147,148,322,323,324,322,323,324,323,325,326,325,0,0,0,151,155,156,151,155,156,151,155,156,151,155,156,156,156,156,151,155,156,151,155,156,151,155,156,151,151,155,156,155,156,155,156,151,155,151,155,156,151,155,156,155,156,151,155,156,151,155,156,151,151,155,156,155,151,151,151,151,155,156,151,151,155,156,151,155,156,151,155,156,151,151,155,156,169,0,172,172,0,172,0,172,172,171,0,171,0,171,0,171,0,0,161,0,0,0,0,161,0,171,172,0,171,171,172,0,0,0,0,0,171,172,157,165,168,51,51,51,51,51,51,51,0,0,162,164,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,0,51,51,160,51,166,167,161,162,163,164,165,166,167,160,157,168,169,161,162,163,164,165,166,167,160,157,168,169,160,0,161,162,163,164,165,166,167,160,157,168,169,161,162,163,164,165,166,167,160,157,168,169,161,162,163,164,165,166,167,160,157,168,169,51,51,51,0,51,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,161,162,163,164,165,160,157,168,169,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,51,161,162,163,164,160,157,168,169,171,161,162,163,164,160,157,168,169,171,162,164,157,167,168,161,162,163,164,165,166,167,160,157,168,169,171,171,172,172,51,161,177,162,163,164,165,166,167,160,157,168,169,171,171,171,172,161,162,163,164,165,166,167,160,157,168,169,51,161,162,163,164,160,157,168,169,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,0,0,51,51,160,177,51,171,172,167,162,164,168,177,0,160,51,161,162,163,164,165,160,157,168,169,163,167,171,51,161,162,163,164,165,166,167,160,157,168,169,161,162,163,164,165,166,167,160,157,168,169,171,172,157,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,169,165,166,0,166,163,0,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,327,51,51,51,161,177,162,163,164,165,166,167,160,157,168,169,171,172,328,329,330,331,329,332,333,334,335,336,337,338,339,334,339,0,159,0,0,0,0,180,180,159,180,159,159,159,180,159,159,180,159,180,159,180,180,180,180,159,159,340,340,340,340,340,180,159,180,159,180,180,340,0,159,180,180,159,180,159,180,159,180,159,341,0,0,0,183,185,183,185,184,183,185,184,184,184,184,185,184,183,185,184,183,185,184,183,185,184,185,185,183,185,184,184,184,184,184,184,183,185,184,183,185,184,183,184,183,183,183,184,184,184,185,183,185,184,183,185,184,185,183,185,184,183,185,184,0,0,0,176,186,187,176,186,187,176,176,186,187,176,186,187,187,176,176,186,187,176,186,187,176,186,187,176,176,186,187,186,187,186,187,176,186,176,186,176,186,187,176,186,187,186,187,176,186,187,176,186,187,176,186,176,186,176,187,176,186,176,187,176,186,187,176,176,186,187,176,176,186,187,176,186,187,176,186,187,176,176,186,187,191,192,195,197,199,201,0,0,0,0,0,0,0,0,0,0,0,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,191,192,193,194,195,196,197,198,199,200,201,0,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,0,0,342,343,173,0,0,173,173,173,0,208,208,209,208,173,209,208,173,209,208,209,208,209,208,209,208,209,208,208,209,208,173,209,208,173,209,208,209,208,173,209,208,209,208,209,208,173,173,209,208,173,209,208,209,208,209,209,208,173,209,208,173,208,209,209,209,209,173,209,208,209,208,209,208,173,209,209,208,173,209,208,173,209,209,209,209,209,208,173,209,209,209,209,208,173,344,344,0,0,0,0,0,0,0,215,215,215,215,215,215,215,215,215,215,215,215,0,0,215,215,215,215,215,0,0,0,0,0,0,0,0,217,217,220,33,217,220,33,217,220,33,217,33,217,345,220,220,33,217,220,33,217,220,33,217,220,33,217,220,33,217,217,220,33,217,220,33,217,345,345,220,0,220,217,220,33,220,33,217,220,33,220,33,33,217,220,33,217,220,33,217,220,33,217,220,33,217,0,0,224,223,224,223,224,223,223,224,224,223,224,223,0,224,223,224,223,223,224,223,224,223,223,224,0,224,223,224,223,224,223,224,223,0,0,0,0,0,0,0,226,225,226,225,226,225,346,225,226,225,226,225,226,225,226,226,225,226,225,226,225,226,225,226,346,225,226,233,225,225,225,225,225,225,225,225,225,226,225,226,225,225,226,225,226,0,240,0,0,240,0,0,0,0,0,0,0,0,0,0,243,236,238,237,236,32,236,243,247,239,245,246,240,32,237,238,236,243,247,239,245,246,240,32,237,238,239,32,237,238,32,237,238,247,239,239,246,236,236,243,247,239,245,246,240,32,237,238,236,243,247,239,245,246,240,32,237,238,32,237,238,239,239,236,243,247,239,245,246,240,32,237,238,245,32,237,238,236,243,247,239,245,246,240,32,237,238,32,243,239,239,236,243,247,239,245,246,240,32,237,238,236,243,247,239,245,246,240,32,237,238,239,238,236,243,32,243,239,239,347,32,236,243,239,239,239,239,245,239,239,247,243,236,236,243,239,239,32,237,238,247,247,239,239,32,237,238,236,243,247,239,245,246,240,32,237,238,236,243,247,239,245,246,240,32,237,238,239,236,243,247,239,245,246,240,32,237,238,236,243,247,239,245,246,240,32,237,238,348,349,250,0,0,0,249,249,250,251,249,250,251,249,250,251,249,250,251,250,251,249,249,250,251,249,250,251,250,251,249,250,251,249,250,251,249,250,251,249,250,251,249,250,251,251,250,249,250,251,249,250,251,249,251,249,250,251,249,249,250,251,249,250,251,249,250,251,249,250,251,249,250,251,249,250,251,77,0,113,113,0,77,0,0,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,77,113,350,77,113,77,113,77,113,77,113,77,113,351,113,77,113,77,113,352,353,354,355,356,356,357,0,357,0,65,256,257,256,257,65,0,0,0,0,65,256,257,0,0,358,256,257,69,256,257,65,69,256,257,65,69,256,257,69,256,257,69,256,257,69,256,257,69,256,257,69,256,257,65,69,256,257,65,69,256,257,69,256,257,65,69,256,257,69,256,257,358,256,257,69,69,256,257,65,65,69,256,257,65,69,256,257,69,256,257,69,69,256,257,65,69,69,256,257,65,69,69,65,69,256,257,69,69,256,257,69,256,257,65,69,256,257,65,69,256,257,65,69,69,69,256,257,65,69,69,69,256,257,65,359,360,361,362,363,364,365,365,365,0,0,0,0,0,0,0,0,0,275,0,0,0,0,0,261,272,264,268,267,273,265,274,266,269,258,275,261,272,264,268,267,273,265,274,266,269,258,275,267,258,258,0,266,269,258,261,265,266,261,265,266,0,261,274,258,0,0,261,272,264,268,267,273,265,274,266,269,258,275,261,272,264,268,267,273,265,274,266,269,258,275,261,267,265,266,0,261,272,264,268,267,273,265,274,266,269,258,275,272,264,268,273,274,269,272,264,268,273,274,269,272,264,268,273,274,269,272,269,272,267,269,258,261,272,264,268,267,273,265,274,266,269,258,275,261,272,264,268,267,273,265,274,266,269,258,275,268,258,0,261,272,264,268,267,273,265,274,266,269,258,275,261,272,264,268,267,273,265,274,266,269,258,275,272,264,268,273,274,269,265,272,264,268,273,274,269,261,0,0,0,272,264,268,273,274,269,0,0,272,258,0,258,266,269,258,0,272,264,268,273,274,269,261,265,266,272,264,268,273,274,269,261,272,264,268,267,273,265,274,266,269,258,275,261,272,264,268,267,273,265,274,266,269,258,275,261,272,264,268,267,273,265,274,266,269,258,275,0,261,272,264,268,267,273,265,274,266,269,258,275,0,282,282,282,282,0,282,282,282,282,282,282,282,282,282,0,282,282,282,282],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,3],[[]],0,0,0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[3]]]],[[1,6]],[[1,7],[[5,[8]]]],[4],[4],[4],[4],0,[[9,10],[[5,[11]]]],[[9,10],[[5,[11]]]],[[3,10],12],[[]],[[]],[[]],[[]],[13],[1,[[14,[7]]]],0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[9,15],[[1,16],[[2,[17]]]],0,0,[[18,19],1],[[18,19,[20,[3]]],1],0,0,[[1,21],[[14,[7]]]],[22],[[1,6]],0,[[18,19]],[1],[[1,23],[[14,[7]]]],[3,5],[1,15],[[]],[[],24],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[26,26],[27,27],[28,28],[18,18],[29,29],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,33],34],[[],28],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[26]]]],[[],[[5,[27]]]],[[],[[5,[28]]]],[[],[[5,[18]]]],[[],[[5,[29]]]],[[],[[5,[31]]]],[[34,35,[0,[36,37]]],[[39,[[38,[23]]]]]],[4],[4],[4],[4],[4],[4],[4],[4],0,0,[[26,26],15],[[27,27],15],[[28,28],15],[[31,31],15],[[],15],[[],15],[[],15],[[],15],0,0,0,[27,28],[18,28],[[26,10],[[5,[11]]]],[[27,10],[[5,[11]]]],[[28,10],[[5,[11]]]],[[18,10],12],[[29,10],12],[[30,10],12],[[31,10],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[5,[41]]]],[[[14,[42]],43,40,40],[[44,[35,30]]]],[[35,43,45],32],[[46,35,[14,[42]],45,24,24],30],[18,43],[26],[27],[28],[31],0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[47],0,0,0,0,0,0,0,[18,32],0,[30,[[45,[35,29]]]],0,0,0,0,[26,5],[27,5],[28,5],[18,5],[29,5],[31,5],0,0,0,0,[18,33],0,[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[36,37]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[18,35]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],5],[[],5],[[],[[5,[48]]]],[48,5],[[],[[5,[46]]]],[46,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,49],[19,50],[19,19],[19,51],[19,52],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,53],[[19,[0,[54,55,56]]],57],0,[58,58],[21,21],[59,59],[[]],[[]],[[]],0,[[],[[5,[59,60]]]],[59,[[5,[4,61]]]],[62,[[5,[4,61]]]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[59]]]],[4],[4],[4],[4],[4],[4],0,0,[[19,16],[[2,[17]]]],[[58,58],15],[[59,59],15],[[],15],[[58,10],12],[[21,10],12],[[59,10],12],[[57,10],12],[[63,10],12],[[63,10],12],[[]],[64,58],[[]],[[]],[[]],[[]],[[]],[65,63],[[],[[5,[66]]]],[19,21],[59],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[18,49,51,50,67],19],[[19,7]],[[19,68,69,57],[[5,[63]]]],[22],[[19,70],19],0,[[19,7,[72,[71]],14]],[59,5],[63,[[2,[73]]]],[[19,69],[[5,[63]]]],[[],[[14,[74,75]]]],[[]],[[]],[[]],[[],24],0,0,[[19,76],[[2,[77]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[4],[4],[4],[[],78],[[]],[[],4],0,[[]],[[78,69],[[5,[69,69]]]],[78],0,0,[[],5],[[],5],0,[[],25],[[]],[7,24],[79,24],0,[[]],[[]],[[53,40,24,80],[[39,[[38,[23]]]]]],[[24,80],[[5,[80,81]]]],[4],[4],[4],0,[[]],[[],4],[[]],[[],5],[[],5],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[[]],[[],[[5,[83,60]]]],[[],[[5,[84,60]]]],[[],[[5,[85,60]]]],[[],[[5,[86,60]]]],[[],[[5,[87,60]]]],[[],[[5,[88,60]]]],[[],[[5,[82,60]]]],[[],[[5,[89,60]]]],[83,[[5,[4,61]]]],[84,[[5,[4,61]]]],[85,[[5,[4,61]]]],[86,[[5,[4,61]]]],[87,[[5,[4,61]]]],[88,[[5,[4,61]]]],[82,[[5,[4,61]]]],[89,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[83,10],12],[[84,10],12],[[85,10],12],[[86,10],12],[[87,10],12],[[88,10],12],[[82,10],12],[[89,10],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,90,17],[[5,[17,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[91,91],[92,92],[17,17],[64,64],[[]],[[]],[[]],[[]],[[]],[[],[[5,[79,60]]]],[[],[[5,[91,60]]]],[[],[[5,[92,60]]]],[[],[[5,[17,60]]]],[[],[[5,[64,60]]]],[79,[[5,[4,61]]]],[91,[[5,[4,61]]]],[92,[[5,[4,61]]]],[17,[[5,[4,61]]]],[64,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[79]]]],[[],[[5,[91]]]],[[],[[5,[92]]]],[[],[[5,[17]]]],[[],[[5,[64]]]],[4],[4],[4],[4],[4],[4],[4],0,0,[[79,79],15],[[91,91],15],[[92,92],15],[[17,17],15],[[64,64],15],[[8,8],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[79,10],[[5,[11]]]],[[91,10],[[5,[11]]]],[[92,10],[[5,[11]]]],[[17,10],[[5,[11]]]],[[64,10],[[5,[11]]]],[[8,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[79],[91],[92],[17],[64],[64,93],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[16,[45,[35,[14,[79,75]],75]],2],17],0,[79,5],[91,5],[92,5],[17,5],[64,5],0,[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],94],[[17,2],[[5,[8]]]],[[17,95],[[5,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[50,40],[50],[[50,96,[72,[71]]],[[5,[97]]]],[[50,[72,[71]],98],[[5,[42]]]],[[50,52]],[[50,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[50,99,[14,[75]],[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,54]],0,[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[100,60]]]],[[],[[5,[101,60]]]],[[],[[5,[102,60]]]],[[],[[5,[103,60]]]],[[],[[5,[104,60]]]],[[],[[5,[105,60]]]],[[],[[5,[106,60]]]],[100,[[5,[4,61]]]],[101,[[5,[4,61]]]],[102,[[5,[4,61]]]],[103,[[5,[4,61]]]],[104,[[5,[4,61]]]],[105,[[5,[4,61]]]],[106,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[[50,[0,[36,37]]],[[39,[[38,[23,75]]]]]],0,0,0,0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[100]]]],[[],[[5,[101]]]],[[],[[5,[102]]]],[[],[[5,[103]]]],[[],[[5,[104]]]],[[],[[5,[105]]]],[[],[[5,[106]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[50,107,[72,[71]],[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[100,100],15],[[101,101],15],[[102,102],15],[[103,103],15],[[104,104],15],[[105,105],15],[[106,106],15],[[108,108],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[100,10],[[5,[11]]]],[[101,10],[[5,[11]]]],[[102,10],[[5,[11]]]],[[103,10],[[5,[11]]]],[[104,10],[[5,[11]]]],[[105,10],[[5,[11]]]],[[106,10],[[5,[11]]]],[[108,10],[[5,[11]]]],[[108,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,105],[[]],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[50,110],[[2,[103]]]],[[50,93],[[2,[111]]]],[50,[[14,[111,75]]]],[100],[101],[102],[103],[104],[105],[106],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[14,[105,75]]]],0,[[112,67],50],0,[[50,98],2],[22],[[50,105]],[100,5],[101,5],[102,5],[103,5],[104,5],[105,5],[106,5],0,[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[113,[[5,[104,9]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[50,96],[[5,[97]]]],[50,[[5,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[114,114],[115,115],[[]],[[]],[[]],0,0,[[],115],[4],[4],[4],[4],[4],[4],[[],[[5,[112]]]],[[],[[5,[114]]]],[[],[[5,[115]]]],[[38,35,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[4],[4],[4],[[114,114],15],[[115,115],15],[[],15],[[],15],0,0,[[112,10],[[5,[11]]]],[[114,10],[[5,[11]]]],[[115,10],[[5,[11]]]],[[]],[[]],[[]],[114],[115],[[],4],[[],4],[[],4],[[]],[[]],[[]],[112,5],[114,5],[115,5],0,0,0,0,[112],[[]],[[]],[[]],[[[0,[36,37]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[112,35]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],110],[[],116],[110,93],[110],[110],[[],4],[110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[14,[117,75]]]]]],[110,110],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,110],127],[[],[[5,[110,60]]]],[[],[[5,[118,60]]]],[[],[[5,[119,60]]]],[[],[[5,[120,60]]]],[[],[[5,[121,60]]]],[[],[[5,[122,60]]]],[[],[[5,[123,60]]]],[[],[[5,[124,60]]]],[[],[[5,[125,60]]]],[[],[[5,[126,60]]]],[110,[[5,[4,61]]]],[118,[[5,[4,61]]]],[119,[[5,[4,61]]]],[120,[[5,[4,61]]]],[121,[[5,[4,61]]]],[122,[[5,[4,61]]]],[123,[[5,[4,61]]]],[124,[[5,[4,61]]]],[125,[[5,[4,61]]]],[126,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[[],110],[118,110],[119,110],[4],[110],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[110]]]],[[],[[5,[118]]]],[[],[[5,[119]]]],[[],[[5,[120]]]],[[],[[5,[121]]]],[[],[[5,[122]]]],[[],[[5,[123]]]],[[],[[5,[124]]]],[[],[[5,[125]]]],[[],[[5,[126]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[110,110],15],[[118,118],15],[[119,119],15],[[120,120],15],[[121,121],15],[[122,122],15],[[123,123],15],[[124,124],15],[[125,125],15],[[126,126],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[110,10],[[5,[11]]]],[[110,10],[[5,[11]]]],[[110,10],[[5,[11]]]],[[118,10],[[5,[11]]]],[[119,10],[[5,[11]]]],[[120,10],[[5,[11]]]],[[121,10],[[5,[11]]]],[[122,10],[[5,[11]]]],[[123,10],[[5,[11]]]],[[124,10],[[5,[11]]]],[[125,10],[[5,[11]]]],[[126,10],[[5,[11]]]],[[]],[93,110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[128]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],110],[93,110],[[],110],[[],[[5,[110,129]]]],[[],[[5,[110,129]]]],[40,[[5,[110]]]],[110],[118],[119],[120],[121],[122],[123],[124],[125],[126],0,[110],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110],[[123,95],125],0,[[110,110],[[2,[127]]]],[110,5],[118,5],[119,5],[120,5],[121,5],[122,5],[123,5],[124,5],[125,5],[126,5],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[118,98],119],[[],24],[118,120],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,[[5,[130,131]]]],[[],24],[[],[[5,[116,132]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[113,[[5,[121,9]]]],[113,[[5,[122,9]]]],[113,[[5,[123,9]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[133,133],[[]],[[],[[5,[133,60]]]],[133,[[5,[4,61]]]],[62,[[5,[4,61]]]],[133,110],[4],[4],[[],[[5,[133]]]],[4],[[133,133],15],[[],15],[[133,10],[[5,[11]]]],[[]],[[],[[5,[66]]]],[133],[[],4],[[]],0,[133,5],[[],[[14,[74,75]]]],[[]],[[],5],[[],5],[[],25],[[]],0,0,0,0,0,[[],134],0,[[],116],[134,93],[134],[134],[[],4],[[]],[[]],[[]],[134],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[14,[117,75]]]]]],[111,111],[135,135],[136,136],[134,134],[[]],[[]],[[]],[[]],[[134,134],127],[[],[[5,[111,60]]]],[[],[[5,[135,60]]]],[[],[[5,[136,60]]]],[[],[[5,[134,60]]]],[111,[[5,[4,61]]]],[135,[[5,[4,61]]]],[136,[[5,[4,61]]]],[134,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],0,[135,110],0,[4],[4],[4],[134],[4],[4],[4],[4],[4],[[],[[5,[111]]]],[[],[[5,[135]]]],[[],[[5,[136]]]],[[],[[5,[134]]]],[4],[4],[4],[4],[[]],[[]],0,0,[[]],[[111,111],15],[[135,135],15],[[136,136],15],[[134,134],15],[[],15],[[],15],[[],15],[[],15],0,[[111,10],[[5,[11]]]],[[135,10],[[5,[11]]]],[[136,10],[[5,[11]]]],[[134,10],[[5,[11]]]],[[134,10],[[5,[11]]]],[[134,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[93,134],[[],[[5,[128]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],134],[93,134],[[],134],[[],[[5,[134,129]]]],[[],[[5,[134,129]]]],[40,[[5,[134]]]],0,[111],[135],[136],[134],0,0,[111,134],[134],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[134],0,[[134,134],[[2,[127]]]],[111,5],[135,5],[136,5],[134,5],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],24],[[]],[[]],[[]],[[]],[[],24],[[],[[5,[116,132]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[113,[[5,[134,9]]]],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[],5],0,[[]],[[]],[137,93],0,[137,137],[[]],[[],[[5,[137,60]]]],[137,[[5,[4,61]]]],[62,[[5,[4,61]]]],[137,110],[4],[4],[[],[[5,[137]]]],[4],[[137,137],15],[[],15],[[137,10],[[5,[11]]]],[[]],[[],[[5,[66]]]],0,[137],0,[[],4],[[]],0,[137,5],0,[[],[[14,[74,75]]]],[[]],[[],5],[[],5],[[],25],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,40],[49],[[49,96,[72,[71]]],[[5,[97]]]],[[49,[72,[71]],98],[[5,[42]]]],[[49,52]],[[49,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[49,99,[14,[75]],[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,[0,[54,56]]]],0,[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[5,[138,60]]]],[[],[[5,[139,60]]]],[[],[[5,[140,60]]]],[[],[[5,[141,60]]]],[[],[[5,[142,60]]]],[[],[[5,[143,60]]]],[[],[[5,[144,60]]]],[138,[[5,[4,61]]]],[139,[[5,[4,61]]]],[140,[[5,[4,61]]]],[141,[[5,[4,61]]]],[142,[[5,[4,61]]]],[143,[[5,[4,61]]]],[144,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[[49,[0,[36,37]]],[[39,[[38,[23,75]]]]]],0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[138]]]],[[],[[5,[139]]]],[[],[[5,[140]]]],[[],[[5,[141]]]],[[],[[5,[142]]]],[[],[[5,[143]]]],[[],[[5,[144]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[49,107,[72,[71]],[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[138,138],15],[[139,139],15],[[140,140],15],[[141,141],15],[[142,142],15],[[143,143],15],[[144,144],15],[[145,145],15],[[146,146],15],[[147,147],15],[[148,148],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[138,10],[[5,[11]]]],[[139,10],[[5,[11]]]],[[140,10],[[5,[11]]]],[[141,10],[[5,[11]]]],[[142,10],[[5,[11]]]],[[143,10],[[5,[11]]]],[[144,10],[[5,[11]]]],[[149,10],[[5,[11]]]],[[145,10],[[5,[11]]]],[[146,10],[[5,[11]]]],[[147,10],[[5,[11]]]],[[147,10],[[5,[11]]]],[[148,10],[[5,[11]]]],[[148,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,148],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],143],[[],[[5,[66]]]],[138],[139],[140],[141],[142],[143],[144],[145],[146],[147],[148],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[151,67],49],0,[[49,98],2],0,[22],[22],[49,[[44,[42,152,153]]]],0,0,0,[138,5],[139,5],[140,5],[141,5],[142,5],[143,5],[144,5],[142,130],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[143,[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[143,154],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[49,96],[[5,[97]]]],[49,[[5,[42]]]],[[142,152],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[151,151],[155,155],[156,156],[[]],[[]],[[]],0,0,[[],156],[4],[4],[4],[4],[4],[4],[[],[[5,[151]]]],[[],[[5,[155]]]],[[],[[5,[156]]]],[[38,35,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[4],[4],[4],[[155,155],15],[[156,156],15],[[],15],[[],15],0,0,[[151,10],[[5,[11]]]],[[155,10],[[5,[11]]]],[[156,10],[[5,[11]]]],[[]],[[]],[[]],[155],[156],[[],4],[[],4],[[],4],[[]],[[]],[[]],0,[151,5],[155,5],[156,5],0,0,0,[151],[[]],[[]],[[]],[[[0,[36,37]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[151,35]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[157,158],0,0,[51,40],[51],[[51,96,[72,[71]]],[[5,[97]]]],[[51,[72,[71]],98],[[5,[42]]]],[[51,52]],[[51,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[51,99,[14,[75]],[0,[36,37]]],[[39,[[38,[23,75]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[67,159],23],0,[[51,54]],[[160,16],158],0,0,0,[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[160,160],[157,157],[168,168],[169,169],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[160,160],127],0,[[],[[5,[161,60]]]],[[],[[5,[162,60]]]],[[],[[5,[163,60]]]],[[],[[5,[164,60]]]],[[],[[5,[165,60]]]],[[],[[5,[166,60]]]],[[],[[5,[167,60]]]],[[],[[5,[160,60]]]],[[],[[5,[157,60]]]],[[],[[5,[168,60]]]],[[],[[5,[169,60]]]],[161,[[5,[4,61]]]],[162,[[5,[4,61]]]],[163,[[5,[4,61]]]],[164,[[5,[4,61]]]],[165,[[5,[4,61]]]],[166,[[5,[4,61]]]],[167,[[5,[4,61]]]],[160,[[5,[4,61]]]],[157,[[5,[4,61]]]],[168,[[5,[4,61]]]],[169,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[51,[[2,[170]]]],[[51,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[51,[[2,[164]]]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[161]]]],[[],[[5,[162]]]],[[],[[5,[163]]]],[[],[[5,[164]]]],[[],[[5,[165]]]],[[],[[5,[160]]]],[[],[[5,[157]]]],[[],[[5,[168]]]],[[],[[5,[169]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[51,107,[72,[71]],[0,[36,37]]],[[39,[[38,[23,75]]]]]],[[161,161],15],[[162,162],15],[[163,163],15],[[164,164],15],[[160,160],15],[[157,157],15],[[168,168],15],[[169,169],15],[[171,171],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,[[161,10],[[5,[11]]]],[[162,10],[[5,[11]]]],[[163,10],[[5,[11]]]],[[164,10],[[5,[11]]]],[[165,10],[[5,[11]]]],[[166,10],[[5,[11]]]],[[167,10],[[5,[11]]]],[[160,10],[[5,[11]]]],[[157,10],[[5,[11]]]],[[168,10],[[5,[11]]]],[[169,10],[[5,[11]]]],[[171,10],[[5,[11]]]],[[171,10],[[5,[11]]]],[[172,10],[[5,[11]]]],[[172,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,171],[[]],[173,171],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[51,158],[161],[162],[163],[164],[160],[157],[168],[169],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[174,175],15],0,[[176,67,159],23],[[51,98],2],[[160,160],[[2,[127]]]],0,[[51,[14,[75]]]],[22],[22],0,0,0,0,0,[[67,159],23],0,0,[161,5],[162,5],[163,5],[164,5],[165,5],[160,5],[157,5],[168,5],[169,5],0,0,[171,[[2,[73]]]],[51,23],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[113,[[5,[169,9]]]],0,0,0,0,0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],177],[[51,96],[[5,[97]]]],[51,[[5,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[178,[[5,[159,179]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[159,159],[[]],[4],[159],[4],[4],[4],[4],[4],[[180,10],[[5,[11]]]],[[180,10],[[5,[11]]]],[[]],[41,180],[[],159],[[]],[181,[[39,[[38,[23,75]]]]]],[16,[[39,[[38,[23,75]]]]]],[[],[[39,[[38,[23,75]]]]]],[43,[[39,[[38,[23,75]]]]]],[[],[[39,[[38,[23,75]]]]]],[[],4],[[],4],[[]],[[]],[22],[180,[[2,[73]]]],[182,[[39,[[38,[23,75]]]]]],0,[[]],[[],24],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[]],[[]],0,0,0,0,[[183,16],23],0,[[]],[[]],[[]],[[]],[[]],[[]],[184,184],[[]],[184,183],[[],185],[[],184],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[185,10],[[5,[11]]]],[[]],[[]],[[]],[[184,181],[[39,[[38,[23,75]]]]]],[[184,16],[[39,[[38,[23,75]]]]]],[184,[[39,[[38,[23,75]]]]]],[[184,43],[[39,[[38,[23,75]]]]]],[184,[[39,[[38,[23,75]]]]]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[183,158,174],23],[[],184],[[183,16],23],[[183,[2,[160]]],23],0,0,[[184,182],[[39,[[38,[23,75]]]]]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[176,176],[186,186],[187,187],[[]],[[]],[[]],[[],187],0,[4],[4],[4],[4],[4],[4],[[],[[5,[176]]]],[[],[[5,[186]]]],[[],[[5,[187]]]],[[38,35,[0,[36,37]]],[[39,[[38,[23,75]]]]]],[4],[4],[4],[[186,186],15],[[187,187],15],[[],15],[[],15],0,0,0,0,[[176,10],[[5,[11]]]],[[186,10],[[5,[11]]]],[[187,10],[[5,[11]]]],[[]],[[]],[[]],[186],[187],[[],4],[[],4],[[],4],[[]],[[]],[[]],0,0,[[[45,[35,188,75]],189,4,178],176],[[[190,[188]]],186],0,0,0,0,0,0,[176,5],[186,5],[187,5],[176],[[]],[[]],[[]],[[[0,[36,37]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[176,35]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[191,60]]]],[[],[[5,[192,60]]]],[[],[[5,[193,60]]]],[[],[[5,[194,60]]]],[[],[[5,[195,60]]]],[[],[[5,[196,60]]]],[[],[[5,[197,60]]]],[[],[[5,[198,60]]]],[[],[[5,[199,60]]]],[[],[[5,[200,60]]]],[[],[[5,[201,60]]]],[191,[[5,[4,61]]]],[192,[[5,[4,61]]]],[193,[[5,[4,61]]]],[194,[[5,[4,61]]]],[195,[[5,[4,61]]]],[196,[[5,[4,61]]]],[197,[[5,[4,61]]]],[198,[[5,[4,61]]]],[199,[[5,[4,61]]]],[200,[[5,[4,61]]]],[201,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[191,10],[[5,[11]]]],[[192,10],[[5,[11]]]],[[193,10],[[5,[11]]]],[[194,10],[[5,[11]]]],[[195,10],[[5,[11]]]],[[196,10],[[5,[11]]]],[[197,10],[[5,[11]]]],[[198,10],[[5,[11]]]],[[199,10],[[5,[11]]]],[[200,10],[[5,[11]]]],[[201,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[188,188],[[]],[[188,188],127],[4],[4],[[],[[5,[188]]]],[4],[[188,188],15],[[],15],[[188,10],[[5,[11]]]],[[188,10],[[5,[11]]]],[[]],[40,[[5,[188]]]],[188],[[],202],[[],4],[[]],[188,15],0,[203,188],[[188,188],[[2,[127]]]],[188,5],[[],202],[[],204],[[]],[188],[188,205],[[],206],[[],93],[[],24],[[],5],[[],5],[[188,207],188],[[],25],[[]],0,0,[[],[[5,[61]]]],[207],0,0,0,0,0,0,0,[208,181],0,[[]],[[]],[[]],[[]],[[]],[[]],[209,209],[208,208],[[]],[[]],[[],[[5,[209,60]]]],[[],[[5,[208,60]]]],[209,[[5,[4,61]]]],[208,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[[208,210],15],[4],[4],[4],[4],[4],[4],[[],[[5,[209]]]],[[],[[5,[208]]]],[4],[4],[4],[[209,209],15],[[208,208],15],[[],15],[[],15],[[209,10],[[5,[11]]]],[[208,10],[[5,[11]]]],[[173,10],[[5,[11]]]],[[173,10],[[5,[11]]]],[[]],[[]],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[209],[208],[209],[[],4],[[],4],[[],4],[[]],[[]],[[]],0,[[208,182,170,130],[[5,[209,173]]]],[209,211],0,[209,181],[22],[209,5],[208,5],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[]],[[],24],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[209,130],0,[209,212],0,[[],25],[[],25],[[],25],[209,[[5,[213]]]],[209,[[5,[213]]]],[[209,207,190],[[5,[173]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[214,[2,[40]]]],[[]],[[]],[215,215],[[]],[4],[4],[4],0,[[215,10],12],[[]],[[],4],[[]],[[18,[216,[19]]]],[[]],[[]],[[],5],[[],5],[[],25],[[]],0,0,0,0,0,0,0,0,[[217,218,219],[[5,[41]]]],[[217,2],[[5,[35,41]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[33,33],[217,217],[[]],[[]],[[24,35],[[39,[[38,[23]]]]]],[[220,24,35],[[39,[[38,[23]]]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[220,10],12],[[33,10],12],[[217,10],12],[[]],[[]],[[]],[[217,48],[[2,[35]]]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],221],[24,[[39,[[38,[23]]]]]],[[220,24],[[39,[[38,[23]]]]]],0,[33,220],[222,217],0,0,0,0,0,0,0,0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[223,24,35],[[39,[[38,[23]]]]]],[[224,35],223],[4],[4],[4],[4],[35,[[5,[35,41]]]],[4],[4],[[]],[[]],0,[[],4],[[],4],[[]],[[]],[[223,24],[[39,[[38,[23]]]]]],[[],224],[[],2],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[225],[[]],[225],[[226,227],[[5,[2]]]],[4],[4],[4],[4],[4],[4],[[226,227],5],[[[225,[228,228,228]],10],12],[[[226,[228]],10],12],[[]],[[]],[[],4],[[],4],[[]],[[]],[[],229],[[],[[225,[230,231]]]],[[],226],[232,233],[232,233],[[[39,[225]],234],[[235,[5]]]],[[[39,[225]],234],[[235,[5]]]],[[[39,[225]],234],[[235,[2]]]],[[[39,[225]],234],[[235,[5]]]],0,[[[39,[225]]],5],0,[[],5],[[],5],[[],5],[[],5],[[39,234],[[235,[[2,[5]]]]]],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[236,35],[[39,[[38,[23]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[32,32],[237,237],[[[238,[55]]],[[238,[55]]]],[[]],[[]],[[]],0,[[239,[229,[238]],16],240],0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[32]]]],[[],[[5,[237]]]],[[],[[5,[238]]]],[[239,16],240],[[239,41,16],240],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[32,10],12],[[237,10],12],[[[238,[228]],10],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[32,20],236],[[35,237,[241,[238]],[242,[[229,[238]]]]],243],[[32,40,[44,[35,24]]],[[14,[26]]]],0,0,0,[244,[[14,[35]]]],0,[236,[[39,[[38,[23]]]]]],[243],[[239,245,[229,[238]]],240],[[239,246,[5,[238,41]]],240],[[239,[5,[238,41]]],[[5,[41]]]],[[239,245],240],0,[[239,229],[[5,[41]]]],0,[247],[[248,242,35,237,[241,[238]],[242,[[229,[238]]]]]],[[32,[241,[238]],[44,[35,[248,[[229,[238]]]]]]]],[236,[[39,[[38,[23]]]]]],[243],[[239,245],240],[[239,246],240],[32,5],[237,5],[238,5],0,[247,247],[[239,246],240],[[239,245],240],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[239,[[5,[[229,[238]],41]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[249,250]],[[]],[[]],[[]],[[]],[[]],[[]],[[[249,[55]]],[[249,[55]]]],[250,250],[[[251,[55]]],[[251,[55]]]],[[]],[[]],[[]],[[250,250],127],[[[251,[252]],251],127],[[],249],[4],[4],[4],[4],[4],[4],[[],[[5,[250]]]],[[],[[5,[251]]]],[4],[4],[4],[[[249,[253]],249],15],[[250,250],15],[[[251,[253]],251],15],[[],15],[[],15],[[],15],[[[249,[228]],10],12],[[250,10],12],[[[251,[228]],10],12],[[]],[[]],[[]],0,[250,250],[[],4],[[],4],[[],4],[[]],[[]],[[]],[249,54],0,0,[[250,250],[[2,[127]]]],[[[251,[254]],251],[[2,[127]]]],[249,251],0,[250,5],[251,5],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[77,77],[113,113],[[]],[[]],[4],[4],[4],[4],[[],[[5,[77]]]],[[],[[5,[113]]]],[4],[4],[[77,77],15],[[113,113],15],[[],15],[[],15],[[77,10],[[5,[11]]]],[[113,10],[[5,[11]]]],[[]],[[]],[77],[113],[[],4],[[],4],[[]],[[]],[[],15],[77,15],[113,15],[77,5],[113,5],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[113,[[5,[9]]]],[113,[[5,[9]]]],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],130],[207,255],[[],42],[256,42],[257,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[256,256],[257,257],[[]],[[]],[[]],[[],[[5,[69,60]]]],[[],[[5,[256,60]]]],[[],[[5,[257,60]]]],[69,[[5,[4,61]]]],[256,[[5,[4,61]]]],[257,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[62,[[5,[4,61]]]],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[69]]]],[[],[[5,[256]]]],[[],[[5,[257]]]],[4],[4],[4],[4],[[69,69],15],[[256,256],15],[[257,257],15],[[],15],[[],15],[[],15],[28,42],[[256,28],42],[[257,28],42],[[69,28],42],[[69,10],[[5,[11]]]],[[256,10],[[5,[11]]]],[[257,10],[[5,[11]]]],[[65,10],[[5,[11]]]],[[65,10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[],[[5,[66]]]],[[],[[5,[66]]]],[[],[[5,[66]]]],[69],[256],[257],[69,42],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[69,42],0,[22],[69,5],[256,5],[257,5],0,[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[],[[14,[74,75]]]],[[]],[[]],[[]],[[],24],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[69,76],[[],76],[[],25],[[],25],[[],25],[[],25],[[69,28],[[5,[65]]]],[[69,54],[[5,[65]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[260,[[216,[[259,[258]]]]]],[262,[261]]],[[5,[263]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[260,[[216,[[259,[258]]]]]]],264],0,0,0,[261,261],[265,265],[266,266],[[]],[[]],[[]],0,0,0,0,[[[260,[[216,[[259,[258]]]]]],[262,[267]]],[[5,[263]]]],[[[260,[[216,[[259,[258]]]]]]],268],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[261]]]],[[],[[5,[267]]]],[[],[[5,[265]]]],[[],[[5,[266]]]],[[[260,[[216,[[259,[258]]]]]]],269],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[5,[24,270]]]],[[],[[5,[24,270]]]],[[],[[5,[24,270]]]],[[],[[5,[24,270]]]],[[],[[5,[24,270]]]],[[],[[5,[24,270]]]],[271,[[5,[270]]]],[271,[[5,[270]]]],[271,[[5,[270]]]],[271,[[5,[270]]]],[271,[[5,[270]]]],[271,[[5,[270]]]],[[],[[2,[40]]]],[[],[[2,[40]]]],[[],[[2,[40]]]],[[],[[2,[40]]]],[[],[[2,[40]]]],[[],[[2,[40]]]],0,0,0,0,0,0,[[261,10],12],[[272,10],12],[[264,10],12],[[268,10],12],[[267,10],12],[[273,10],12],[[265,10],12],[[274,10],12],[[266,10],12],[[269,10],12],[[258,10],12],[[275,10],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[260,[[216,[[259,[258]]]]]]],272],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[272,[[277,[276]]]],[264,[[277,[276]]]],[268,[[277,[276]]]],[273,[[277,[276]]]],[274,[[277,[276]]]],[269,[[277,[276]]]],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],0,[[[260,[[216,[[259,[258]]]]]]],274],[[[260,[[216,[[259,[258]]]]]]],278],[[[260,[[216,[[259,[258]]]]]],[262,[266]]],[[5,[263]]]],[272,279],[264,279],[268,279],[273,279],[274,279],[269,279],[280],[[281,[248,[275]],170]],0,0,[[18,27,281]],0,0,0,0,[[[260,[[216,[[259,[258]]]]]],[262,[265]]],[[5,[263]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[[260,[[216,[[259,[258]]]]]]],273],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,[[24,[14,[261]],178]],[4],[4],[4],0,[[282,10],12],[[]],0,[[],4],[[]],[[282,[0,[36,37]]]],[[],5],[[],5],[[],25],[[]]],"p":[[3,"FedimintServer"],[4,"Option"],[4,"EpochMessage"],[15,"usize"],[4,"Result"],[3,"Duration"],[6,"ConsensusOutcome"],[4,"EpochVerifyError"],[4,"CoreError"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"OsRngGen"],[3,"Vec"],[15,"bool"],[15,"u64"],[3,"EpochHistory"],[3,"ServerConfig"],[3,"FedimintConsensus"],[6,"PeerConnector"],[3,"ConsensusProposal"],[3,"Demand"],[8,"Future"],[3,"String"],[3,"TypeId"],[3,"Node"],[3,"ClientConfig"],[3,"FeeConsensus"],[3,"Peer"],[3,"ServerConfigParams"],[4,"KeyType"],[3,"NetworkConfig"],[3,"TlsConfig"],[6,"AnyPeerConnections"],[3,"PeerId"],[8,"RngCore"],[8,"CryptoRng"],[3,"Box"],[3,"Pin"],[15,"str"],[3,"Error"],[3,"Amount"],[15,"u16"],[3,"HashMap"],[3,"BTreeMap"],[3,"PrivateKey"],[3,"Path"],[3,"Certificate"],[3,"Mint"],[3,"LightningModule"],[3,"Wallet"],[3,"Audit"],[3,"FedimintInterconnect"],[8,"Iterator"],[8,"Clone"],[8,"Send"],[3,"VerificationCaches"],[3,"ConsensusOutcomeConversion"],[3,"AcceptedTransaction"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[4,"TransactionSubmissionError"],[3,"OutcomeHistory"],[4,"TransactionError"],[4,"DecodingError"],[3,"Database"],[6,"BatchTx"],[3,"Transaction"],[3,"ServerModule"],[4,"BatchItem"],[3,"AccumulatorTx"],[8,"Error"],[15,"u8"],[3,"Global"],[3,"TransactionId"],[4,"TransactionStatus"],[3,"ConflictFilter"],[4,"ConsensusItem"],[4,"Value"],[3,"ApiError"],[3,"EpochHistoryKey"],[3,"ProposedTransactionKey"],[3,"ProposedTransactionKeyPrefix"],[3,"AcceptedTransactionKey"],[3,"RejectedTransactionKey"],[3,"DropPeerKey"],[3,"DropPeerKeyPrefix"],[3,"LastEpochKey"],[3,"PublicKeySet"],[3,"EpochSignatureShare"],[3,"EpochSignature"],[3,"Hash"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[8,"ModuleInterconect"],[3,"InputMeta"],[3,"OutPoint"],[3,"DatabaseTransaction"],[3,"ContractInput"],[4,"ContractOrOfferOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[4,"OutputOutcome"],[3,"LightningGateway"],[3,"DecryptionShareCI"],[3,"HashSet"],[4,"LightningModuleError"],[3,"GatewayClientConfig"],[3,"ContractId"],[3,"IncomingContractOffer"],[3,"LightningModuleConfig"],[4,"OutputOutcome"],[3,"LightningModuleClientConfig"],[3,"FeeConsensus"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[4,"Ordering"],[4,"Error"],[4,"Error"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[3,"PartiallySignedRequest"],[3,"SignRequest"],[3,"PartialSigResponse"],[3,"SigResponse"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"MintError"],[3,"VerificationCache"],[3,"InvalidAmountTierError"],[3,"MintConfig"],[3,"AggregatePublicKey"],[3,"RandomState"],[3,"Message"],[3,"MintClientConfig"],[3,"FeeConsensus"],[3,"PegOutFees"],[3,"Amount"],[3,"BitcoindRpc"],[3,"Feerate"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"PegOutOutcome"],[15,"u32"],[4,"WalletError"],[4,"ProcessPegOutSigError"],[4,"PegInProofError"],[3,"Address"],[4,"Network"],[3,"WalletConfig"],[3,"UnzipWalletConsensusItem"],[3,"BitcoindRpcCfg"],[4,"Error"],[4,"Error"],[3,"BlockHash"],[3,"Transaction"],[3,"FakeBitcoindRpcController"],[3,"FakeBitcoindRpc"],[3,"FakeBitcoindRpcState"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"SecretKey"],[4,"Descriptor"],[3,"BlockHashKey"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Secp256k1"],[3,"TxOutProof"],[3,"PegInProof"],[3,"Txid"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"RpcModule"],[3,"State"],[3,"Arc"],[3,"PeerCertStore"],[3,"TcpListener"],[3,"TlsAcceptor"],[3,"TlsTcpConnector"],[6,"AnyConnector"],[8,"IntoIterator"],[3,"MockConnector"],[3,"MockNetwork"],[3,"BidiFramed"],[3,"BincodeCodec"],[3,"BytesMut"],[8,"Debug"],[6,"AnyFramedTransport"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"TcpStream"],[6,"TcpBidiFramed"],[3,"Context"],[4,"Poll"],[3,"ReconnectPeerConnections"],[3,"ConnectionConfig"],[3,"PeerMessage"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[6,"SharedAnyConnector"],[3,"Receiver"],[3,"PeerConnection"],[3,"BTreeSet"],[3,"DisconnectedPeerConnectionState"],[3,"ConnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"Sender"],[3,"MessageQueue"],[3,"MessageId"],[3,"UniqueMessage"],[8,"Ord"],[8,"PartialEq"],[8,"PartialOrd"],[3,"Signature"],[4,"Input"],[4,"Output"],[3,"State"],[3,"RwLock"],[3,"Extension"],[3,"Guardian"],[3,"Form"],[3,"Redirect"],[3,"ChooseTemplate"],[3,"UrlForm"],[3,"ReceiveConfigsForm"],[3,"FedName"],[3,"DealerTemplate"],[3,"DisplayConfigsTemplate"],[4,"Error"],[8,"Write"],[3,"HomeTemplate"],[3,"UrlConnection"],[3,"PlayerTemplate"],[4,"UiMessage"],[6,"BoxBody"],[3,"Response"],[8,"IntoResponse"],[6,"Result"],[3,"RwLockWriteGuard"],[3,"PathBuf"],[3,"SetupConfigParams"],[13,"MismatchingVariant"],[13,"Continue"],[13,"Rejoin"],[3,"PeerServerParams"],[13,"TransactionError"],[13,"InputCoinError"],[13,"InputPegIn"],[13,"ContractInputError"],[13,"OutputCoinError"],[13,"OutputPegOut"],[13,"ContractOutputError"],[8,"ConflictFilterable"],[8,"IterUnzipConsensusItem"],[13,"EpochInfo"],[13,"Transaction"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"NotEnoughValidSigShares"],[13,"Contract"],[13,"Offer"],[13,"CancelOutgoing"],[13,"UnknownContract"],[13,"InsufficientFunds"],[13,"InsufficientIncomingFunding"],[13,"NoOffer"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"],[13,"Account"],[13,"Incoming"],[13,"Outgoing"],[13,"Account"],[13,"Incoming"],[13,"Outgoing"],[13,"Some"],[13,"Account"],[13,"Incoming"],[13,"Outgoing"],[13,"TooFewShares"],[13,"TooFewValidShares"],[13,"MultiplePeerContributions"],[13,"TooFewCoins"],[13,"InvalidAmountTier"],[8,"IterUnzipWalletConsensusItem"],[13,"UnknownTransaction"],[13,"WrongSignatureCount"],[13,"MalformedSignature"],[13,"ErrorFinalizingPsbt"],[13,"RoundConsensus"],[13,"PegOutSignature"],[13,"WrongNetwork"],[13,"RpcError"],[13,"UnknownNetwork"],[13,"UnknownPegInProofBlock"],[13,"PegInProofError"],[13,"PegOutFeeRate"],[8,"IBitcoindRpc"],[13,"Rpc"],[8,"Contract"],[8,"Tweakable"],[13,"OutputIndexOutOfRange"],[8,"Connector"],[8,"FramedTransport"],[8,"PeerSlice"],[13,"Disconnected"],[13,"Connected"],[8,"Final"],[8,"TryIntoOutcome"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"Rejected"],[13,"Accepted"],[8,"RngGenerator"],[8,"TransactionItem"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"Mint"],[13,"Wallet"],[13,"LN"],[13,"UnbalancedTransaction"]]},\
"fedimint_sled":{"doc":"Sled implementation of the <code>Database</code> trait. It should not …","t":[12,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11],"n":["0","SledDb","SledTransaction","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","commit_tx","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","init","init","inner","into","into","open","operations","raw_apply_batch","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_value","raw_insert_bytes","raw_insert_entry","raw_remove_entry","raw_remove_entry","sled","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_sled","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,1,1,3,1,3,3,3,1,3,1,3,1,3,1,3,1,1,3,1,3,1,1,3,1,3,1,1,3,3,1,3,1,1,3,0,1,3,1,3,1,3,1,3],"f":[0,0,0,[1,2],[[]],[[]],[[]],[[]],[[[4,[3]]],5],0,[6],[6],[6],[6],[6],[6],[[1,7],8],[[3,7],8],[[]],[9,1],[[]],[[],6],[[],6],[1,9],[[]],[[]],[[[11,[10]],12],[[5,[1,13]]]],0,[[1,14],5],[1,15],[3,15],[3,[[5,[[18,[[17,[16]]]]]]]],[1,[[5,[[18,[[17,[16]]]]]]]],[[3,[17,[16]]],[[5,[[18,[[17,[16]]]]]]]],[[1,[17,[16]]],[[5,[[18,[[17,[16]]]]]]]],[1,[[5,[[18,[[17,[16]]]]]]]],[3,5],0,[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]]],"p":[[3,"SledDb"],[3,"DatabaseTransaction"],[3,"SledTransaction"],[3,"Box"],[6,"Result"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Tree"],[3,"Path"],[8,"AsRef"],[15,"str"],[4,"Error"],[6,"DbBatch"],[6,"PrefixIter"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_wallet":{"doc":"","t":[12,17,13,13,3,13,8,13,13,13,6,13,6,13,3,13,3,3,13,3,3,4,3,13,3,13,13,3,3,13,13,13,3,3,3,4,4,13,13,11,12,12,11,11,11,11,11,11,11,11,0,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,12,11,11,11,5,11,11,12,12,12,12,11,12,5,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,4,8,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,11,11,11,11,10,0,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,17,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,17,17,17,17,17,17,17,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,5,11,11,11,11,12,12],"n":["0","CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","Feerate","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutOutcome","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","StatelessWallet","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConsensusItem","WalletError","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_base_name","api_endpoints","apply_input","apply_output","audit","available_utxos","await_consensus_proposal","begin_consensus_epoch","bitcoincore_rpc","bitcoind","block_height","block_height","block_is_known","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","calculate_fee","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","create_peg_out_tx","create_tx","current_round_consensus","db","db","derive_script","descriptor","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","fee_rate","fee_rate","fee_rate","fees","fees","finalize_peg_out_psbt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","new_with_bitcoind","offline_wallet","output_status","partial_cmp","peg_out_signature","process_block_height_proposals","process_fee_proposals","process_randomness_contributions","proprietary_tweak_key","provide","provide","psbt","randomness","randomness_beacon","recipient","recognize_change_utxo","round_consensus","run_broadcast_pending_tx","sats_per_kvb","save_peg_out_signatures","secp","secp","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_peg_out_psbt","sign_psbt","signature","signatures","source","sync_up_to_consensus_height","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_weight","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","1","0","0","0","0","0","0","0","0","1","1","ErrorReporting","RPC_VERIFY_ALREADY_IN_CHAIN","RetryClient","base_sleep","borrow","borrow","borrow_mut","borrow_mut","call","fmt","fmt","from","from","get_block","get_block","get_block_hash","get_block_hash","get_block_height","get_block_height","get_fee_rate","get_fee_rate","get_network","get_network","inner","inner","into","into","make_bitcoind_rpc","max_retries","new","retry_call","submit_transaction","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","BitcoindRpc","Error","IBitcoindRpc","Result","Rpc","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","fmt","fmt","from","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","into","into","provide","source","submit_transaction","test","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","FakeBitcoindRpc","FakeBitcoindRpcController","FakeBitcoindRpcState","add_pending_tx_to_block","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controller","default","default","fee_rate","fmt","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","height_hash","into","into","into","is_btc_sent_to","new","set_block_height","set_fee_rate","state","state","submit_transaction","to_owned","transactions","try_from","try_from","try_from","try_into","try_into","try_into","tx_in_blocks","type_id","type_id","type_id","vzip","vzip","vzip","FINALITY_DELAY","FeeConsensus","WalletClientConfig","WalletConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc_rpc","clone","clone","clone","clone_into","clone_into","clone_into","default","default_fee","deserialize","deserialize","deserialize","distributed_gen","eq","eq","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","serialize","serialize","serialize","to_client_config","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","0","0","0","0","0","0","BlockHashKey","DB_PREFIX_BLOCK_HASH","DB_PREFIX_PEG_OUT_BITCOIN_OUT_POINT","DB_PREFIX_PEG_OUT_TX_SIG_CI","DB_PREFIX_PENDING_TRANSACTION","DB_PREFIX_ROUND_CONSENSUS","DB_PREFIX_UNSIGNED_TRANSACTION","DB_PREFIX_UTXO","PegOutBitcoinTransaction","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransactionKey","UnsignedTransactionPrefixKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","fmt","fmt","from","from_str","hash","hash_to_hash160","into","is_uncompressed","key","new","partial_cmp","serialize","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","validate_peg_in_proof","verify","vzip","vzip","vzip","0","1"],"q":["fedimint_walletfedimint_wallet::ProcessPegOutSigError","","","","","fedimint_wallet::WalletConsensusItem","","fedimint_wallet::WalletError","","","","","","","","fedimint_wallet::bitcoincore_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::bitcoind::Error","fedimint_wallet::bitcoind::test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::dbfedimint_wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::tweakable","","","","fedimint_wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::txoproof::PegInProofError",""],"d":["","","","","","","","","","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Panics","Panics","","","","","","","","","Add a change UTXO to our spendable UTXO database after it …","","","","","","","","","","","","","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around <code>bitcoincore_rpc::Client</code> logging failures","","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Trait that allows interacting with the Bitcoin blockchain","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the block with the given hash","Returns the block hash at a given height","Returns the current block height","Estimates the fee rate for a given confirmation target. …","Returns the Bitcoin network the node is connected to","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmations required for a peg in to be accepted by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The bitcoin network the client will use","","","","","","The federations public peg-in-descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[34,0,47,47,0,47,0,47,47,45,0,45,0,45,0,45,0,0,26,0,0,0,0,26,0,45,47,0,0,45,45,47,0,0,0,0,0,45,47,1,30,33,3,3,3,3,3,3,3,3,0,0,27,29,3,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,0,3,3,24,3,31,32,26,27,28,29,30,31,32,24,1,33,34,26,27,28,29,30,31,32,24,1,33,34,24,0,26,27,28,29,30,31,32,24,1,33,34,26,27,28,29,30,31,32,24,1,33,34,26,27,28,29,30,31,32,24,1,33,34,3,3,3,42,3,0,3,42,42,26,27,28,29,30,24,1,33,34,3,26,27,28,29,24,1,33,34,45,27,29,1,32,33,3,26,27,28,29,30,31,32,24,1,33,34,45,45,47,47,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,45,45,47,26,27,28,29,30,31,32,24,1,33,34,3,26,27,28,29,24,1,33,34,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,0,0,3,3,3,24,64,3,3,3,0,45,47,32,27,29,33,3,64,0,24,3,3,42,42,26,27,28,29,30,24,1,33,34,3,42,28,32,45,3,3,26,27,28,29,30,31,32,24,1,33,34,26,27,28,29,30,31,32,24,1,33,34,45,47,1,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,30,31,0,31,28,0,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,114,3,3,3,42,26,64,27,28,29,30,31,32,24,1,33,34,45,47,115,116,117,118,116,119,120,121,122,123,124,125,126,121,126,0,0,0,69,65,69,65,69,65,65,69,65,69,65,69,65,69,65,69,65,69,65,69,65,69,65,69,0,69,65,69,65,69,65,69,65,69,65,69,65,69,22,0,0,0,0,75,75,22,75,22,22,22,22,75,75,75,75,22,22,127,127,127,127,127,75,22,75,75,127,0,22,75,75,22,75,22,75,22,75,22,128,0,0,0,76,78,76,78,77,76,78,77,77,77,77,78,77,78,78,76,78,77,77,77,77,77,77,0,76,78,77,76,77,76,76,76,77,77,77,78,76,78,77,76,78,77,78,76,78,77,76,78,77,0,0,0,0,55,79,80,55,79,80,55,55,79,80,55,79,80,80,55,55,79,80,55,79,80,55,79,55,79,55,79,80,55,79,80,79,80,55,79,80,55,79,55,79,55,80,55,79,55,80,55,79,80,55,55,79,80,55,55,79,80,55,79,80,55,79,80,55,55,79,80,86,87,90,92,94,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,86,87,88,89,90,91,92,93,94,95,96,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,86,87,88,89,90,91,92,93,94,95,96,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,129,130,51,0,0,51,51,51,0,105,105,106,105,51,106,105,51,106,105,106,105,106,105,106,105,106,105,105,106,105,106,105,106,105,51,51,106,105,51,106,105,106,105,106,106,105,51,105,106,106,106,106,51,106,105,106,105,106,105,51,106,106,105,51,106,105,51,106,106,106,106,106,105,51,106,106,0,106,106,105,51,131,131],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[3,4],[3],[[3,5,6],[[8,[7]]]],[[3,6,9],[[8,[10]]]],[[3,11]],[3,12],[[3,[0,[13,14]]],[[17,[[16,[15]]]]]],[[3,18,12,[0,[13,14]]],[[17,[[16,[15]]]]]],0,0,0,0,[[3,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,22]],0,[[3,23]],[[24,25],2],0,0,0,[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[24,24],[1,1],[33,33],[34,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,24],35],0,[[],[[8,[26,36]]]],[[],[[8,[27,36]]]],[[],[[8,[28,36]]]],[[],[[8,[29,36]]]],[[],[[8,[30,36]]]],[[],[[8,[31,36]]]],[[],[[8,[32,36]]]],[[],[[8,[24,36]]]],[[],[[8,[1,36]]]],[[],[[8,[33,36]]]],[[],[[8,[34,36]]]],[26,[[8,[37,38]]]],[27,[[8,[37,38]]]],[28,[[8,[37,38]]]],[29,[[8,[37,38]]]],[30,[[8,[37,38]]]],[31,[[8,[37,38]]]],[32,[[8,[37,38]]]],[24,[[8,[37,38]]]],[1,[[8,[37,38]]]],[33,[[8,[37,38]]]],[34,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[3,[[41,[40]]]],[[3,[0,[13,14]]],[[17,[[16,[15]]]]]],[[3,33],[[41,[32]]]],[[42,2,43,12,24],[[41,[32]]]],[3,[[41,[29]]]],0,0,[42,43],0,[[],[[8,[26]]]],[[],[[8,[27]]]],[[],[[8,[28]]]],[[],[[8,[29]]]],[[],[[8,[30]]]],[[],[[8,[24]]]],[[],[[8,[1]]]],[[],[[8,[33]]]],[[],[[8,[34]]]],[[3,44,6,[0,[13,14]]],[[17,[[16,[15]]]]]],[[26,26],20],[[27,27],20],[[28,28],20],[[29,29],20],[[24,24],20],[[1,1],20],[[33,33],20],[[34,34],20],[[45,45],20],0,0,0,0,0,[[3,46,2],[[8,[31,47]]]],[[26,48],49],[[27,48],49],[[28,48],49],[[29,48],49],[[30,48],49],[[31,48],49],[[32,48],49],[[24,48],49],[[1,48],49],[[33,48],49],[[34,48],49],[[45,48],49],[[45,48],49],[[47,48],49],[[47,48],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,45],[51,45],[[]],[[]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[3,2],[26],[27],[28],[29],[24],[1],[33],[34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,54],20],0,[[55,21,22],[[8,[3,45]]]],[3,42],[[3,9],41],[[24,24],[[41,[35]]]],0,[[3,18,[12,[40]]],40],[[3,[12,[24]]],24],[[3,12]],[[],56],[57],[57],0,0,0,0,[[3,18,31]],0,[[21,22]],0,[[3,18,12]],0,0,0,[26,8],[27,8],[28,8],[29,8],[30,8],[24,8],[1,8],[33,8],[34,8],[[3,46,58,28],[[8,[47]]]],[[42,46]],0,0,[45,[[41,[59]]]],[[3,18,40]],[3,40],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],62],[[],62],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],64],[[3,5],[[8,[7]]]],[3,[[8,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[65,4],[[67,[66]]]],[[[65,[68]],48],49],[[[69,[68]],48],49],[[]],[[]],[19,[[17,[[16,[15,61]]]]]],[[69,19],[[17,[[16,[15]]]]]],[25,[[17,[[16,[15,61]]]]]],[[69,25],[[17,[[16,[15]]]]]],[[],[[17,[[16,[15,61]]]]]],[69,[[17,[[16,[15]]]]]],[70,[[17,[[16,[15,61]]]]]],[[69,70],[[17,[[16,[15]]]]]],[[],[[17,[[16,[15,61]]]]]],[69,[[17,[[16,[15]]]]]],0,0,[[]],[[]],[71,[[8,[22,72]]]],0,[[],65],[69,73],[74,[[17,[[16,[15,61]]]]]],[[69,74],[[17,[[16,[15]]]]]],[[],8],[[],8],[[],8],[[],8],[[],63],[[],63],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[22,22],[[]],[22],[[75,48],49],[[75,48],49],[50,75],[[]],[[]],[[],22],[19,[[17,[[16,[15]]]]]],[25,[[17,[[16,[15]]]]]],[[],[[17,[[16,[15]]]]]],[70,[[17,[[16,[15]]]]]],[[],[[17,[[16,[15]]]]]],[[]],[[]],[57],[75,[[41,[59]]]],[74,[[17,[[16,[15]]]]]],0,[[]],[[],62],[[],8],[[],8],[[],8],[[],8],[[],63],[[],63],[[]],[[]],0,0,0,0,[[76,25]],0,[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[[]],[77,76],[[],78],[[],77],0,[[78,48],49],[[]],[[]],[[]],[[77,19],[[17,[[16,[15]]]]]],[[77,25],[[17,[[16,[15]]]]]],[77,[[17,[[16,[15]]]]]],[[77,70],[[17,[[16,[15]]]]]],[77,[[17,[[16,[15]]]]]],[25,19],[[]],[[]],[[]],[[76,2,53],20],[[],77],[[76,25]],[[76,[41,[24]]]],0,0,[[77,74],[[17,[[16,[15]]]]]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],63],[[],63],[[],63],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[55,55],[79,79],[80,80],[[]],[[]],[[]],[[],80],0,[[],[[8,[55]]]],[[],[[8,[79]]]],[[],[[8,[80]]]],[[81,58,[0,[13,14]]],[[17,[[16,[15]]]]]],[[79,79],20],[[80,80],20],0,0,0,0,[[55,48],49],[[79,48],49],[[80,48],49],[[]],[[]],[[]],[79],[80],[[]],[[]],[[]],0,0,[[[83,[58,82]],84,37,71],55],[85,79],0,0,0,0,0,0,[55,8],[79,8],[80,8],[55],[[]],[[]],[[]],[[[0,[13,14]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],63],[[],63],[[],63],[[55,58]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[86,36]]]],[[],[[8,[87,36]]]],[[],[[8,[88,36]]]],[[],[[8,[89,36]]]],[[],[[8,[90,36]]]],[[],[[8,[91,36]]]],[[],[[8,[92,36]]]],[[],[[8,[93,36]]]],[[],[[8,[94,36]]]],[[],[[8,[95,36]]]],[[],[[8,[96,36]]]],[86,[[8,[37,38]]]],[87,[[8,[37,38]]]],[88,[[8,[37,38]]]],[89,[[8,[37,38]]]],[90,[[8,[37,38]]]],[91,[[8,[37,38]]]],[92,[[8,[37,38]]]],[93,[[8,[37,38]]]],[94,[[8,[37,38]]]],[95,[[8,[37,38]]]],[96,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[[86,48],49],[[87,48],49],[[88,48],49],[[89,48],49],[[90,48],49],[[91,48],49],[[92,48],49],[[93,48],49],[[94,48],49],[[95,48],49],[[96,48],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[],[[8,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[82,82],[[]],[[82,82],35],[[],[[8,[82]]]],[[82,82],20],[[82,48],49],[[82,48],49],[[]],[4,[[8,[82]]]],[82],[[],97],[[]],[82,20],0,[98,82],[[82,82],[[41,[35]]]],[82,8],[[],97],[[],99],[[]],[82],[82,100],[[],101],[[],102],[[],62],[[],8],[[],8],[[82,103],82],[[],63],[[]],0,0,[[],104],[103],0,0,0,0,0,0,0,[105,19],0,[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[105,105],[[]],[[]],[[],[[8,[106,36]]]],[[],[[8,[105,36]]]],[106,[[8,[37,38]]]],[105,[[8,[37,38]]]],[39,[[8,[37,38]]]],[39,[[8,[37,38]]]],[[105,107],20],[[],[[8,[106]]]],[[],[[8,[105]]]],[[106,106],20],[[105,105],20],[[106,48],49],[[105,48],49],[[51,48],49],[[51,48],49],[[]],[[]],[[]],[[],[[8,[52]]]],[[],[[8,[52]]]],[106],[105],[106],[[]],[[]],[[]],0,[[105,74,40,108],[[8,[106,51]]]],[106,109],0,[106,19],[57],[106,8],[105,8],[[],[[12,[60,61]]]],[[],[[12,[60,61]]]],[[]],[[]],[[],62],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[106,108],0,[106,110],0,[[],63],[[],63],[[],63],[106,[[8,[111]]]],[106,[[8,[111]]]],[106,[[8,[112]]]],[[106,103,113],[[8,[51]]]],[[]],[[]],[[]],0,0],"p":[[3,"PegOutFees"],[3,"Amount"],[3,"Wallet"],[15,"str"],[8,"ModuleInterconect"],[6,"BatchTx"],[3,"InputMeta"],[4,"Result"],[3,"OutPoint"],[3,"Amount"],[3,"Audit"],[3,"Vec"],[8,"RngCore"],[8,"CryptoRng"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DatabaseTransaction"],[3,"BlockHash"],[15,"bool"],[3,"Database"],[3,"BitcoindRpc"],[8,"Iterator"],[3,"Feerate"],[15,"u64"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"PegOutOutcome"],[4,"Ordering"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[15,"u32"],[4,"Option"],[3,"StatelessWallet"],[3,"Script"],[3,"HashSet"],[4,"WalletError"],[3,"PartiallySignedTransaction"],[4,"ProcessPegOutSigError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"PegInProofError"],[4,"DecodingError"],[3,"Address"],[4,"Network"],[3,"WalletConfig"],[3,"ProprietaryKey"],[3,"Demand"],[3,"PeerId"],[8,"Error"],[15,"u8"],[3,"Global"],[3,"String"],[3,"TypeId"],[3,"UnzipWalletConsensusItem"],[3,"ErrorReporting"],[8,"Deserialize"],[6,"Result"],[8,"Debug"],[3,"RetryClient"],[15,"u16"],[3,"BitcoindRpcCfg"],[4,"Error"],[6,"Result"],[3,"Transaction"],[4,"Error"],[3,"FakeBitcoindRpcController"],[3,"FakeBitcoindRpc"],[3,"FakeBitcoindRpcState"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[6,"AnyPeerConnections"],[3,"CompressedPublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[6,"PegInDescriptor"],[3,"BlockHashKey"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"Secp256k1"],[6,"Result"],[3,"TxOutProof"],[3,"PegInProof"],[3,"Txid"],[3,"XOnlyPublicKey"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"ValidationError"],[4,"Descriptor"],[8,"IterUnzipWalletConsensusItem"],[13,"UnknownTransaction"],[13,"WrongSignatureCount"],[13,"MalformedSignature"],[13,"ErrorFinalizingPsbt"],[13,"RoundConsensus"],[13,"PegOutSignature"],[13,"WrongNetwork"],[13,"RpcError"],[13,"UnknownNetwork"],[13,"UnknownPegInProofBlock"],[13,"PegInProofError"],[13,"PegOutFeeRate"],[8,"IBitcoindRpc"],[13,"Rpc"],[8,"Contract"],[8,"Tweakable"],[13,"OutputIndexOutOfRange"]]},\
"fedimintd":{"doc":"","t":[3,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11],"n":["ServerOpts","augment_args","augment_args_for_update","borrow","borrow_mut","cfg_path","command","command_for_update","db_path","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","try_from","try_into","type_id","ui_port","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["fedimintd","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4],"f":[0,[1,1],[1,1],[[]],[[]],0,[[],1],[[],1],0,[2],[2],[2],[[]],[3,[[6,[4,5]]]],[3,[[6,[4,5]]]],[[],[[8,[7]]]],[[],2],[[]],[[],9],[[],6],[[],6],[[],10],0,[[4,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[]]],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"ServerOpts"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[6,"Result"],[3,"TypeId"]]},\
"ln_gateway":{"doc":"","t":[12,12,12,12,13,3,13,13,13,13,3,3,4,3,8,13,3,4,13,13,16,6,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,12,12,11,12,5,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,3,3,3,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,8,11,11,11,11,11,11,11,11,11,10,11,11,11,11,5,5],"n":["0","0","1","1","Balance","BalancePayload","ClientError","CouldNotRoute","Deposit","DepositAddress","DepositAddressPayload","DepositPayload","GatewayRequest","GatewayRequestInner","GatewayRequestTrait","HtlcAccepted","LnGateway","LnGatewayError","MintClientE","PayInvoice","Response","Result","Withdraw","WithdrawPayload","await_outgoing_contract_claimed","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_external","buy_preimage_internal","buy_preimage_offer","cln","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","federation_client","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","handle","handle_address_msg","handle_balance_msg","handle_deposit_msg","handle_htlc_incoming_msg","handle_pay_invoice_msg","handle_withdraw_msg","impl_gateway_request_trait","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_response","ln","ln_client","new","pay_invoice","provide","receiver","request","run","sender","serde_hex_deserialize","source","to_enum","to_enum","to_enum","to_enum","to_enum","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","webserver","webserver","0","0","0","0","0","0","0","0","0","Htlc","HtlcAccepted","Onion","amount","as_fedimint_amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","forward_amount","from","from","from","htlc","init","init","init","into","into","into","next_onion","onion","outgoing_cltv_value","payload","payment_hash","shared_secret","short_channel_id","to_enum","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","vzip","vzip","vzip","0","LightningError","LnRpc","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","pay","try_from","try_into","type_id","vzip","pay_invoice","run_webserver"],"q":["ln_gatewayln_gateway::GatewayRequest","","","","","","ln_gateway::LnGatewayError","","","ln_gateway::cln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::ln","","","","","","","","","","","","","","","","","ln_gateway::webserver",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The core-lightning <code>htlc_accepted</code> event’s <code>amount</code> field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Attempt to pay an invoice and block till it succeeds, …","","","","","",""],"i":[13,15,13,15,20,0,24,24,20,20,0,0,0,0,0,20,0,0,24,20,22,0,20,0,1,1,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,1,1,1,0,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,13,15,1,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,24,1,16,19,13,15,20,23,24,24,24,23,1,1,1,1,1,1,0,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,24,0,1,1,1,24,1,23,1,23,0,24,22,16,19,13,15,24,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,1,16,19,13,15,20,23,24,0,1,57,58,59,60,61,62,63,64,65,0,0,0,46,0,46,47,30,46,47,30,46,47,30,46,47,30,46,46,46,47,30,46,47,30,46,47,30,46,47,30,46,47,30,47,46,47,30,30,46,47,30,46,47,30,47,30,47,47,46,47,47,30,46,47,30,46,47,30,46,47,30,47,46,47,30,46,47,30,48,0,0,48,48,48,48,48,48,48,48,48,34,48,48,48,48,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],[[1,3],[[4,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,6,7],[[4,[5]]]],[[1,8,9,[0,[10,11]]],[[4,[5]]]],[[1,8,9,[0,[10,11]]],4],0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[],[[14,[13]]]],[[],[[14,[15]]]],[1],[12],[12],[12],[12],[12],[12],[12],[12],0,[[16,17],18],[[19,17],18],[[13,17],18],[[15,17],18],[[20,17],18],[[[23,[[0,[21,22]]]],17],18],[[24,17],18],[[24,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,24],[26,24],[[]],[[23,27]],[1,[[4,[28]]]],[1,[[4,[9]]]],[[1,13],[[4,[29]]]],[[1,30],[[4,[5]]]],[[1,2],4],[[1,15],[[4,[29]]]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,31],0,0,[[[33,[32]],[33,[34]],[35,[20]],[36,[20]],37],1],[[1,2,[0,[10,11]]],[[4,[3]]]],[38],0,0,[1,4],0,[39,[[14,[40]]]],[24,[[42,[41]]]],[[[43,[4]]],20],[[16,[43,[4]]],20],[[19,[43,[4]]],20],[[13,[43,[4]]],20],[[15,[43,[4]]],20],[[],44],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[14,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[46,46],[47,47],[30,30],[[]],[[]],[[]],0,0,[12],[12],[12],[12],[12],[12],[[],[[14,[46]]]],[[],[[14,[47]]]],[[],[[14,[30]]]],[12],[12],[12],[[46,17],18],[[47,17],18],[[30,17],18],0,[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],0,0,0,0,0,0,0,[[30,[43,[4]]],20],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[],45],[[],45],[[],45],[[]],[[]],[[]],0,0,0,[[]],[[]],[12],[12],[12],[[48,17],18],[[]],[[],12],[[]],[[6,49,50],[[53,[[52,[51]]]]]],[[],14],[[],14],[[],45],[[]],[[[54,[[35,[20]]]],[55,[2]]],[[14,[24]]]],[[37,[35,[20]]],56]],"p":[[3,"LnGateway"],[3,"ContractId"],[3,"OutPoint"],[6,"Result"],[3,"Preimage"],[15,"str"],[3,"PaymentParameters"],[3,"Hash"],[3,"Amount"],[8,"RngCore"],[8,"CryptoRng"],[15,"usize"],[3,"DepositPayload"],[4,"Result"],[3,"WithdrawPayload"],[3,"BalancePayload"],[3,"Formatter"],[6,"Result"],[3,"DepositAddressPayload"],[4,"GatewayRequest"],[8,"Debug"],[8,"GatewayRequestTrait"],[3,"GatewayRequestInner"],[4,"LnGatewayError"],[4,"MintClientError"],[4,"ClientError"],[8,"Fn"],[3,"Address"],[3,"TransactionId"],[3,"HtlcAccepted"],[6,"Response"],[6,"GatewayClient"],[3,"Arc"],[8,"LnRpc"],[3,"Sender"],[3,"Receiver"],[4,"SocketAddr"],[3,"Demand"],[8,"Deserializer"],[8,"Decodable"],[8,"Error"],[4,"Option"],[3,"Sender"],[3,"String"],[3,"TypeId"],[3,"Htlc"],[3,"Onion"],[3,"LightningError"],[15,"u64"],[15,"f64"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Extension"],[3,"Json"],[6,"Result"],[13,"HtlcAccepted"],[13,"PayInvoice"],[13,"Balance"],[13,"DepositAddress"],[13,"Deposit"],[13,"Withdraw"],[13,"ClientError"],[13,"CouldNotRoute"],[13,"MintClientE"]]},\
"mint_client":{"doc":"","t":[12,13,3,4,13,13,13,6,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,6,17,13,13,6,3,13,13,13,13,13,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,12,11,12,12,0,11,11,11,11,12,11,12,11,11,11,0,11,12,11,11,11,11,11,0,11,11,11,11,11,11,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,12,12,12,12,12,12,12,12,12,12,12,12,4,13,3,3,3,8,8,13,13,6,13,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,10,11,12,12,11,11,10,11,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,12,12,12,12,12,12,13,3,4,13,13,6,13,11,11,11,11,11,12,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,17,17,17,17,17,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,3,4,13,3,3,13,13,6,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,3,17,17,17,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,4,8,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,12,11,11,3,12,11,11,12,11,11,11,11,5,11,11,5,5,5,5,5,12,5,11,11,11,11,13,13,13,13,6,3,4,11,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","CancelUnknownOutgoingContract","Client","ClientError","DeleteUnknownOutgoingContract","FailedPaymentNoRefund","FetchOfferError","GatewayClient","GatewayClientConfig","GatewayNotFound","HttpError","InvalidAmountTier","InvalidInvoice","InvalidOffer","InvalidPreimage","InvalidSignature","InvalidTransaction","InvoiceError","InvoiceMissingAmount","LnClientError","MintApiError","MintClientError","NoGateways","NoOffer","NotOurKey","OutgoingPaymentTimeout","PaymentParameters","PegInAmountTooSmall","PegOutWaitingForUTXOs","RefundUnknownOutgoingContract","RefundedFailedPayment","Result","TIMELOCK","TimeoutTooClose","Underfunded","UserClient","UserClientConfig","ViolatedFeePolicy","WaitContractTimeout","WalletClientError","WrongContractType","WrongTransactionType","abort_outgoing_payment","api","api","as_ref","as_ref","await_consensus_block_height","await_outgoing_contract_acceptance","await_outgoing_contract_claimed","await_outgoing_contract_execution","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_offer","claim_incoming_contract","claim_outgoing_contract","client_config","clone","clone","clone_into","clone_into","coins","config","config","context","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","fetch_active_gateway","fetch_all_coins","fetch_coins","fetch_epoch_history","fetch_outgoing_contract","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","fund_outgoing_ln_contract","generate_invoice","get_new_pegin_address","init","init","init","init","init","into","into","into","into","into","invoice_amount","is_maybe_internal_payment","list_active_issuances","list_fetchable_coins","list_pending_claimed_outgoing","list_pending_outgoing","ln","ln_client","max_delay","max_fee_percent","max_send_amount","maybe_internal","mint","mint_client","new","new_peg_out_with_fees","new_with_api","node_pub_key","pay_to_blind_nonces","payment_hash","peg_in","peg_out","provide","query","receive_coins","redeem_key","refund_incoming_contract","register_with_federation","reissue","reissue_pending_coins","save_outgoing_payment","serde_keypair","serialize","serialize","source","spend_ecash","submit_tx_with_change","switch_active_gateway","timelock_delta","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","type_id","type_id","type_id","type_id","type_id","utils","validate_note_signatures","validate_outgoing_account","vzip","vzip","vzip","vzip","vzip","wallet","wallet_client","0","0","0","0","0","0","0","0","0","0","1","0","ApiError","CoreError","FedResponse","FederationApi","FederationMember","IFederationApi","JsonRpcClient","NoResult","OutPointOutOfRange","Result","RpcError","Timeout","TransactionError","TransactionRejected","WsFederationApi","WsFederationConnect","await_output_outcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","connect","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","fetch_consensus_block_height","fetch_consensus_block_height","fetch_contract","fetch_contract","fetch_epoch_history","fetch_epoch_history","fetch_gateways","fetch_gateways","fetch_offer","fetch_offer","fetch_output_outcome","fetch_peg_out_fees","fetch_peg_out_fees","fetch_tx_outcome","fetch_tx_outcome","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","is_connected","is_retryable","members","members","new","new_with_client","offer_exists","offer_exists","peer","peer_id","peers","provide","register_gateway","register_gateway","request","request","result","serialize","source","submit_transaction","submit_transaction","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","url_to_string_with_default_port","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","1","ApiError","LnClient","LnClientError","MissingInvoiceAmount","NoConfirmedInvoice","Result","WrongAccountType","await_outgoing_refundable","borrow","borrow","borrow_mut","borrow_mut","config","context","create_cancel_outgoing_output","create_offer_output","create_outgoing_output","create_refund_outgoing_contract_input","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_confirmed_invoice","get_contract_account","get_incoming_contract","get_offer","get_outgoing_contract","incoming","init","init","into","into","is_outgoing_contract_refundable","offer_exists","outgoing","provide","refundable_outgoing_contracts","save_confirmed_invoice","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","ConfirmedInvoiceKey","ConfirmedInvoiceKeyPrefix","DB_PREFIX_CONFIRMED_INVOICE","DB_PREFIX_LIGHTNING_GATEWAY","DB_PREFIX_OUTGOING_CONTRACT_ACCOUNT","DB_PREFIX_OUTGOING_PAYMENT","DB_PREFIX_OUTGOING_PAYMENT_CLAIM","LightningGatewayKey","OutgoingContractAccountKey","OutgoingContractAccountKeyPrefix","OutgoingPaymentClaimKey","OutgoingPaymentClaimKeyPrefix","OutgoingPaymentKey","OutgoingPaymentKeyPrefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConfirmedInvoice","IncomingContractAccount","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","invoice","keypair","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","recovery_key","refund","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApiError","CoinFinalizationError","FinalizationError","InvalidAmountTier","InvalidIssuanceId","InvalidOutcomeType","InvalidOutcomeWrongStructure","InvalidSignature","MintClient","MintClientError","NotEnoughCoins","NoteIssuanceRequest","NoteIssuanceRequests","OutputNotReadyYet","ReceivedUspendableCoin","Result","SpendableNote","UnknownIssuance","WrongMintAnswer","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_amount","coin_count","coins","coins","config","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","db","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","equivalent","fetch_all_coins","fetch_coins","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","hash","init","init","init","init","init","init","into","into","into","into","into","into","is_retryable","list_active_issuances","new","new","nonce","note","provide","provide","receive_coins","select_coins","serialize","serialize","serialize","source","spend_key","spend_key","submit_tx_with_change","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","1","0","0","0","0","0","0","0","CoinKey","CoinKeyPrefix","DB_PREFIX_COIN","DB_PREFIX_OUTPUT_FINALIZATION_DATA","DB_PREFIX_PENDING_COINS","OutputFinalizationKey","OutputFinalizationKeyPrefix","PendingCoinsKey","PendingCoinsKeyPrefix","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","into","into","into","into","into","into","nonce","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Continue","CurrentConsensus","EventuallyConsistent","Finished","QueryStep","QueryStrategy","Request","Retry404","TrustAllPeers","UnionResponses","ValidHistory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","current","current","current","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","epoch_pk","errors","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","new","new","new","new","new","process","process","process","process","process","process","process","required","required","required","responses","responses","results","results","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","deserialize","serialize","TransactionBuilder","borrow","borrow_mut","build","change_required","create_input_from_coins","create_output_coins","default","deref","deref_mut","drop","from","init","input","input_coins","input_notes","into","keys","output","output_coins","output_notes","try_from","try_into","tx","type_id","vzip","ClientContext","api","borrow","borrow_mut","db","deref","deref_mut","drop","from","from_hex","init","into","network_to_currency","parse_bitcoin_amount","parse_coins","parse_fedimint_amount","parse_node_pub_key","secp","serialize_coins","try_from","try_into","type_id","vzip","ApiError","NoMatchingPegInFound","PegInAmountTooSmall","PegInProofError","Result","WalletClient","WalletClientError","await_peg_out_outcome","borrow","borrow","borrow_mut","borrow_mut","config","context","create_pegin_input","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","get_new_pegin_address","init","init","into","into","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","DB_PREFIX_PEG_IN","PegInKey","PegInPrefixKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","peg_in_script","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["mint_clientmint_client::ClientError","","","","","","","","","","","mint_client::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::api::ApiError","","","","","","mint_client::ln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::LnClientError","","mint_client::ln::dbmint_client::ln::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mint::CoinFinalizationError","","","","mint_client::mint::MintClientError","","","","","mint_client::mint::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::query::QueryStep","","mint_client::serde_keypair","","mint_client::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::utils","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet::WalletClientError","","mint_client::wallet::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abort payment if our node can’t route it and give money …","","","","","","","Waits for a outgoing contract claim transaction to be …","Notify gateway that we’ve escrowed tokens they can claim …","Wait for a lightning preimage gateway has purchased to be …","","","","","","","","","","","Buy a lightning preimage listed for sale inside the …","","Claim an outgoing contract after acquiring the preimage by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to fetch e-cash tokens from a certain out point. An …","","Fetch the specified outgoing payment contract account","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns a bitcoin address suited to perform a fedimint …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the invoice contains us as a routing hint","","","Lists all claim transactions for outgoing contracts that …","Lists all previously saved transactions that have not been …","","","","","","","","","","","","","Pay by creating notes provided (and most probably …","","","","","","","","Claw back funds after incoming contract that had invalid …","Register this gateway with the federation","Spent some <code>SpendableNote</code>s to receive a freshly minted ones","Should be called after any transaction that might have …","Save the details about an outgoing payment the client is …","","","","","Issues a spendable amount of ecash","","Switches the clients active gateway to a registered …","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","Validate signatures on notes.","Check if we can claim the contract account and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mint API client that will try to run queries against all …","Information required for client to construct …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the current consensus block height (trailing actual …","","Fetch ln contract state","","","","Fetch available lightning gateways (assumes gateways …","","Fetch preimage offer for incoming lightning payments","","","Fetch the expected peg-out fees given a peg-out tx","","Fetch the outcome of an entire transaction","Fetch the outcome of an entire transaction","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","Creates a new API client","Creates a new API client","Checks if there exists an offer for a payment hash","","","","","","Register a gateway with the federation","","","","","","","Submit a transaction to all federation members","Submit a transaction to all federation members","","","","","","","","","","","","","","","","","","","","","<code>jsonrpsee</code> converts the <code>Url</code> to a <code>&amp;str</code> internally and then …","","","","","","","","","","","","","","","","","","","","Waits for an outgoing contract to become refundable","","","","","","","Used by gateway to prematurely return funds to the user if …","","Create an output that incentivizes a Lighning gateway to …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines if an outgoing contract can be refunded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoice whose “offer” has been accepted by federation","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The invoice itself","Keypair that will be able to sweep contract once it has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Federation module client for the Mint module. It can both …","","","Single <code>Note</code> issuance request to the mint.","Multiple <code>Note</code> issuance requests","","","","A <code>Note</code> with associated secret key that allows to proof …","","","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","Finalization data for all coin outputs in this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalize the issuance request using a <code>SigResponse</code> from the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","Generate a request session for a single coin and returns …","Generate a new <code>IssuanceRequest</code> and the associates …","Nonce belonging to the secret key","","","","","","","","","","Spend key from which the coin nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns when <code>required</code> responses are equal","Returns when <code>required</code> responses are equal, retrying after …","","Results from the strategy handling a response from a peer","","","Returns when <code>required</code> responses are equal, retrying on 404 …","Returns a result from the first responding peer","Returns the deduplicated union of <code>required</code> responses","Returns first epoch with a valid sig, otherwise wait till …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Federation module client for the Wallet module. It can …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a bitcoin-address derived from the federations …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[6,4,0,0,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,0,0,4,4,0,0,4,4,4,4,4,2,0,1,6,1,2,2,2,2,2,2,25,6,1,4,2,25,6,1,4,2,2,2,1,6,1,6,1,2,2,2,2,2,25,6,1,4,2,25,6,1,4,6,1,2,25,6,1,4,2,2,2,2,2,2,25,6,1,4,4,2,25,6,1,4,4,4,4,4,4,4,4,2,2,2,2,25,6,1,4,2,25,6,1,4,25,2,2,2,2,2,0,2,25,25,25,25,0,2,2,2,2,1,2,25,2,2,4,0,2,1,2,2,2,2,2,0,6,1,4,2,2,2,1,6,1,4,0,2,25,6,1,4,2,25,6,1,4,2,2,25,6,1,4,0,2,2,2,25,6,1,4,0,2,147,148,149,150,151,152,153,154,155,156,153,49,0,28,0,0,0,0,0,28,28,0,28,28,28,28,0,0,49,85,49,74,76,71,28,85,49,74,76,71,28,76,72,85,49,49,74,76,71,28,85,49,74,76,71,28,71,85,49,74,76,71,28,157,74,157,74,157,74,157,74,157,74,49,157,74,157,74,74,76,71,28,28,85,49,49,74,76,71,71,28,28,28,85,49,74,76,71,28,85,49,74,76,71,28,72,28,74,71,74,74,157,74,85,76,74,28,157,74,74,76,85,71,28,157,74,28,85,49,74,76,71,28,85,49,74,76,71,28,85,49,74,76,71,28,76,0,85,49,74,76,71,28,158,159,160,161,162,161,29,0,0,29,29,0,29,41,41,29,41,29,41,41,41,41,41,41,0,41,29,41,29,41,29,29,29,41,29,41,41,41,41,41,0,41,29,41,29,41,41,0,29,41,41,29,41,29,41,29,41,29,41,29,163,164,96,99,101,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,96,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,96,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,96,98,99,100,101,102,103,104,105,0,0,94,94,38,94,38,94,94,94,94,38,94,38,94,38,94,38,94,38,94,38,94,38,94,38,94,38,94,38,94,38,94,38,38,38,94,38,94,94,38,94,38,94,38,94,38,0,0,24,92,24,92,24,24,24,24,92,24,92,24,92,24,24,92,92,24,92,24,92,24,92,24,92,24,92,24,92,24,92,24,92,24,92,24,24,92,24,92,24,92,24,92,24,31,0,31,116,116,31,31,116,0,0,31,0,0,31,31,0,0,116,116,112,43,112,113,17,116,31,43,112,113,17,116,31,112,113,17,112,113,17,113,113,43,113,43,112,113,17,112,113,17,112,113,17,43,0,43,112,113,17,116,31,43,112,113,17,116,31,112,113,17,43,112,113,17,116,31,17,17,43,43,113,112,113,17,116,116,31,31,43,112,113,17,116,116,31,31,31,112,113,17,17,43,112,113,17,116,31,43,112,113,17,116,31,31,43,112,113,112,17,116,31,43,43,112,113,17,31,112,17,43,112,113,17,112,113,17,116,31,43,112,113,17,116,31,43,112,113,17,116,31,43,112,113,17,116,31,43,112,113,17,116,31,165,166,167,166,168,169,170,171,172,120,122,0,0,0,0,0,0,0,0,0,118,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,118,119,119,120,120,121,121,122,122,123,123,118,119,120,121,122,123,118,119,120,121,122,123,118,118,118,119,119,120,120,121,121,122,122,123,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,118,119,120,121,122,123,129,0,0,129,0,0,129,0,0,0,0,130,124,125,126,127,128,129,130,124,125,126,127,128,129,124,125,126,127,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,124,128,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,124,125,126,127,128,84,130,124,125,126,127,128,125,127,128,125,127,125,128,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,173,174,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,175,175,175,175,175,175,175,175,0,175,175,0,0,0,0,0,175,0,175,175,175,175,32,32,32,32,0,0,0,62,62,32,62,32,62,62,62,0,62,32,62,32,62,32,32,32,62,32,32,62,62,32,62,32,32,32,32,62,32,62,32,62,32,62,32,176,177,0,0,0,145,146,145,146,145,146,145,146,145,145,145,145,146,145,146,145,146,145,146,145,146,145,145,145,146,145,146,145,145,145,145,146,145,146,145,146,145,146,145,146],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],[[5,[4]]]],0,0,[6,7],[1,7],[[[2,[[0,[[8,[7]],9]]]],10],10],[[[2,[6]],11],[[5,[4]]]],[[[2,[1]],3,11],[[5,[4]]]],[[[2,[6]],3,[0,[12,13]]],[[5,[4]]]],[[[2,[1]],11],[[5,[14,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],15,16,[0,[12,13]]],[[5,[4]]]],[[[2,[6]],3,[0,[12,13]]],[[5,[11,4]]]],[[[2,[1]],3,14,[0,[12,13]]],[[5,[11,4]]]],0,[6,6],[1,1],[[]],[[]],[[[2,[[0,[[8,[7]],9]]]]],[[18,[17]]]],[[[2,[[0,[[8,[7]],9]]]]],[[0,[[8,[7]],9]]]],0,0,[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],[[5,[6]]]],[[],[[5,[1]]]],[19],[19],[19],[19],[19],[[[2,[6]]],[[5,[20,4]]]],[[[2,[[0,[[8,[7]],9]]]]],[[21,[[5,[11,4]]]]]],[[[2,[[0,[[8,[7]],9]]]],11],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],10,22],[[5,[23,4]]]],[[[2,[1]],3],[[5,[24,4]]]],[[[2,[6]]],[[5,[[21,[20]],4]]]],[[25,26],27],[[6,26],27],[[1,26],27],[[4,26],27],[[4,26],27],[[]],[[]],[[]],[[]],[28,4],[29,4],[[]],[30,4],[31,4],[32,4],[33,4],[34,4],[[[2,[6]],35,[0,[12,13]]],[[5,[4]]]],[[[2,[6]],16,36,[0,[12,13]],[37,[10]]],[[5,[38,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[12,13]]],39],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],0,[[[2,[1]],35],40],[[[2,[[0,[[8,[7]],9]]]]],21],[[[2,[1]]],[[21,[11]]]],[[[2,[1]]],[[21,[3]]]],[[[2,[1]]],[[21,[24]]]],0,[[[2,[[0,[[8,[7]],9]]]]],41],0,[25,42],0,0,0,[[[2,[[0,[[8,[7]],9]]]]],43],[[[0,[[8,[7]],9]],44,[46,[45]]],[[2,[[0,[[8,[7]],9]]]]]],[[[2,[[0,[[8,[7]],9]]]],47,39],[[5,[48,4]]]],[[[0,[[8,[7]],9]],44,49,[46,[45]]],[[2,[[0,[[8,[7]],9]]]]]],0,[[[2,[[0,[[8,[7]],9]]]],[18,[50]],[0,[12,13]]],[[5,[11,4]]]],0,[[[2,[[0,[[8,[7]],9]]]],51,52,[0,[12,13]]],[[5,[53,4]]]],[[[2,[[0,[[8,[7]],9]]]],48,[0,[12,13]]],[[5,[11,4]]]],[54],0,[[[2,[[0,[[8,[7]],9]]]],16,[0,[12,13]],55]],0,[[[2,[1]],3,[0,[12,13]]],[[5,[53,4]]]],[[[2,[1]],20],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],[18,[17]],[0,[12,13]]],[[5,[11,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[12,13]]],[[5,[11,4]]]],[[[2,[1]],24]],0,[6,5],[1,5],[4,[[37,[56]]]],[[[2,[[0,[[8,[7]],9]]]],16,[0,[12,13]]],[[5,[[18,[17]],4]]]],[[[2,[[0,[[8,[7]],9]]]],57,[59,[58]],[0,[12,13]]],[[5,[53,4]]]],[[[2,[6]],[37,[60]]],[[5,[20,4]]]],0,[[]],[[]],[[],36],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[2,[6]],3,[0,[12,13]]],[[5,[11,4]]]],[[],61],[[],61],[[],61],[[],61],[[],61],0,[[[2,[[0,[[8,[7]],9]]]],18],[[5,[4]]]],[[[2,[1]],24],[[5,[25,4]]]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[[0,[[8,[7]],9]]]]],62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[49,11,63],[[66,[[0,[64,65]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[67,[[70,[[69,[68]]]]]],[19],[19],[49],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],[[5,[71]]]],[19],[19],[19],[19],[19],[19],[[],[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]]],[[70,[[69,[68]]]]]],[3,[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],3],[[70,[[69,[68]]]]]],[[10,22],[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],10,22],[[70,[[69,[68]]]]]],[[],[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]]],[[70,[[69,[68]]]]]],[15,[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],15],[[70,[[69,[68]]]]]],[[49,11],66],[[39,47],[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],39,47],[[70,[[69,[68]]]]]],[53,[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],53],[[70,[[69,[68]]]]]],[[[74,[75]],26],27],[[[76,[75]],26],27],[[71,26],27],[[28,26],27],[[28,26],27],[[]],[[],49],[[]],[[]],[[]],[[]],[7,71],[77,28],[78,28],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[28,40],0,0,[21,[[74,[79]]]],[21,74],[15,[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],15],[[70,[[69,[68]]]]]],0,0,[74,[[21,[80]]]],[54],[20,[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],20],[[70,[[69,[68]]]]]],[[[74,[72]],81,82,[84,[83]]],[[66,[83]]]],[[[76,[72]],81],85],0,[71,5],[28,[[37,[56]]]],[86,[[70,[[69,[68]]]]]],[[[74,[[0,[72,65,73]]]],86],[[70,[[69,[68]]]]]],[[],36],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,[67,36],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[41,3],87],[[]],[[]],[[]],[[]],0,0,[[41,3,88],89],[[41,16,15,14,[37,[10]]],89],[[41,90,35,20,91,[0,[12,13]]],[[87,[89]]]],[[41,92]],0,[19],[19],[19],[19],[19],[19],[[29,26],27],[[29,26],27],[[]],[[]],[[41,3],[[87,[38]]]],[[41,3],[[87,[93]]]],[[41,3],[[87,[94]]]],[[41,15],[[87,[95]]]],[[41,3],[[87,[24]]]],0,[[],19],[[],19],[[]],[[]],[[41,3],[[87,[40]]]],[[41,15],[[87,[40]]]],0,[54],[[41,10],[[21,[92]]]],[[41,38]],[[],36],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[96,97]]]],[[],[[5,[98,97]]]],[[],[[5,[99,97]]]],[[],[[5,[100,97]]]],[[],[[5,[101,97]]]],[[],[[5,[102,97]]]],[[],[[5,[103,97]]]],[[],[[5,[104,97]]]],[[],[[5,[105,97]]]],[96,[[5,[19,106]]]],[98,[[5,[19,106]]]],[99,[[5,[19,106]]]],[100,[[5,[19,106]]]],[101,[[5,[19,106]]]],[102,[[5,[19,106]]]],[103,[[5,[19,106]]]],[104,[[5,[19,106]]]],[105,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[96,26],27],[[98,26],27],[[99,26],27],[[100,26],27],[[101,26],27],[[102,26],27],[[103,26],27],[[104,26],27],[[105,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[94,111],[94,94],[[]],[[],[[5,[94,97]]]],[[],[[5,[38,97]]]],[94,[[5,[19,106]]]],[38,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],0,[38,3],[19],[19],[19],[19],[19],[19],[[94,26],27],[[38,26],27],[[]],[[]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],19],[[],19],[[]],[[]],0,0,[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[24,14],111],[24,24],[[]],[[],[[5,[92,97]]]],[[],[[5,[24,97]]]],[92,[[5,[19,106]]]],[24,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],0,0,[19],[19],[19],[19],[19],[19],[[92,26],27],[[24,26],27],[[]],[[]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],19],[[],19],[[]],[[]],0,[24,111],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[113,113],[17,17],[[]],[[]],[[]],[113,16],[113,19],[43,[[18,[17]]]],0,0,[[],[[5,[112,97]]]],[[],[[5,[113,97]]]],[[],[[5,[17,97]]]],[112,[[5,[19,106]]]],[113,[[5,[19,106]]]],[17,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],0,0,[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[],[[5,[112]]]],[[],[[5,[113]]]],[[],[[5,[17]]]],[19],[19],[19],[19],[19],[19],[[17,17],40],[[],40],[43,[[21,[[5,[11,31]]]]]],[[43,90,11],[[5,[31]]]],[[113,114,115],[[5,[[18,[17]],116]]]],[[112,26],27],[[113,26],27],[[17,26],27],[[116,26],27],[[116,26],27],[[31,26],27],[[31,26],27],[[]],[[]],[[]],[[]],[[]],[30,116],[116,31],[[]],[28,31],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[17],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[31,40],[43,21],[46],[[16,115,46]],0,0,[54],[54],[[43,16,90,55]],[[43,16],[[5,[[18,[17]],31]]]],[112,5],[113,5],[17,5],[31,[[37,[56]]]],0,0,[[43,117,57,[59,[58]],[0,[12,13]]],[[5,[53,31]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[]],[[]],[[]],[[],36],[[],36],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[118,97]]]],[[],[[5,[119,97]]]],[[],[[5,[120,97]]]],[[],[[5,[121,97]]]],[[],[[5,[122,97]]]],[[],[[5,[123,97]]]],[118,[[5,[19,106]]]],[119,[[5,[19,106]]]],[120,[[5,[19,106]]]],[121,[[5,[19,106]]]],[122,[[5,[19,106]]]],[123,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[107,[[5,[19,106]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[118,26],27],[[119,26],27],[[120,26],27],[[121,26],27],[[122,26],27],[[123,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,19],124],[19,125],[19,126],[19,127],[19,128],[85,129],[[130,85],129],[[124,[85,[23]]],[[129,[23]]]],[[[125,[[0,[131,132,9]]]],[85,[[21,[[0,[131,132,9]]]]]]],[[129,[[21,[[0,[131,132,9]]]]]]]],[[[126,[[0,[131,132,9]]]],[85,[[0,[131,132,9]]]]],[[129,[[0,[131,132,9]]]]]],[[[127,[[0,[131,132,9]]]],[85,[[0,[131,132,9]]]]],[[129,[[0,[131,132,9]]]]]],[[[128,[[0,[131,132,9]]]],[85,[[0,[131,132,9]]]]],[[129,[[0,[131,132,9]]]]]],0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[5,[133]]]],[133,5],0,[[]],[[]],[[57,16,90,46,115,[0,[12,13]]],86],[[57,117],16],[[57,[18,[17]],46],[[5,[31]]]],[[57,16,46,115]],[[],57],[19],[19],[19],[[]],[[],19],[[57,21,134]],[[57,[18,[17]],46],[[5,[31]]]],0,[[]],0,[[57,135],10],[[57,16,46,115]],0,[[],5],[[],5],0,[[],61],[[]],0,0,[[]],[[]],0,[19],[19],[19],[[]],[81,[[5,[136,137]]]],[[],19],[[]],[138,139],[81,[[5,[47,140]]]],[81,[[141,[[18,[17]]]]]],[81,[[5,[16,142]]]],[81,[[5,[60,143]]]],0,[18,36],[[],5],[[],5],[[],61],[[]],0,0,0,0,0,0,0,[[62,11],[[5,[144,32]]]],[[]],[[]],[[]],[[]],0,0,[[62,51,52],[[5,[32]]]],0,[19],[19],[19],[19],[19],[19],[[32,26],27],[[32,26],27],[[]],[28,32],[[]],[[62,90,[0,[12,13]]],39],[[],19],[[],19],[[]],[[]],[54],[32,[[37,[56]]]],[[],36],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[145,145],[146,146],[[]],[[]],[[],[[5,[145,97]]]],[145,[[5,[19,106]]]],[107,[[5,[19,106]]]],[19],[19],[19],[19],[19],[19],[[145,26],27],[[146,26],27],[[]],[[]],[[],[[5,[108]]]],[[],[[5,[108]]]],[[],19],[[],19],[[]],[[]],0,[[],[[21,[109,110]]]],[[],[[21,[109,110]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],61],[[],61],[[]],[[]]],"p":[[3,"GatewayClientConfig"],[3,"Client"],[3,"ContractId"],[4,"ClientError"],[4,"Result"],[3,"UserClientConfig"],[3,"ClientConfig"],[8,"AsRef"],[8,"Clone"],[15,"u64"],[3,"OutPoint"],[8,"RngCore"],[8,"CryptoRng"],[3,"Preimage"],[3,"Hash"],[3,"Amount"],[3,"SpendableNote"],[3,"TieredMulti"],[15,"usize"],[3,"LightningGateway"],[3,"Vec"],[3,"PublicKey"],[3,"EpochHistory"],[3,"OutgoingContractAccount"],[3,"PaymentParameters"],[3,"Formatter"],[6,"Result"],[4,"ApiError"],[4,"LnClientError"],[3,"InvalidAmountTierError"],[4,"MintClientError"],[4,"WalletClientError"],[3,"Error"],[4,"CreationError"],[3,"Invoice"],[3,"String"],[4,"Option"],[3,"ConfirmedInvoice"],[3,"Address"],[15,"bool"],[3,"LnClient"],[15,"f64"],[3,"MintClient"],[3,"Database"],[4,"All"],[3,"Secp256k1"],[3,"Amount"],[3,"PegOut"],[3,"FederationApi"],[3,"BlindNonce"],[3,"TxOutProof"],[3,"Transaction"],[3,"TransactionId"],[3,"Demand"],[8,"FnMut"],[8,"Error"],[3,"TransactionBuilder"],[4,"BatchItem"],[3,"Accumulator"],[3,"PublicKey"],[3,"TypeId"],[3,"WalletClient"],[3,"Duration"],[8,"TryIntoOutcome"],[8,"Send"],[6,"Result"],[3,"Url"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"WsFederationConnect"],[8,"JsonRpcClient"],[8,"Sync"],[3,"WsFederationApi"],[8,"Debug"],[3,"FederationMember"],[4,"CoreError"],[4,"Error"],[3,"Client"],[3,"PeerId"],[15,"str"],[8,"Serialize"],[8,"DeserializeOwned"],[8,"QueryStrategy"],[3,"FedResponse"],[3,"Transaction"],[6,"Result"],[3,"Signature"],[4,"ContractOrOfferOutput"],[6,"BatchTx"],[15,"u32"],[3,"OutgoingContractData"],[3,"ContractAccount"],[3,"IncomingContractAccount"],[3,"IncomingContractOffer"],[3,"OutgoingPaymentKey"],[3,"DecodeError"],[3,"OutgoingPaymentKeyPrefix"],[3,"OutgoingPaymentClaimKey"],[3,"OutgoingPaymentClaimKeyPrefix"],[3,"OutgoingContractAccountKey"],[3,"OutgoingContractAccountKeyPrefix"],[3,"ConfirmedInvoiceKey"],[3,"ConfirmedInvoiceKeyPrefix"],[3,"LightningGatewayKey"],[3,"Error"],[8,"Write"],[4,"DecodingError"],[15,"u8"],[3,"Global"],[3,"ContractInput"],[3,"NoteIssuanceRequest"],[3,"NoteIssuanceRequests"],[3,"SigResponse"],[3,"Tiered"],[4,"CoinFinalizationError"],[3,"FeeConsensus"],[3,"CoinKey"],[3,"CoinKeyPrefix"],[3,"PendingCoinsKey"],[3,"PendingCoinsKeyPrefix"],[3,"OutputFinalizationKey"],[3,"OutputFinalizationKeyPrefix"],[3,"ValidHistory"],[3,"UnionResponses"],[3,"Retry404"],[3,"EventuallyConsistent"],[3,"CurrentConsensus"],[4,"QueryStep"],[3,"TrustAllPeers"],[8,"Hash"],[8,"Eq"],[3,"KeyPair"],[4,"Input"],[4,"Output"],[8,"Decodable"],[3,"Error"],[4,"Network"],[4,"Currency"],[4,"ParseAmountError"],[6,"Result"],[4,"ParseAmountError"],[4,"Error"],[3,"Txid"],[3,"PegInKey"],[3,"PegInPrefixKey"],[13,"MintApiError"],[13,"WalletClientError"],[13,"MintClientError"],[13,"LnClientError"],[13,"InvoiceError"],[13,"InvalidInvoice"],[13,"Underfunded"],[13,"InvalidTransaction"],[13,"HttpError"],[13,"InvalidAmountTier"],[8,"IFederationApi"],[13,"RpcError"],[13,"TransactionError"],[13,"TransactionRejected"],[13,"OutPointOutOfRange"],[13,"CoreError"],[13,"ApiError"],[13,"NoConfirmedInvoice"],[13,"InvalidSignature"],[13,"InvalidIssuanceId"],[13,"InvalidAmountTier"],[13,"ApiError"],[13,"FinalizationError"],[13,"OutputNotReadyYet"],[13,"InvalidOutcomeWrongStructure"],[13,"InvalidOutcomeType"],[13,"Request"],[13,"Finished"],[3,"ClientContext"],[13,"PegInProofError"],[13,"ApiError"]]},\
"mint_rpc_client":{"doc":"","t":[13,3,4,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["ApiCall","Cli","Commands","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","arg","method","url"],"q":["mint_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_rpc_client::Commands","",""],"d":["","","","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Args that will be serialized and send with the request","The rpc method","The url to use for the api call"],"i":[7,0,0,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,4,7,4,7,4,7,13,13,13],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[13,"ApiCall"]]},\
"tbs":{"doc":"Threshold Blind Signatures","t":[12,12,12,12,12,12,12,12,12,12,8,16,3,3,3,3,3,8,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,17,5,5,3,12,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,0,0,14,0,5,5,5,5,5,5],"n":["0","0","0","0","0","0","0","0","0","0","Aggregatable","Aggregate","AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FromRandom","Message","MessagePoint","PubKeyPoint","PublicKeyShare","Scalar","SecretKeyShare","Signature","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","aggregate","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_le_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_valid_shares","conditional_negate","conditional_negate","conditional_negate","conditional_select","conditional_select","conditional_select","ct_eq","ct_eq","ct_eq","dealer_keygen","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double","double","encode_compressed","encode_compressed","encode_compressed","encode_compressed","encode_compressed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_bytes_wide","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_hash","from_random","from_random","from_raw","from_repr","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","identity","identity","identity","identity","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into","into","invert","invert","is_identity","is_identity","is_identity","is_identity","is_odd","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","multiplicative_generator","neg","neg","neg","neg","neg","neg","neg","one","one","pairing_with","pairing_with","point_impl","poly","pow","pow_vartime","random","random","root_of_unity","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","sqrt","sqrt","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_le_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_repr","to_string","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","zero","zero","zeroize","zeroize","zeroize","HASH_TAG","hash_bytes_to_curve","hash_to_curve","Poly","_pd","borrow","borrow_mut","coefficients","coefficients","evaluate","fmt","from","from","interpolate_zero","into","random","try_from","try_into","type_id","vzip","g1","g2","impl_serde_g","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize"],"q":["tbstbs::hash","","","tbs::poly","","","","","","","","","","","","","","","","","tbs::serde_impl","","","","tbs::serde_impl::g1","","tbs::serde_impl::g2","","tbs::serde_impl::scalar",""],"d":["","","","","","","","","","","","","","","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …","","Represents an element of the scalar field $\\\\mathbb{F}_q$ …","","","","","","","Adds <code>rhs</code> to <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines a sufficent amount of valid blinded signature …","","","","","","","","","","<code>threshold</code>: how many signature shares are needed to produce …","","","","","","","","","","","","","","Doubles this field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Attempts to convert a little-endian byte representation of …","","","","","Converts a 512-bit little endian integer into a <code>Scalar</code> by …","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","<strong>IMPORTANT</strong>: <code>from_bytes</code> includes a tag in the hash, this …","","","Converts from an integer represented in little endian into …","","Attempts to deserialize an uncompressed element. See …","","","Attempts to deserialize an uncompressed element. See …","Attempts to deserialize an uncompressed element, not …","","Attempts to deserialize an uncompressed element, not …","","Returns a fixed generator of the group. See <code>notes::design</code> …","","","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","Returns the identity of the group: the point at infinity.","","Returns the identity of the group: the point at infinity.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Computes the multiplicative inverse of this element, …","","Returns true if this element is the identity (the point at …","","Returns true if this element is the identity (the point at …","","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","","Multiplies <code>rhs</code> by <code>self</code>, returning the result.","","","","","","","","","","","","","","","Negates <code>self</code>.","","","","","","","","Returns one, the multiplicative identity.","","","","","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","","","","","","","","","","","","","","","Computes the square root of this element, if it exists.","","Squares this element.","","","","","Subtracts <code>rhs</code> from <code>self</code>, returning the result.","","","","","","","","","","","","","Converts an element of <code>Scalar</code> into a byte representation in","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns zero, the additive identity.","","","","","","<strong>IMPORTANT</strong>: the byte hashing fn includes a tag, this doesn…","","","","","","","","","","Returns the argument unchanged.","Interpolates the constant factor of a polynomial defined …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[10,11,12,13,14,15,16,17,7,1,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,40,0,10,11,12,13,14,15,16,17,7,1,2,4,10,11,12,13,14,15,16,17,7,1,2,4,1,10,11,12,13,14,15,16,17,7,1,2,4,10,11,12,13,14,15,16,17,7,1,2,4,0,1,2,4,1,2,4,1,2,4,0,1,2,4,10,11,12,13,14,15,16,17,7,1,1,14,15,16,17,7,10,11,12,13,14,15,16,17,7,1,2,4,10,11,12,13,14,15,16,17,7,1,1,2,2,4,4,10,11,12,13,14,15,16,17,7,1,1,2,2,2,4,4,4,7,1,2,4,2,4,1,2,4,2,4,7,41,1,1,1,2,2,4,4,2,2,4,4,2,2,4,4,0,12,14,15,16,17,7,2,2,4,4,2,4,10,11,12,13,14,15,16,17,7,1,2,4,1,1,2,2,4,4,1,2,4,2,4,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,1,1,2,2,4,4,1,1,2,4,0,0,1,1,13,1,1,0,10,11,12,13,14,15,16,17,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,2,4,2,4,2,4,1,10,11,12,13,14,15,16,17,7,1,2,4,11,1,1,2,4,2,2,4,4,10,11,12,13,14,15,16,17,7,1,2,4,10,11,12,13,14,15,16,17,7,1,2,4,10,11,12,13,14,15,16,17,7,1,2,4,0,0,0,10,11,12,13,14,15,16,17,7,1,2,4,2,4,2,4,1,1,1,2,4,0,0,0,0,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[6],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[8]]]],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[7,7],[1,1],[2,2],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,16],[18],[18],[18],[[1,1,18],1],[[2,2,18],2],[[4,4,18],4],[[1,1],18],[[2,2],18],[[4,4],18],[[6,6]],[[],1],[[],2],[[],4],[[],[[19,[10]]]],[[],[[19,[11]]]],[[],[[19,[12]]]],[[],[[19,[13]]]],[[],[[19,[14]]]],[[],[[19,[15]]]],[[],[[19,[16]]]],[[],[[19,[17]]]],[[],[[19,[7]]]],[1,1],[1,1],[14],[15],[16],[17],[7],[[10,10],20],[[11,11],20],[[12,12],20],[[13,13],20],[[14,14],20],[[15,15],20],[[16,16],20],[[17,17],20],[[7,7],20],[[1,1],20],[[2,2],20],[[4,4],20],[[10,21],22],[[11,21],22],[[12,21],22],[[13,21],22],[[14,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[7,21],22],[[1,21],[[19,[23]]]],[[1,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,1],[[]],[3,2],[[]],[3,2],[5,4],[5,4],[[]],[[],7],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],1],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[26,7],[[]],[[],1],[[],1],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],2],[[],2],[[],4],[[],4],0,[12],[14],[15],[16],[17],[7],[[],2],[[],2],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[25,[1]]]],[1,[[25,[1]]]],[2,18],[2,18],[4,18],[4,18],[1,18],[2,18],[4,18],[2,18],[4,18],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,1]],[[2,1],3],[[2,1],3],[[2,1],3],[[4,1]],[[4,1],5],[[4,1],5],[[4,1],5],[[1,1]],[[1,1]],[[],1],[1,1],[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[[],1],[[],1],[2],[4],0,0,[1,1],[1,1],[[],13],[27,1],[[],1],0,[10,19],[11,19],[12,19],[13,19],[14,19],[15,19],[16,19],[17,19],[7,19],[[14,11],15],[1,[[25,[1]]]],[1,[[25,[1]]]],[1,1],[1,1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[[],1],[1],[2],[4],[2],[4],[2],[4],[1,[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,10],[1],[[],28],[[],28],[[],28],[2],[2],[4],[4],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[13,16],17],[[7,17,12],20],[[14,15,10],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],0,[[],30],[26,30],0,0,[[]],[[]],[31,32],0,[[31,33]],[[[31,[34,34]],21],22],[35,31],[[]],[[[0,[36,37]]]],[[]],[6,31],[[],19],[[],19],[[],29],[[]],0,0,0,0,[38,[[19,[2]]]],[[2,39],19],[38,[[19,[4]]]],[[4,39],19],[38,[[19,[1]]]],[[1,39],19]],"p":[[3,"Scalar"],[3,"MessagePoint"],[3,"G1Projective"],[3,"PubKeyPoint"],[3,"G2Projective"],[15,"usize"],[3,"Message"],[3,"Lsb0"],[3,"BitArray"],[3,"PublicKeyShare"],[3,"SecretKeyShare"],[3,"AggregatePublicKey"],[3,"BlindingKey"],[3,"BlindedMessage"],[3,"BlindedSignatureShare"],[3,"BlindedSignature"],[3,"Signature"],[3,"Choice"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u64"],[3,"CtOption"],[8,"Digest"],[8,"RngCore"],[3,"String"],[3,"TypeId"],[8,"Group"],[3,"Poly"],[3,"Iter"],[8,"Into"],[8,"Debug"],[3,"Vec"],[8,"Iterator"],[8,"Clone"],[8,"Deserializer"],[8,"Serializer"],[8,"Aggregatable"],[8,"FromRandom"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
