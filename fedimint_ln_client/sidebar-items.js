window.SIDEBAR_ITEMS = {"constant":[["KIND",""],["OUTGOING_LN_CONTRACT_TIMELOCK","Number of blocks until outgoing lightning contracts times out and user client can get refund"]],"enum":[["InternalPayState","The high-level state of an pay operation internal to the federation, started with [`LightningClientExt::pay_bolt11_invoice`]."],["LightningClientStateMachines",""],["LightningConsensusItem",""],["LightningError",""],["LightningMeta",""],["LightningOutput","Represents an output of the Lightning module."],["LightningOutputOutcome",""],["LnPayState","The high-level state of a pay operation over lightning, started with [`LightningClientExt::pay_bolt11_invoice`]."],["LnReceiveState","The high-level state of a reissue operation started with [`LightningClientExt::create_bolt11_invoice`]."],["PayError",""],["PayType",""]],"fn":[["create_incoming_contract_output",""],["invoice_has_internal_payment_markers",""],["invoice_routes_back_to_federation",""],["ln_operation",""],["network_to_currency",""]],"mod":[["api",""],["config",""],["contracts",""],["db",""],["incoming","Incoming State Machine"],["pay",""],["receive",""],["route_hints","Hack to get a route hint that implements `serde` traits."],["serde_routing_fees",""]],"struct":[["ContractAccount",""],["ContractOutput",""],["LightningClientContext",""],["LightningClientGen",""],["LightningClientModule",""],["LightningCommonGen",""],["LightningGateway","Information a gateway registers with a fed"],["LightningInput",""],["LightningModuleTypes",""]],"trait":[["LightningClientExt",""]]};