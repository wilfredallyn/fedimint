(function() {var implementors = {
"minimint":[["impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"minimint/modules/wallet/struct.Wallet.html\" title=\"struct minimint::modules::wallet::Wallet\">Wallet</a>&gt; for <a class=\"struct\" href=\"minimint/consensus/struct.MinimintConsensus.html\" title=\"struct minimint::consensus::MinimintConsensus\">MinimintConsensus</a>&lt;R&gt;"],["impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"minimint/modules/mint/struct.Mint.html\" title=\"struct minimint::modules::mint::Mint\">Mint</a>&gt; for <a class=\"struct\" href=\"minimint/consensus/struct.MinimintConsensus.html\" title=\"struct minimint::consensus::MinimintConsensus\">MinimintConsensus</a>&lt;R&gt;"],["impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"minimint/modules/ln/struct.LightningModule.html\" title=\"struct minimint::modules::ln::LightningModule\">LightningModule</a>&gt; for <a class=\"struct\" href=\"minimint/consensus/struct.MinimintConsensus.html\" title=\"struct minimint::consensus::MinimintConsensus\">MinimintConsensus</a>&lt;R&gt;"],["impl&lt;R:&nbsp;<a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"minimint/consensus/struct.MinimintConsensus.html\" title=\"struct minimint::consensus::MinimintConsensus\">MinimintConsensus</a>&lt;R&gt;&gt; for <a class=\"struct\" href=\"minimint/consensus/struct.MinimintConsensus.html\" title=\"struct minimint::consensus::MinimintConsensus\">MinimintConsensus</a>&lt;R&gt;"]],
"minimint_api":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"minimint_api/struct.TransactionId.html\" title=\"struct minimint_api::TransactionId\">TransactionId</a>"]],
"minimint_ln":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"minimint_ln/contracts/incoming/struct.OfferId.html\" title=\"struct minimint_ln::contracts::incoming::OfferId\">OfferId</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"minimint_ln/contracts/struct.ContractId.html\" title=\"struct minimint_ln::contracts::ContractId\">ContractId</a>"]],
"mint_client":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"minimint_core/config/struct.ClientConfig.html\" title=\"struct minimint_core::config::ClientConfig\">ClientConfig</a>&gt; for <a class=\"struct\" href=\"mint_client/struct.GatewayClientConfig.html\" title=\"struct mint_client::GatewayClientConfig\">GatewayClientConfig</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"minimint_core/config/struct.ClientConfig.html\" title=\"struct minimint_core::config::ClientConfig\">ClientConfig</a>&gt; for <a class=\"struct\" href=\"mint_client/struct.UserClientConfig.html\" title=\"struct mint_client::UserClientConfig\">UserClientConfig</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()