window.SIDEBAR_ITEMS = {"constant":[["MODULE_KEY_GLOBAL",""],["MODULE_KEY_LN",""],["MODULE_KEY_MINT",""],["MODULE_KEY_WALLET","Temporary constant for the modules we already have"]],"enum":[["FinalizationError",""]],"macro":[["erased_eq",""],["newtype_impl_display_passthrough","Implementes the `Display` trait for dyn newtypes whose traits implement `Display`"],["newtype_impl_eq_passthrough",""]],"mod":[["client",""],["encode",""],["server","Fedimint Core Server module interface"]],"struct":[["ConsensusItem","An owned, immutable output of a [`Transaction`] before it was finalized"],["Decoder","Decoder for module associated types"],["Input","An owned, immutable input to a [`Transaction`]"],["KeyPair","Opaque data structure that holds a keypair consisting of a secret and a public key."],["Output","An owned, immutable output of a [`Transaction`]"],["OutputOutcome","An owned, immutable output of a [`Transaction`] before it was finalized"],["Signature",""],["Transaction","Transaction that was already signed"]],"trait":[["ModuleConsensusItem",""],["ModuleDecode",""],["ModuleInput","Something that can be an [`Input`] in a [`Transaction`]"],["ModuleOutput","Something that can be an [`Output`] in a [`Transaction`]"],["ModuleOutputOutcome",""],["PluginConsensusItem",""],["PluginDecode","Module Decoder trait"],["PluginInput",""],["PluginOutput",""],["PluginOutputOutcome",""]],"type":[["ModuleKey","A module key identifing a module"]]};