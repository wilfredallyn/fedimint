window.SIDEBAR_ITEMS = {"enum":[["FinalizationError",""]],"macro":[["module_dyn_newtype_impl_encode_decode","Implement `Encodable` and `Decodable` for a “module dyn newtype”"],["module_plugin_trait_define","Define a “plugin” trait"]],"mod":[["client",""],["encode",""],["server","Fedimint Core Server module interface"]],"struct":[["ClientModule",""],["FedimintClientCore",""],["Input","An owned, immutable input to a [`Transaction`]"],["KeyPair","Opaque data structure that holds a keypair consisting of a secret and a public key."],["Output","An owned, immutable output of a [`Transaction`]"],["OutputOutcome","An owned, immutable output of a [`Transaction`] before it was finalized"],["PendingOutput","An owned, immutable output of a [`Transaction`] before it was finalized"],["PollPendingOutputs","Result of [`ClientModulePlugin::poll_pending_outputs`]"],["Signature",""],["SpendableOutput","An owned, immutable output of a [`Transaction`] after it was finalized (so it’s spendable)"],["Transaction","Transaction that was already signed"]],"trait":[["ClientModulePlugin",""],["IClientModule","Client side module interface"],["ModuleCommon","Common functionality of a Fedimint module"],["ModuleInput","Something that can be an [`Input`] in a [`Transaction`]"],["ModuleOutput","Something that can be an [`Output`] in a [`Transaction`]"],["ModuleOutputOutcome",""],["ModulePendingOutput","A pending output - tracked and persisted by the client"],["ModuleSpendableOutput","A spendable output - tracked and persisted by the client"],["PluginInput",""],["PluginOutput",""],["PluginOutputOutcome",""],["PluginPendingOutput",""],["PluginSpendableOutput",""]],"type":[["ModuleKey","A module key identifing a module"]]};