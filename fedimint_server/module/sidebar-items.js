window.SIDEBAR_ITEMS = {"enum":[["ConsensusProposal",""],["ModuleError",""]],"macro":[["__api_endpoint","Example"],["api_endpoint","Example"]],"mod":[["audit",""],["registry",""],["version","Fedimint consensus and API versioning."]],"struct":[["ApiAuth","Authentication uses the hashed user password in PHC format"],["ApiEndpoint","Definition of an API endpoint defined by a module `M`."],["ApiEndpointContext","State made available to all API endpoints for handling a request"],["ApiError",""],["ApiRequest","All requests from client to server contain these fields"],["ApiVersion","Api version supported by a core server or a client/server module at a given [`ModuleConsensusVersion`]."],["CoreConsensusVersion","Consensus version of a core server"],["DynCommonModuleGen",""],["DynServerModuleGen",""],["InputMeta",""],["ModuleConsensusVersion","Consensus version of a specific module instance"],["MultiApiVersion","Multiple, disjoint, minimum required or maximum supported, [`ApiVersion`]s."],["MultiApiVersionIter",""],["PeerHandle","A handle passed to [`ServerModuleGen::distributed_gen`]"],["SerdeModuleEncoding","Creates a struct that can be used to make our module-decodable structs interact with `serde`-based APIs (HBBFT, jsonrpsee). It creates a wrapper that holds the data as serialized"],["SupportedApiVersionsSummary",""],["SupportedCoreApiVersions",""],["SupportedModuleApiVersions",""],["TransactionItemAmount","Information about the amount represented by an input or output."]],"trait":[["CommonModuleGen",""],["ExtendsCommonModuleGen",""],["IDynCommonModuleGen","Operations common to Server and Client side module gen dyn newtypes"],["IServerModuleGen","Interface for Module Generation"],["IntoModuleError","Extension trait with a function to map `Result`s used by modules to `ModuleError`"],["ModuleCommon","Module associated types required by both client and server"],["ServerModule",""],["ServerModuleGen","Module Generation trait with associated types"],["TypedApiEndpoint",""]],"type":[["ApiRequestErased",""]]};